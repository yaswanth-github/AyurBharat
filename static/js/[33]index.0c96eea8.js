!function () { try { var e = "undefined" != typeof window ? window : "undefined" != typeof global ? global : "undefined" != typeof self ? self : {}, t = (new Error).stack; t && (e._sentryDebugIds = e._sentryDebugIds || {}, e._sentryDebugIds[t] = "c141b627-da50-4495-836a-057d39b3588e", e._sentryDebugIdIdentifier = "sentry-dbid-c141b627-da50-4495-836a-057d39b3588e") } catch (e) { } }(), (() => { var e = { 57253: (e, t, n) => { var a = { "./absent.svg": [36905, 6905], "./agreement-rtl.svg": [60569, 569], "./agreement.svg": [84685, 4685], "./api.svg": [97069, 7069], "./arrow-dropdown-down.svg": [82206, 2206], "./arrow-dropdown-up.svg": [3083, 3083], "./arrow-left.svg": [75017, 5017], "./arrow-right.svg": [6427, 6427], "./arrow-thin-down.svg": [21923, 1923], "./arrow-thin-up.svg": [1994, 1994], "./boy-rtl.svg": [96143, 6143], "./boy.svg": [54522, 4522], "./bullet-alarming.svg": [92730, 2730], "./bullet-common.svg": [43945, 3945], "./calendar.svg": [56032, 7512], "./call-center-triage.svg": [13746, 3746], "./caution.svg": [38591, 8591], "./ce.svg": [49461, 9461], "./checkmark.svg": [92965, 2965], "./chevron-down.svg": [99896, 9896], "./chevron-left.svg": [50737, 737], "./chevron-right.svg": [40679, 679], "./chevron-up.svg": [78803, 8803], "./clear.svg": [99787, 9787], "./close.svg": [30829, 829], "./consultation-24.svg": [52508, 2508], "./consultation.svg": [24189, 4189], "./desktop.svg": [28683, 8683], "./dont-know.svg": [97130, 7130], "./dots.svg": [49434, 9434], "./emergency-ambulance.svg": [65631, 5631], "./emergency.svg": [64217, 4217], "./error-filled.svg": [80965, 965], "./female.svg": [48167, 8167], "./frame.svg": [45298, 5298], "./fullscreen.svg": [42562, 2562], "./info-filled.svg": [23310, 3310], "./info.svg": [82835, 2835], "./instruction.svg": [18439, 8439], "./location.svg": [16032, 6032], "./lock.svg": [82609, 2609], "./male.svg": [9196, 9196], "./manufacturer.svg": [14823, 4823], "./menu.svg": [80016, 16], "./minus.svg": [77436, 7436], "./mobile.svg": [48433, 8433], "./my-location.svg": [73971, 3971], "./myself.svg": [33639, 3639], "./no-internet-illustration-rtl.svg": [8338, 8338], "./no-internet-illustration.svg": [97040], "./no-internet.svg": [27371], "./no.svg": [98747, 8747], "./plus-circled-filled.svg": [28025, 8025], "./plus.svg": [19625, 9625], "./podium-rtl.svg": [99747, 9747], "./podium.svg": [98838, 8838], "./present.svg": [34543, 4543], "./remove-filled.svg": [60369, 369], "./rotate.svg": [25205, 5205], "./sad.svg": [42175, 2175], "./search.svg": [10783, 783], "./self-care.svg": [57320, 7320], "./someone-else.svg": [89534, 9534], "./star-filled.svg": [59982, 9982], "./star-outlined.svg": [25404, 5404], "./success-filled.svg": [50022, 22], "./symptom-checker.svg": [2798, 2798], "./tablet.svg": [80332, 332], "./unknown.svg": [96938, 6938], "./warning-filled.svg": [91609, 1609], "./yes.svg": [65579, 5579] }; function i(e) { if (!n.o(a, e)) return Promise.resolve().then((() => { var t = new Error("Cannot find module '" + e + "'"); throw t.code = "MODULE_NOT_FOUND", t })); var t = a[e], i = t[0]; return Promise.all(t.slice(1).map(n.e)).then((() => n(i))) } i.keys = () => Object.keys(a), i.id = 57253, e.exports = i }, 24102: (e, t, n) => { var a = { "./UiLoaderSkeletonCommon.vue": [54347, 4387], "./UiLoaderSkeletonQuestion.vue": [78220, 8220] }; function i(e) { if (!n.o(a, e)) return Promise.resolve().then((() => { var t = new Error("Cannot find module '" + e + "'"); throw t.code = "MODULE_NOT_FOUND", t })); var t = a[e], i = t[0]; return n.e(t[1]).then((() => n(i))) } i.keys = () => Object.keys(a), i.id = 24102, e.exports = i }, 46475: (e, t, n) => { "use strict"; n.d(t, { Z: () => i }); var a = n(67939); function i() { function e(e, t = null) { return { event_type: "click", event_object: "info_button", event_data: { type: "questions", data: t ? [t] : [], category: e } } } function t(t, n = null) { a.c.trackEvent("Info button", { event_details: e(t, n) }, ["infermedicaAnalytics"]) } return { handleInfoButtonClick: t, prepareInfoButtonEventDetails: e } } }, 95535: (e, t, n) => { "use strict"; n.d(t, { Z: () => r }); n(4302); var a = n(78551), i = n(35684), s = n(83950), o = n(7975); function r() { const e = (0, i.V)(), { translate: t } = (0, s.Z)(), n = (0, a.Fl)((() => { var t; return null === (t = e.settings) || void 0 === t ? void 0 : t.intentSurvey })), r = (0, a.Fl)((() => { var e; return null === (e = n.value) || void 0 === e ? void 0 : e.clientName })), l = (0, a.Fl)((() => { var e, t, a, i; return null === (e = null === (t = n.value) || void 0 === t || null === (a = t.questions) || void 0 === a || null === (i = a.contactForm) || void 0 === i ? void 0 : i.enabled) || void 0 === e || e })); function c(e) { var t, a, i, s; return null === (t = null === (a = n.value) || void 0 === a || null === (i = a.answers) || void 0 === i || null === (s = i[e]) || void 0 === s ? void 0 : s.enabled) || void 0 === t || t } const u = (0, a.Fl)((() => { var t; return !c("urgentCare") || ["ar", "nl"].includes(null !== (t = e.language) && void 0 !== t ? t : "") })), d = (0, a.Fl)((() => [{ id: o.INTENT_SURVEY_MEDICAL_PROFESSIONAL, label: t("common.yes"), icon: "yes" }, { id: o.INTENT_SURVEY_RECOVERING_AT_HOME, label: t("common.no"), icon: "no" }, { id: o.INTENT_SURVEY_NOT_SURE, label: t("common.dontKnow"), icon: "dont-know" }])), m = (0, a.Fl)((() => [{ id: o.INTENT_SURVEY_PRIMARY_CARE, label: t("intentSurvey.contact.primaryCare"), rationaleTitle: t("intentSurvey.primaryCareRationale.title"), rationaleTranslationKey: "primaryCareRationale" }, { id: o.INTENT_SURVEY_SPECIALIST_CARE, label: t("intentSurvey.contact.specialistCare") }, { id: o.INTENT_SURVEY_ALLIED_HEALTH_CARE, label: t("intentSurvey.contact.alliedHealthCare"), rationaleTitle: t("intentSurvey.alliedHealthRationale.title"), rationaleTranslationKey: "alliedHealthRationale", disabled: !c("alliedHealth") }, { id: o.INTENT_SURVEY_URGENT_CARE, label: t("intentSurvey.contact.urgentCare"), rationaleTitle: t("intentSurvey.urgentCareRationale.title"), rationaleTranslationKey: "urgentCareRationale", disabled: u.value }, { id: o.INTENT_SURVEY_EMERGENCY_CARE, label: t("intentSurvey.contact.emergencyCare") }, { id: o.INTENT_SURVEY_NOT_SURE, label: t("intentSurvey.contact.notSure") }].filter((e => { var t; return !(null !== (t = e.disabled) && void 0 !== t && t) })))), v = (0, a.Fl)((() => [{ id: o.INTENT_SURVEY_CLIENT_HELPLINE, label: t("intentSurvey.contactMethod.clientHelpline", { client: r.value }), disabled: !c("clientHelpline") }, { id: o.INTENT_SURVEY_TELECONSULTATION, label: t("intentSurvey.contactMethod.teleconsultation"), rationaleTitle: t("intentSurvey.teleconsultationRationale.title"), rationaleTranslationKey: "teleconsultationRationale" }, { id: o.INTENT_SURVEY_IN_PERSON_VISIT, label: t("intentSurvey.contactMethod.inPerson") }, { id: o.INTENT_SURVEY_CLIENT_APPLICATION, label: t("intentSurvey.contactMethod.clientApplication", { client: r.value }), disabled: !c("clientApplication") }, { id: o.INTENT_SURVEY_NOT_SURE, label: t("intentSurvey.contactMethod.notSure") }].filter((e => { var t; return !(null !== (t = e.disabled) && void 0 !== t && t) && l.value })))), p = (0, a.Fl)((() => [{ id: o.INTENT_SURVEY_EMERGENCY_WITH_AMBULANCE, label: t("common.yes"), icon: "yes" }, { id: o.INTENT_SURVEY_EMERGENCY_NO_AMBULANCE, label: t("common.no"), icon: "no" }])), g = (0, a.Fl)((() => [{ id: o.INTENT_SURVEY_RECOVERING_AT_HOME, label: t("results.plansSurvey.recoveringAtHome") }, { id: o.INTENT_SURVEY_ALLIED_HEALTH_CARE, label: t("results.plansSurvey.alliedHealth"), disabled: !c("alliedHealth") }, { id: o.INTENT_SURVEY_PRIMARY_CARE, label: t("results.plansSurvey.primaryCare"), shouldShowContactChoice: l.value }, { id: o.INTENT_SURVEY_SPECIALIST_CARE, label: t("results.plansSurvey.specialistCare"), shouldShowContactChoice: l.value }, { id: o.INTENT_SURVEY_URGENT_CARE, label: t("results.plansSurvey.urgentCare"), disabled: u.value }, { id: o.INTENT_SURVEY_EMERGENCY_NO_AMBULANCE, label: t("results.plansSurvey.emergencyNoAmbulance") }, { id: o.INTENT_SURVEY_EMERGENCY_WITH_AMBULANCE, label: t("results.plansSurvey.emergencyWithAmbulance") }, { id: o.INTENT_SURVEY_NOT_SURE, label: t("results.plansSurvey.notSure") }].filter((e => { var t; return !(null !== (t = e.disabled) && void 0 !== t && t) })))); return { consultMedicalProfessionalChoices: d, kindOfCareChoices: m, ambulanceChoices: p, contactFormChoices: v, plansSurveyChoices: g } } }, 3862: (e, t, n) => { "use strict"; n.d(t, { Z: () => u }); n(92346); var a = n(78551), i = n(67939), s = n(35684), o = n(81360), r = n(57481); const l = { ar: "العربيّة", cs: "Čeština", de: "Deutsch", en: "English", es: "Español", fr: "Français", it: "Italiano", nl: "Nederlands", pl: "Polski", "pt-br": "Português Brasileiro", sk: "Slovensky", ro: "Română", ru: "Русский", tr: "Türkçe", uk: "Українська", "zh-hans": "简体中文" }; var c = n(70225); function u() { const e = (0, o.J)(), t = (0, s.V)(), n = (0, r.f)(), u = (0, a.Fl)((() => t.interfaceLanguage)), d = (0, a.Fl)((() => l[u.value])), m = (0, a.Fl)((() => t.languages ? t.languages.map((e => ({ code: e, label: l[e] }))).sort(((e, t) => e.label.localeCompare(t.label))) : [])); async function v(a) { u.value !== a.code && ((0, c.QC)("language-change", { language: a.code }), e.isLoading = !0, i.c.trackEvent("Form Language Change", { event_details: { event_type: "click", event_object: "language", event_data: { type: "language", data: [a.code] } }, form_lang: u.value, to_lang: a.code, change: `${u.value}|${a.code}` }), await t.configureForm({ token: t.token, language: a.code }), await n.restartInterview()) } return { interfaceLanguage: u, languages: m, languageLabel: d, changeLanguage: v } } }, 43789: (e, t, n) => { "use strict"; n.d(t, { Z: () => a }); const a = { devServerApi: "", apiPath: "/api/form", enableTestFeatures: !1, enableSeoUrlScheme: !0, isEmbeddedMobileApp: !1, sentryUrl: "https://b2e327bd13a843a0ac6cbe4ccc548ea1@o56838.ingest.sentry.io/1493331", title: "Symptomate", appVersion: "3.11.0", hCaptchaJsUrl: "https://js.hcaptcha.com/1/api.js", hCaptchaEndpointUrl: "https://hcaptcha.com", hCaptchaReportApiUrl: "https://accounts.hcaptcha.com", hCaptchaAssetHostUrl: "https://newassets.hcaptcha.com", hCaptchaImgHostUrl: "https://imgs.hcaptcha.com", hCaptchaSentryEnabled: "false", reportStylesheet: "" } }, 66417: (e, t, n) => { "use strict"; n.d(t, { D: () => o, k: () => r }); n(4302), n(47921), n(66469); const { languages: a } = navigator, i = ["en"], s = void 0 !== a && a.length > 0, o = s ? a : [], r = e => { var t; return i.includes(e) && s && null !== (t = a.filter((t => t.startsWith(e))).find((e => e.includes("-")))) && void 0 !== t ? t : e } }, 53004: (e, t, n) => { "use strict"; n.d(t, { j: () => U, Z: () => x }); var a = n(19818), i = n(64635), s = (n(46743), n(59538), n(78551)), o = n(15195), r = n(10045), l = n(35684); n(4302), n(66469); function c(e) { const t = ["/suggest/", "/diagnosis/", "/rationale/", "/triage/", "/lab_recommend/", "/recommend_specialist/"]; return t.some((t => { var n; return (null !== (n = null === e || void 0 === e ? void 0 : e.url) && void 0 !== n ? n : "").includes(t) })) } var u = n(39682), d = n(43789); let m, v; window.initializeHCaptcha = () => { const e = (0, l.V)(), t = document.createElement("div"); document.body.appendChild(t), (0, s.m0)((() => { t.innerHTML = "", v = hcaptcha.render(t, { size: "invisible", sitekey: m, hl: e.language }) })) }; var p = (0, i.Z)("execute"); class g { constructor() { Object.defineProperty(this, p, { value: h }), this.activePromise = null } async resolve() { if (null === this.activePromise) { this.activePromise = (0, a.Z)(this, p)[p](); const e = await this.activePromise; return this.activePromise = null, e } return await this.activePromise, this.resolve() } } async function h() { try { u.u3.log("hCaptcha validation started.."); const e = await hcaptcha.execute(v, { async: !0 }); return e.response } catch (e) { throw this.activePromise = null, new Error(`hCaptcha error: ${e}`) } } function f(e) { const t = (0, o.Oh)({ onload: "initializeHCaptcha", render: "explicit", endpoint: d.Z.hCaptchaEndpointUrl, reportapi: d.Z.hCaptchaReportApiUrl, assethost: d.Z.hCaptchaAssetHostUrl, imghost: d.Z.hCaptchaImgHostUrl, sentry: d.Z.hCaptchaSentryEnabled, hl: e }), n = `${d.Z.hCaptchaJsUrl}?${t}`, a = document.createElement("script"), i = document.querySelector("head"); a.src = n.toString(), null === i || void 0 === i || i.appendChild(a) } function y() { const e = new g; let t = !0; r["default"].interceptors.request.use((n => c(n) && t ? e.resolve().then((e => (n.data.rvt = e, n.headers["captcha-token"] = e, Promise.resolve(n)))) : Promise.resolve(n))), r["default"].interceptors.response.use((e => (c(null === e || void 0 === e ? void 0 : e.config) && (t = "true" === e.headers["infermedica-require-captcha"]), e))) } function _(e, t) { void 0 === window.hcaptcha && (m = e, f(t), y()) } n(47921); function w(e) { const t = document.createElement("script"), n = document.querySelector("head"); t.src = `https://www.google.com/recaptcha/enterprise.js?render=${e}&onload=recaptchaLoadedCallback`, n.appendChild(t) } function b(e) { r["default"].interceptors.request.use((t => { var n; return "post" === t.method && null !== (n = t.url) && void 0 !== n && n.startsWith("/api") ? new Promise(((n, a) => { grecaptcha.enterprise.execute(e, { action: "api_call" }).then((e => { t.data.rvt = e, t.headers["captcha-token"] = e, n(t) }), (() => { a(t) })) })) : t }), (e => Promise.reject(e))) } function S(e) { var t; null !== (t = window.grecaptcha) && void 0 !== t && t.enterprise || (w(e), b(e)) } window.recaptchaLoadedCallback = () => { const e = document.querySelector(".g-recaptcha-response"); e && (e.setAttribute("aria-hidden", "true"), e.setAttribute("aria-label", "recaptcha")) }; const k = { recaptcha: S, hcaptcha: _ }, U = Object.keys(k); function x(e) { return "string" === typeof e ? k[e] : null } }, 64555: (e, t, n) => { "use strict"; n.d(t, { I: () => a }); n(89620); function a(e) { return JSON.parse(JSON.stringify(e)) } }, 63785: (e, t, n) => { "use strict"; n.d(t, { Pf: () => s, _v: () => a, kE: () => i }); n(46743); async function a(e = 0) { return new Promise((t => { setTimeout(t, e) })) } function i(e) { return "number" === typeof e && !Number.isNaN(e) || "string" === typeof e && e === Number(e).toString() } function s(e) { return Array.isArray(e) ? !!e.length : "object" === typeof e && null !== e ? !!Object.keys(e).length : !!e } }, 41102: (e, t, n) => { "use strict"; n.d(t, { A: () => s, Q: () => o }); var a = n(11715), i = n(43789); function s(e) { return (0, a.Z)({ method: "POST", url: `${i.Z.apiPath}/lab_recommend/`, data: e }) } function o(e) { return (0, a.Z)({ method: "GET", url: `${i.Z.apiPath}/lab_tests/`, params: { age_unit: e.age.unit, age: e.age.value } }) } }, 11715: (e, t, n) => { "use strict"; n.d(t, { Z: () => s }); var a = n(10045), i = n(39682); async function s(e) { try { const t = await (0, a["default"])(e); return null === t || void 0 === t ? void 0 : t.data } catch (t) { throw (0, i.iR)(t), t } } }, 81360: (e, t, n) => { "use strict"; n.d(t, { J: () => s }); var a = n(7089), i = n(57481); const s = (0, a.Q_)("controls", { state: () => ({ isInvalid: !0, isTouched: !1, isLoading: !1, isReported: !1, noInternet: !1, blockInterviewProgress: !1, condition: null, isFocusTracked: !0, lastFocusedElement: null, isConfirmed: !1, iframeOffset: null, parentHeight: null, currentlyOpenPanel: null, intentSurveyRationaleTitle: null, intentSurveyrationaleTranslationKey: null }), getters: {}, actions: { reset() { const { noInternet: e, isLoading: t, iframeOffset: n, parentHeight: a } = this; this.$reset(), this.isLoading = t, this.noInternet = e, this.iframeOffset = n, this.parentHeight = a }, async openPanel(e) { const t = (0, i.f)(); await t.changeRouterState(), this.isFocusTracked = !1, this.currentlyOpenPanel && (e.parent = this.currentlyOpenPanel), this.currentlyOpenPanel = e }, async closePanel(e = !1) { var t; const n = (0, i.f)(); if (await n.changeRouterState(), this.currentlyOpenPanel = e || null === (t = this.currentlyOpenPanel) || void 0 === t || !t.parent ? null : this.currentlyOpenPanel.parent, !this.currentlyOpenPanel) { var a; if (!document.body.classList.contains("focus-is-hidden")) null === (a = this.lastFocusedElement) || void 0 === a || a.focus({ preventScroll: !0 }); this.isFocusTracked = !0 } } } }) }, 35684: (e, t, n) => { "use strict"; n.d(t, { V: () => D }); var a = n(96358), i = (n(71756), n(16366), n(31781), n(4302), n(81289), n(59538), n(66469), n(43007)), s = n(7089), o = n(10045), r = n(32112), l = n.n(r), c = n(92648), u = n(22522), d = n(57481), m = n(99229), v = n(39682), p = n(64555); const g = () => window.performance.navigation && 1 === window.performance.navigation.type, h = () => void 0 !== window.performance.getEntriesByType && window.performance.getEntriesByType("navigation").map((e => e.type)).includes("reload"), f = void 0 !== window.performance && (g() || h()); var y = n(53004), _ = n(30466), w = n(87502), b = n(11715), S = n(43789); function k() { return (0, b.Z)({ method: "GET", url: `${S.Z.apiPath}/feature_flags/` }) } function U(e) { return (0, b.Z)({ method: "POST", url: `${S.Z.apiPath}/diagnosis/`, data: e, metadata: { canBlockInterview: !0, shouldEncryptPayload: !0 } }) } function x(e) { return (0, b.Z)({ method: "GET", url: `${S.Z.apiPath}/metadata/`, headers: { "Access-Token": e } }) } function I(e) { return (0, b.Z)({ method: "POST", url: `${S.Z.apiPath}/suggest/`, data: e, metadata: { canBlockInterview: !0, shouldEncryptPayload: !0 } }) } function C(e) { return (0, b.Z)({ method: "GET", url: `${S.Z.apiPath}/symptoms/`, params: { age: e.value, age_unit: e.unit }, metadata: { canBlockInterview: !0 } }) } function F(e) { return (0, b.Z)({ method: "GET", url: `${S.Z.apiPath}/risk_factors/`, params: { age: e.value, age_unit: e.unit }, metadata: { canBlockInterview: !0 } }) } function E(e) { return (0, b.Z)({ method: "GET", url: `${S.Z.apiPath}/conditions/`, params: { age: e.value, age_unit: e.unit }, metadata: { canBlockInterview: !0 } }) } const P = JSON.parse('{"default":true,"token":"form","languages":["en"],"settings":{"showHeader":true,"showSideMenu":true,"showCeMarking":true,"showBusiness":false,"showLanguageSelector":true,"showTermsOfService":true,"termsOfServiceDate":"2022-10-11","showPrivacyPolicy":false,"instructionUrl":"/instructions/triage/:lang/instruction-2.0.pdf","enablePediatrics":false,"enableDataExporter":true,"enablePatientEducation":false,"enableTriageThree":false,"showFooterOnMobile":true,"progressBarType":"with-dots","PDFSettings":{"showPdfDownload":true}},"featureFlags":{"enabled":false},"questions":[{"type":"message"},{"type":"agreement"},{"type":"third_person"},{"type":"patient_sex"},{"type":"patient_age"},{"type":"risk_factors"},{"type":"initial_symptoms"},{"type":"intent_survey_consult_medical_professional"},{"type":"intent_survey_kind_of_care"},{"type":"intent_survey_contact_form"},{"type":"intent_survey_ambulance"},{"type":"regions"},{"type":"intelligent_interview"},{"type":"results"}]}'), T = JSON.parse('[{"default":true,"token":"interview","languages":["en","ar","cs","de","es","fr","it","nl","pl","pt-br","ru","sk","tr","uk","zh-hans"],"settings":{"customFavicon":"/favicon.ico","showHeader":true,"showSideMenu":true,"showCeMarking":true,"showBusiness":true,"showLanguageSelector":true,"showTermsOfService":true,"showPrivacyPolicy":true,"termsOfServiceDate":"2022-09-19","privacyPolicyDate":"2022-09-19","instructionUrl":"/instructions/triage/:lang/instruction-2.0.pdf","enablePediatrics":true,"enableDataExporter":true,"showFooterOnMobile":true,"progressBarType":"with-dots","enablePatientEducation":true,"PDFSettings":{"showPdfDownload":true},"intentSurvey":{"answers":{"clientHelpline":{"enabled":false},"clientApplication":{"enabled":false}}}},"featureFlags":{"enabled":true,"defaultStorage":"sessionStorage"},"questions":[{"type":"message","handleParams":false},{"type":"agreement","handleParams":false},{"type":"third_person","handleParams":false},{"type":"patient_sex","handleParams":false},{"type":"patient_age","handleParams":false},{"type":"risk_factors","handleParams":false},{"type":"initial_symptoms","handleParams":false},{"type":"intent_survey_consult_medical_professional"},{"type":"intent_survey_kind_of_care"},{"type":"intent_survey_contact_form"},{"type":"intent_survey_ambulance"},{"type":"regions"},{"type":"intelligent_interview"},{"type":"results","title":"interviewStep.results","version":"modern","componentSettings":{"triage":{"specialistRecommender":{"showCTA":false}}}}],"overwrites":{"en":{"questions":[{"type":"results","componentSettings":{"conditions":{"articles":{"show":true,"set":"en"}}}}]},"ar":{"settings":{"intentSurvey":{"answers":{"urgentCare":{"enabled":false}}}}},"nl":{"settings":{"intentSurvey":{"answers":{"urgentCare":{"enabled":false}}}}}}},{"token":"form","inherits":"interview","settings":{"enablePatientEducation":true,"linkAsEvent":true,"PDFSettings":{"showPdfDownload":false}},"featureFlags":{"enabled":false},"questionModificators":[{"type":"follow_up","remove":true},{"type":"follow_up_feedback","remove":true}]},{"token":"form_dev","dev":true,"languages":["en","pl"],"settings":{"showHeader":true,"showSideMenu":true,"showCeMarking":true,"showBusiness":true,"showLanguageSelector":true,"showTermsOfService":true,"showPrivacyPolicy":true,"instructionUrl":"/instructions/triage/:lang/instruction-2.0.pdf","enablePediatrics":false,"enableDataExporter":true,"showFooterOnMobile":false,"progressBarType":"with-dots","enablePatientEducation":true},"questions":[{"type":"message"},{"type":"agreement"},{"type":"third_person"},{"type":"patient_sex"},{"type":"patient_age"},{"type":"risk_factors"},{"type":"initial_symptoms"},{"type":"regions"},{"type":"intelligent_interview"},{"type":"results","title":"interviewStep.results","version":"modern","componentSettings":{"triage":{"specialistRecommender":{"show":false,"showCTA":false}}}}]}]'); function W(e, t) { return e.map(((e, n) => { const a = null === t || void 0 === t ? void 0 : t.find((t => e.type === t.type && (void 0 === t.index || n === t.index))); return a ? a.remove ? null : l()(e, a) : e })).filter((e => !!e)) } function A() { const e = new Map; return T.forEach((t => { if ((S.Z.enableTestFeatures || !t.dev) && (!t.inherits || e.has(t.inherits) || "default" === t.inherits)) if (e.has(t.token)) v.u3.error("Duplicated form token"); else if (t.inherits) { const n = "default" === t.inherits ? P : e.get(t.inherits), a = n.default, i = l()(n, t, { arrayMerge: (e, t) => t }); a && (i.default = !1), t.questionModificators && (i.questions = W(i.questions, t.questionModificators)), e.set(i.token, i) } else e.set(t.token, t) })), Array.from(e.values()) } const D = (0, s.Q_)("form", { state: () => ({ config: A(), language: void 0, formSetup: null, formQuestions: [], sessionId: null, captchaConfig: null, encryptionEnabled: !1, interviewId: "", indexFormQuestions: 0, riskFactors: [], diagnosis: [], indexDiagnosis: 0, suggestRequested: !1, shouldStop: !1, authorized: void 0, isSecurityError: !1, serverError: null, consideredDiagnoses: 0, summaryConceptsCache: {}, featureFlags: {}, pageReloaded: !window.parentIFrame && f || !1, analyticsInitialized: !1 }), getters: { token() { var e, t; return null !== (e = null === (t = this.formSetup) || void 0 === t ? void 0 : t.token) && void 0 !== e ? e : null }, hasFormSetup() { return void 0 !== this.token }, settings() { var e, t; return null !== (e = null === (t = this.formSetup) || void 0 === t ? void 0 : t.settings) && void 0 !== e ? e : null }, resultsSettings() { return this.formQuestionByQuestionType("results") }, languages() { var e, t; return null !== (e = null === (t = this.formSetup) || void 0 === t ? void 0 : t.languages) && void 0 !== e ? e : [] }, interfaceLanguage() { return this.language }, showLanguageSelector() { var e; return !0 === (null === (e = this.settings) || void 0 === e ? void 0 : e.showLanguageSelector) && this.languages.length > 1 }, apiAlias() { var e; return (null === (e = this.settings) || void 0 === e ? void 0 : e.apiAlias) || ("zh-hans" === this.language ? "zh" : this.language) }, isRtl() { return "ar" === this.interfaceLanguage }, isMedicalDevice() { var e, t; return null === (e = null === (t = this.settings) || void 0 === t ? void 0 : t.isMedicalDevice) || void 0 === e || e }, instructionURL() { var e, t, n; return this.interfaceLanguage && null !== (e = null === (t = this.settings) || void 0 === t || null === (n = t.instructionUrl) || void 0 === n ? void 0 : n.replace(":lang", this.interfaceLanguage)) && void 0 !== e ? e : null }, indexFormQuestionFirstUnskipped() { return Math.max(this.formQuestions.findIndex((e => !e.skipped), 0)) }, isFirstDisplayableQuestion() { return this.indexFormQuestions === this.indexFormQuestionFirstUnskipped }, formQuestionByQuestionType() { const { formQuestions: e } = this; return t => { var n; return null !== (n = e.find((e => (null === e || void 0 === e ? void 0 : e.type) === t))) && void 0 !== n ? n : null } }, currentFormQuestion() { return this.formQuestions[this.indexFormQuestions] }, formQuestionByIndex() { const { formQuestions: e } = this; return t => e[t] }, indexOfDynamicInterview() { return this.formQuestions.findIndex((e => "intelligent_interview" === e.type)) }, isIntelligentInterview() { return this.indexFormQuestions === this.indexOfDynamicInterview }, currentDiagnosisQuestion() { return this.diagnosis[this.indexDiagnosis] }, current() { return this.isIntelligentInterview ? this.currentDiagnosisQuestion : this.currentFormQuestion }, currentIsRequired() { var e; return !!this.isIntelligentInterview || !(null === (e = this.current) || void 0 === e || !e.required) }, currentHasHiddenNextButton() { var e, t; const n = ["patient_sex", "third_person", "single", "intent_survey_consult_medical_professional", "intent_survey_ambulance"]; return n.includes(null !== (e = null === (t = this.current) || void 0 === t ? void 0 : t.type) && void 0 !== e ? e : "") }, steps() { let e = 0; return this.formQuestions.reduce(((t, n, a) => { const { type: i, title: s, skipped: o } = n, r = t.find((e => e.name === n.title)); let l = a; return r ? (r.skipped && !o && (r.skipped = o, r.index = l), t) : ("intelligent_interview" === i && (e = a, l = e), "intelligent_interview" !== i && e > 0 && (l += this.diagnosis.length), [...t, { name: s, index: l, id: s.split(".")[1], skipped: o }]) }), []).filter((e => !e.skipped)) }, currentStep() { var e; return null === (e = this.currentFormQuestion) || void 0 === e ? void 0 : e.title }, index() { return this.indexFormQuestions + this.indexDiagnosis }, hasSuggest() { return this.diagnosis.findIndex((e => "suggest" === (null === e || void 0 === e ? void 0 : e.type))) > -1 }, isResults() { var e; return "results" === (null === (e = this.current) || void 0 === e ? void 0 : e.type) }, interviewIdWithReturns() { const e = (0, u.z)(); return this.interviewId ? `${this.interviewId}-c${e.returns}` : null }, id() { return this.formSetup ? this.config.indexOf(this.formSetup) : null }, configTokens() { return this.config.map((e => e.token)) }, hasPediatrics() { var e, t, n; return null !== (e = null === (t = this.formSetup) || void 0 === t || null === (n = t.settings) || void 0 === n ? void 0 : n.enablePediatrics) && void 0 !== e && e }, hasTermsOfService() { var e, t, n; return null !== (e = null === (t = this.formSetup) || void 0 === t || null === (n = t.settings) || void 0 === n ? void 0 : n.showTermsOfService) && void 0 !== e && e }, hasPrivacyPolicy() { var e, t, n; return null !== (e = null === (t = this.formSetup) || void 0 === t || null === (n = t.settings) || void 0 === n ? void 0 : n.showPrivacyPolicy) && void 0 !== e && e }, info() { const { current: e } = this; return t => { var n; if (t) { const n = "risk_factors" === e.type ? this.riskFactors : null === e || void 0 === e ? void 0 : e.items, a = n.find((e => t === e.id)); return { explication: null === a || void 0 === a ? void 0 : a.explication, instruction: null === a || void 0 === a ? void 0 : a.instruction } } const a = ["group_single", "group_multiple"], { type: i } = e; return { explication: null === e || void 0 === e ? void 0 : e.explication, name: i && !a.includes(i) || null === e || void 0 === e || null === (n = e.items[0]) || void 0 === n ? void 0 : n.name, instruction: null === e || void 0 === e ? void 0 : e.instruction } } }, intelligentInterviewSettings() { var e, t; return null !== (e = null === (t = this.formQuestions[this.indexOfDynamicInterview]) || void 0 === t ? void 0 : t.settings) && void 0 !== e ? e : null }, isAuthorized() { return this.authorized }, isUnauthorized() { return !1 === this.authorized }, isServerError() { return null !== this.serverError }, summaryConceptsHash() { const e = (0, u.z)(); return `${this.interfaceLanguage}-${e.patientSex}-${e.patientAge.value}-${e.patientAge.unit}` }, summaryConcepts() { return this.summaryConceptsCache[this.summaryConceptsHash] || new Map } }, actions: { modifyConfiguration(e) { const t = (0, d.f)(); if (!S.Z.enableTestFeatures) return e; const n = e.questions.find((e => "results" === e.type)), a = { config_pediatrics: t => { ["true", "false"].includes(t) && (e.settings.enablePediatrics = JSON.parse(t)) }, config_specialist: e => { var t; if (!n) return; const a = JSON.parse(e); n.componentSettings = l()(null !== (t = n.componentSettings) && void 0 !== t ? t : {}, { triage: { specialistRecommender: a } }) }, config_articles: e => { var t; if (!n) return; const a = JSON.parse(e); n.componentSettings = l()(null !== (t = n.componentSettings) && void 0 !== t ? t : {}, { conditions: { articles: a } }) }, config_settings: t => { const n = JSON.parse(t); e.settings = l()(e.settings, n) }, mobile_app: e => { ["true", "false"].includes(e) && (S.Z.isEmbeddedMobileApp = JSON.parse(e)) } }; return Object.keys(a).forEach((e => { if (Object.hasOwnProperty.call(t.queryParams, e)) try { a[e](t.queryParams[e]) } catch (n) { console.error(`Query parameter "${e}" can't be applied. Check if JSON format is proper. \n`, n) } })), e }, async configureForm({ token: e, language: t }) { var n, s, o, r; const u = this.config.find((t => t.token === e)) || this.config.find((e => !!e.default)) || this.config[0]; if (!u) throw new Error("No correct form"); this.interviewId = (0, c.Z)(); const d = u.languages.includes(t) ? t : u.languages[0]; let g = (0, p.I)(u); if (u.overwrites && u.overwrites[d]) { const e = u.overwrites[d]; e.settings && (g.settings = l()(u.settings, e.settings)), e.questions && (g.questions = W(u.questions, e.questions)) } g = this.modifyConfiguration(g), await this.fetchMetadata(d), await this.setupFeatureFlags({ enabled: null !== (n = null === (s = g) || void 0 === s || null === (o = s.featureFlags) || void 0 === o ? void 0 : o.enabled) && void 0 !== n && n }), this.formSetup = g, this.formQuestions = ((null === (r = this.formSetup) || void 0 === r ? void 0 : r.questions) || []).map((e => { const t = (0, a.Z)({}, _.U[e.type]); if (!t || !t.component) { const t = `No correct formQuestion ${e.type}`; return v.u3.error(t), v.CA.captureMessage(t), null } const n = l()(t, e); return n.component = (0, i.Xl)(t.component), n })).filter((e => !!e)), await this.setLanguage(d), await this.setCustomViews(g), (0, m.kq)() }, async setLanguage(e) { var t, n, a, i, s, r, l; this.language = e; const c = "ar" === this.interfaceLanguage; var u, d; (document.documentElement.lang = null !== (t = this.interfaceLanguage) && void 0 !== t ? t : "", document.documentElement.dir = c ? "rtl" : "ltr", o["default"].defaults.headers.common["interface-lang"] = null !== (n = this.interfaceLanguage) && void 0 !== n ? n : "", o["default"].defaults.headers.common["x-user-language"] = null !== (a = this.interfaceLanguage) && void 0 !== a ? a : "", o["default"].defaults.headers.common["api-alias"] = null !== (i = this.apiAlias) && void 0 !== i ? i : "", null !== (s = window.__analytics) && void 0 !== s && null !== (r = s.infermedicaAnalytics) && void 0 !== r && r.appId) && (o["default"].defaults.headers.common["app-id"] = null === (u = window.__analytics) || void 0 === u || null === (d = u.infermedicaAnalytics) || void 0 === d ? void 0 : d.appId); await (0, w.g)(this.interfaceLanguage, null === (l = this.formSetup) || void 0 === l ? void 0 : l.token) }, async setCustomViews(e) { }, async fetchMetadata(e) { const t = (0, d.f)(); try { if (null === this.sessionId) { const { session_id: e, captcha_config: n, encryption_enabled: a } = await x(t.queryParams.token); this.sessionId = e, this.captchaConfig = n, this.encryptionEnabled = a } if (this.sessionId && (o["default"].defaults.headers.common["s-id"] = this.sessionId), this.captchaConfig) { const t = (0, y.Z)(this.captchaConfig.method); null === t || void 0 === t || t(this.captchaConfig.site_key, e) } } catch (n) { throw (0, v.iR)(n), n } }, async fetchRiskFactors(e) { if (!this.riskFactors.length) try { this.riskFactors = await I(e) } catch (t) { throw (0, v.iR)(t), t } }, async suggest(e) { const t = 3; try { const n = await I(e); n.length > t && (this.diagnosis = [{ extras: {}, text: "", type: "suggest", items: n }]) } catch (n) { throw (0, v.iR)(n), n } finally { this.suggestRequested = !0 } }, async fetchDiagnosis(e) { const t = (0, u.z)(), { conditions: n, should_stop: a, question: i } = await U(e); this.serverError || (t.conditions = null !== n && void 0 !== n ? n : [], this.shouldStop = null !== a && void 0 !== a && a, a || i && (this.diagnosis = [...this.diagnosis, i])) }, reset() { this.formQuestions.forEach((e => { e.skipped = void 0 })), this.indexFormQuestions = 0, this.riskFactors = [], this.diagnosis = [], this.indexDiagnosis = 0, this.shouldStop = !1, this.suggestRequested = !1, this.serverError = null, this.interviewId = (0, c.Z)() }, async fetchSummaryConcepts() { const e = (0, u.z)(); if (this.summaryConcepts.size || void 0 === e.patientAge.value) return; const t = { value: e.patientAge.value, unit: e.patientAge.unit }; await Promise.all([this.fetchSummaryRiskFactors(t), this.fetchSummarySymptoms(t), this.fetchSummaryConditions(t)]).then((([e, t, n]) => { const a = [...e, ...t, ...n], i = new Map; a.forEach((e => i.set(e.id, e))), this.summaryConceptsCache[this.summaryConceptsHash] = i, this.consideredDiagnoses = n.length })) }, async fetchSummaryRiskFactors(e) { try { return await F({ value: e.value, unit: e.unit }) } catch (t) { throw (0, v.iR)(t), t } }, async fetchSummarySymptoms(e) { try { return await C({ value: e.value, unit: e.unit }) } catch (t) { throw (0, v.iR)(t), t } }, async fetchSummaryConditions(e) { try { return await E({ value: e.value, unit: e.unit }) } catch (t) { throw (0, v.iR)(t), t } }, async setupFeatureFlags({ enabled: e }) { if (e) try { this.featureFlags = await k() } catch (t) { (0, v.iR)(t) } } } }) }, 22522: (e, t, n) => { "use strict"; n.d(t, { z: () => k }); var a, i, s, o = n(96358), r = (n(4302), n(81289), n(53705), n(71756), n(92346), n(5538), n(66469), n(7089)), l = n(90425), c = n.n(l), u = n(35684), d = n(64555), m = n(70225); (function (e) { e["Month"] = "month", e["Year"] = "year" })(a || (a = {})), function (e) { e["Female"] = "female", e["Male"] = "male" }(i || (i = {})), function (e) { e["Both"] = "both", e["Female"] = "female", e["Male"] = "male" }(s || (s = {})); var v = n(64719), p = n(3936), g = n(87502), h = n(11715), f = n(43789); function y(e) { return (0, h.Z)({ method: "POST", url: `${f.Z.apiPath}/triage/`, data: e, metadata: { canBlockInterview: !0, shouldEncryptPayload: !0 } }) } function _(e) { return (0, h.Z)({ method: "POST", url: `${f.Z.apiPath}/recommend_specialist/`, data: e, metadata: { canBlockInterview: !0, shouldEncryptPayload: !0 } }) } var w = n(41102); function b(e) { return "evidence" in e } function S(e, t, n) { if (!e || !t) return []; const a = t[n]; return a ? a.map((t => (0, o.Z)((0, o.Z)({}, t), {}, { lab_tests: t.lab_tests.map((t => e.find((e => t.id === e.id)))).filter((e => void 0 !== e)) }))) : [] } const k = (0, r.Q_)("interview", { state: () => ({ patientAge: { value: void 0, unit: "year" }, patientDateOfBirth: "", patientSex: "", thirdPerson: void 0, evidence: {}, triage: null, recommendedSpecialist: null, labTestPanels: null, conditions: [], confirmedAgreements: [], startTime: Date.now(), endTime: 0, returns: 0, intentSurveyAnswers: {}, unconfirmedIntentSurveyAnswers: {}, intakeCta: { status: v.e.UNSENT, id: "", magicLink: "" } }), getters: { patientHash() { return [this.thirdPerson, this.patientSex, this.patientDateOfBirth, this.patientAge.value, this.patientAge.unit].join("-") }, articleSet() { var e, t, n; const a = (0, u.V)(), i = null === (e = a.resultsSettings) || void 0 === e || null === (t = e.componentSettings) || void 0 === t || null === (n = t.conditions) || void 0 === n ? void 0 : n.articles; return null !== i && void 0 !== i && i.show && null !== i && void 0 !== i && i.set ? i.set : null }, extras() { var e, t; const n = (0, u.V)(), a = {}; return this.thirdPerson && (a.enable_third_person_questions = !0), null !== n && void 0 !== n && null !== (e = n.settings) && void 0 !== e && e.enableTriageThree && (a.enable_triage_3 = !0), null !== n && void 0 !== n && null !== (t = n.settings) && void 0 !== t && t.enablePatientEducation && (a.enable_patient_education = !0), (0, o.Z)({ article_set: this.articleSet, enable_explanations: !0, include_condition_details: !0, include_extended_conditions: !0 }, a) }, data() { return { sex: this.patientSex, age: this.patientAge, extras: this.extras, evidence: this.patientEvidences } }, triageLevel() { var e; return null === (e = this.triage) || void 0 === e ? void 0 : e.triage_level }, hasConsultationTriageLevel() { var e, t; return ["consultation_24", "consultation"].includes(null !== (e = null === (t = this.triage) || void 0 === t ? void 0 : t.triage_level) && void 0 !== e ? e : "") }, evidenceByIndex() { return e => this.evidence[e] }, patientEvidences() { var e; return null === (e = Object.values(this.evidence)) || void 0 === e ? void 0 : e.reduce(((e, { evidence: t }) => (Array.isArray(t) ? t.forEach((({ choice_id: t, id: n, source: a }) => { e.push((0, d.I)({ choice_id: t, id: n, source: a })) })) : e.push((0, d.I)({ choice_id: t.choice_id, id: t.id, source: t.source })), e)), []) }, detailedEvidences() { var e; const t = (0, u.V)(); return null === (e = Object.values(this.evidence)) || void 0 === e ? void 0 : e.reduce(((e, { evidence: n, questionType: a }) => (Array.isArray(n) ? n.forEach((({ choice_id: n, id: i, source: s, name: o, common_name: r }) => { const l = t.summaryConcepts.get(i); e.push((0, d.I)({ choice_id: n, id: i, source: s, questionType: a, name: (null === l || void 0 === l ? void 0 : l.name) || o, common_name: (null === l || void 0 === l ? void 0 : l.common_name) || r, evidenceDetails: l })) })) : n && e.push((0, d.I)({ choice_id: n.choice_id, id: n.id, source: n.source, questionType: a, name: n.name, common_name: n.common_name, evidenceDetails: t.summaryConcepts.get(n.id) })), e)), []) }, exporterEvidences() { return this.detailedEvidences.map((e => { const { id: t, evidenceDetails: n, choice_id: a, source: i, explanation: s } = e, o = { id: t, choice_id: a, name: null === n || void 0 === n ? void 0 : n.name, common_name: null === n || void 0 === n ? void 0 : n.common_name }; return i && (o.source = i), s && (o.explanation = s), "initial" !== i && "predefined" !== i || (o.initial = !0), "suggest" === i && (o.suggest = !0), o })) }, groupedEvidences() { return Object.values(this.evidence).reduce(((e, t) => { const { questionType: n, evidence: a } = t, i = Array.isArray(a) ? [...e[n] || [], ...a] : [...e[n] || [], a]; return (0, d.I)((0, o.Z)((0, o.Z)({}, e), {}, { [n]: i.length > 0 ? i : void 0 })) }), {}) }, interviewDuration() { const e = this.endTime - this.startTime, t = Math.floor(e / 6e4), n = Math.floor(e % 6e4 / 1e3); return { minutes: t, seconds: n } } }, actions: { setThirdPerson(e) { void 0 !== this.thirdPerson && this.thirdPerson !== e && (this.clearSex(), this.clearAge()), this.thirdPerson = e }, setSex(e) { this.patientSex && this.patientSex !== e && this.clearAge(), this.patientSex = e }, clearSex() { const e = (0, u.V)(); this.patientSex = ""; const t = e.formQuestionByQuestionType("patient_sex"); t && (t.skipped = !1) }, clearAge() { const e = (0, u.V)(); this.patientAge = { value: void 0, unit: a.Year }, this.patientDateOfBirth = ""; const t = e.formQuestionByQuestionType("patient_age"); t && (t.skipped = !1) }, setEvidence(e) { var t; const n = (0, u.V)(), { index: a, indexDiagnosis: i, indexFormQuestions: s, indexOfDynamicInterview: r, isIntelligentInterview: l, diagnosis: d, formQuestionByIndex: m } = n, v = b(e) ? null === e || void 0 === e ? void 0 : e.index : s, p = b(e) ? null === e || void 0 === e ? void 0 : e.index : a, { type: g } = m(v), h = null === (t = this.evidenceByIndex(p)) || void 0 === t ? void 0 : t.evidence; if (c()(h, e)) return; const f = Object.keys(this.evidence).map((e => parseInt(e, 10))).sort(((e, t) => e - t)), y = f.indexOf(p); if (y > -1) { this.evidence = (0, o.Z)((0, o.Z)({}, f.slice(0, y + 1).reduce(((e, t) => (e[t] = this.evidence[t], e)), {})), {}, { [p]: { evidence: b(e) ? null === e || void 0 === e ? void 0 : e.evidence : e, questionType: g } }); const t = 0 !== i || l ? i + 1 : i; return n.diagnosis = d.slice(0, t), p < r && (n.suggestRequested = !1), void (n.shouldStop && this.clearResultsScreenData()) } this.evidence[p] = { evidence: b(e) ? null === e || void 0 === e ? void 0 : e.evidence : e, questionType: g } }, clearResultsScreenData() { const e = (0, u.V)(); e.shouldStop = !1, this.triage = null, this.recommendedSpecialist = null, this.labTestPanels = null, this.intakeCta = { status: v.e.UNSENT, id: "", magicLink: "" } }, setConfirmedEvidence(e) { const t = (0, u.V)(), { currentFormQuestion: { type: n }, current: { type: a }, isIntelligentInterview: i } = t; (0, m.VM)({ answer: b(e) ? null === e || void 0 === e ? void 0 : e.evidence : e, type: i ? "intelligent_diagnosis" : n, questionType: i ? a : void 0 }), this.setEvidence(e) }, async fetchTriage() { if (this.triage) return; const e = await y(this.data); null !== e && void 0 !== e && e.triage_level || (e.triage_level = p.$.Consultation), this.triage = e }, async fetchRecommendedSpecialist() { var e, t, n, a, i, s, o; const r = (0, u.V)(); if (this.recommendedSpecialist) return; const l = null === (e = this.triage) || void 0 === e ? void 0 : e.triage_level, c = null === (t = r.resultsSettings) || void 0 === t || null === (n = t.componentSettings) || void 0 === n || null === (a = n.triage) || void 0 === a ? void 0 : a.specialistRecommender, d = null === (i = r.resultsSettings) || void 0 === i || null === (s = i.componentSettings) || void 0 === s || null === (o = s.triage) || void 0 === o ? void 0 : o.channel, m = null === c || void 0 === c ? void 0 : c.triageLevels, v = (() => !!m && (!!l && m.includes(l)))(), p = null === d || void 0 === d ? void 0 : d.triageLevels, h = (() => !!p && (!!l && p.includes(l)))(), f = ((null === c || void 0 === c ? void 0 : c.show) || (null === c || void 0 === c ? void 0 : c.enableDataExporter) || (null === d || void 0 === d ? void 0 : d.show) || (null === d || void 0 === d ? void 0 : d.enableDataExporter)) && (v || h || this.hasConsultationTriageLevel); if (!f) return; const y = await _(this.data); if (m && !v) y.recommended_specialist = void 0; else if (null !== c && void 0 !== c && c.mapping) { const e = Object.keys(c.mapping).find((e => { var t; return e === (null === y || void 0 === y || null === (t = y.recommended_specialist) || void 0 === t ? void 0 : t.id) })); if (e) { var w, b; const { id: t, hide: n, label: a } = c.mapping[e]; t && a && null !== y && void 0 !== y && null !== (w = y.recommended_specialist) && void 0 !== w && w.id && null !== y && void 0 !== y && null !== (b = y.recommended_specialist) && void 0 !== b && b.name && (y.recommended_specialist.name = g.ag.global.t(a), y.recommended_specialist.id = t), n && (y.recommended_specialist = void 0) } } m && !h ? y.recommended_channel = void 0 : null !== d && void 0 !== d && d.mapping && null !== y && void 0 !== y && y.recommended_channel && y.recommended_channel in d.mapping && (y.recommended_channel = d.mapping[null === y || void 0 === y ? void 0 : y.recommended_channel]), this.recommendedSpecialist = y }, async fetchLabTests() { const e = !1; if (!e) return; const [t, n] = await Promise.all([(0, w.Q)(this.data), (0, w.A)(this.data)]); this.labTestPanels = { recommended: S(t, n, "recommended"), preventive: S(t, n, "obligatory") } }, async fetchResultData() { await this.fetchTriage(), await this.fetchRecommendedSpecialist(), await this.fetchLabTests() } } }) }, 57481: (e, t, n) => { "use strict"; n.d(t, { f: () => f, o: () => h }); n(16366), n(31781), n(53705), n(47921), n(59538); var a = n(43007), i = n(78551), s = n(7089), o = n(15195), r = n(70754), l = n(61926), c = n(35684), u = n(81360), d = n(22522), m = n(99229), v = n(63785), p = n(39682), g = n(43789); const h = (0, a.XI)(null), f = (0, s.Q_)("navigation", { state: () => ({ force: !1, queryParams: {}, isStatePushed: !1, navigationProcessId: null }), getters: { baseUrl() { const e = (0, c.V)(); return g.Z.enableSeoUrlScheme ? `/${e.languages[0] === e.language ? "" : `${e.language}/`}${e.token}` : `/${e.token}/${e.language}` }, url() { const e = (0, c.V)(); return `${this.baseUrl}/${e.index}?${(0, o.Oh)(this.queryParams)}` } }, actions: { async changeRouterState(e = !1) { this.isStatePushed && !e ? await this.$router.replace(this.url) : (await this.$router.push(`${this.baseUrl}/${(0, l.h)()}?${(0, o.Oh)(this.queryParams)}`), e || (await this.$router.replace(this.url), this.isStatePushed = !0)) }, async handlePopstate() { if ("full" === this.force) return await this.$router.replace(this.baseUrl), void await this.$router.back(); if ("single" === this.force) return this.force = !1, void await this.changeRouterState(); this.force = "single", await this.$router.forward(); const e = (0, u.J)(), t = (0, c.V)(); e.currentlyOpenPanel ? await e.closePanel() : t.isFirstDisplayableQuestion && !this.navigationProcessId ? (this.force = "full", await this.$router.back()) : await this.navigate(-1) }, removeForwardIntentSurveyAnswers() { var e; const t = (0, c.V)(), n = (0, d.z)(), a = null === (e = t.current) || void 0 === e ? void 0 : e.type, i = n.unconfirmedIntentSurveyAnswers[a] !== n.intentSurveyAnswers[a]; if (!i) return; const s = t.formQuestions.filter((e => e.type.startsWith("intent_survey"))), o = s.findIndex((e => e.type === a)), r = s.slice(o + 1); r.forEach((({ type: e }) => { delete n.intentSurveyAnswers[e], delete n.unconfirmedIntentSurveyAnswers[e] })) }, async trySkippingQuestion(e, t, n) { const a = (0, u.J)(), i = (0, c.V)(); if (!e.handleParams) return !1; const s = await e.handleParams(e.settings, t); return s && e.skipOnAnswer ? (i.indexFormQuestions = t, i.formQuestionByIndex(t).skipped = !0, a.isInvalid = !1, this.navigationProcessId = null, await this.navigate(n ? -1 : 1), !0) : (i.formQuestionByIndex(t).skipped = !1, !1) }, throwIfNavigationInterruption(e) { if (this.navigationProcessId !== e) throw new Error("navigation-interrupted") }, async navigate(e, t = !1, n = !1) { const a = (0, u.J)(), s = (0, d.z)(), o = (0, c.V)(), g = e < 0, f = o.indexFormQuestions, y = o.index, _ = (0, l.h)(); if ((this.navigationProcessId && e || a.blockInterviewProgress || g && o.isFirstDisplayableQuestion || !o.hasFormSetup) && !n) return !1; try { var w, b, S, k; this.navigationProcessId = _; let i = Math.min(e, 1), r = o.indexFormQuestions, l = o.indexDiagnosis; const c = () => o.formQuestionByIndex(r); if (g) { if (o.indexFormQuestions >= o.indexOfDynamicInterview) { const e = o.indexOfDynamicInterview - o.indexFormQuestions; (() => { e < i || (s.returns += 1, e && e === i ? o.diagnosis.length || (i -= 1) : o.indexDiagnosis >= Math.abs(i) ? (l = o.indexDiagnosis + i, i = e) : (l = 0, i += o.indexDiagnosis)) })() } r += i, i = 0 } else { if (this.removeForwardIntentSurveyAnswers(), i) { if (a.isTouched = !0, o.currentIsRequired && a.isInvalid) return !1; if (a.noInternet) return a.blockInterviewProgress = !0, !1; a.isConfirmed || (a.isConfirmed = !0), await (0, v._v)() } const e = !o.indexDiagnosis && !o.diagnosis.length, t = o.indexDiagnosis + 1 === o.diagnosis.length, n = () => o.shouldStop && (o.isIntelligentInterview && t || "intelligent_interview" === c().type && e); o.isIntelligentInterview && !n() || (r += i, i = 0), "intelligent_interview" === c().type && (r = o.indexOfDynamicInterview, l += i), this.throwIfNavigationInterruption(_); const u = c(); if (null !== u && void 0 !== u && u.beforeEnter && (a.isLoading = !0, await u.beforeEnter(u, { newFormIndex: r, newIndexDiagnosis: l })), this.throwIfNavigationInterruption(_), n() && await s.fetchResultData(), "intelligent_interview" === c().type && n()) return a.isInvalid = !1, this.navigationProcessId = null, o.indexFormQuestions = o.indexOfDynamicInterview, await this.navigate(1) } if (this.throwIfNavigationInterruption(_), await this.trySkippingQuestion(c(), r, g)) return !0; a.isTouched = !1, a.isInvalid = !g; const u = null === (w = c()) || void 0 === w ? void 0 : w.component; await (null === u || void 0 === u ? void 0 : u.__asyncLoader()), o.$patch({ indexFormQuestions: r, indexDiagnosis: l }), a.$patch({ isConfirmed: !1, isReported: !1 }); try { t || (n || (0, m.jx)(g, f, y), (0, m.$D)()), (0, m.PV)() } catch (U) { p.u3.error(U) } h.value = null !== (b = null === (S = c()) || void 0 === S ? void 0 : S.component) && void 0 !== b ? b : null, t || await this.changeRouterState(), window.parentIFrame ? window.parentIFrame.scrollToOffset(0, 0) : null === (k = document.querySelector("#app")) || void 0 === k || k.scrollIntoView() } catch (U) { !(U instanceof r.d7) && U instanceof Error && "navigation-interrupted" !== U.message && (p.u3.error(U), p.CA.captureException(U)) } finally { if (_ !== this.navigationProcessId) return !1; await (0, i.Y3)(), this.navigationProcessId = null, a.isLoading = !1 } return !0 }, async restartInterview() { const e = (0, u.J)(), t = (0, c.V)(), n = (0, d.z)(); e.isLoading = !0, h.value = null, n.$reset(), e.reset(), t.reset(), await this.navigate(0, !1, !0) } } }) }, 98646: (e, t, n) => { "use strict"; n.d(t, { MR: () => i, X6: () => a, _C: () => s, bz: () => o }); n(69724); const a = Symbol("set-page-title-ref"), i = Symbol("page-title-ref"), s = Symbol("is-safari"), o = Symbol("is-mobile") }, 64719: (e, t, n) => { "use strict"; var a; n.d(t, { e: () => a }), function (e) { e["UNSENT"] = "unsent", e["FETCHING"] = "fetching", e["SUCCESS"] = "success", e["FAIL"] = "fail", e["CONNECTION_UNAVAILABLE"] = "connection_unavailable" }(a || (a = {})) }, 3936: (e, t, n) => { "use strict"; var a; n.d(t, { $: () => a }), function (e) { e["Consultation"] = "consultation", e["Consultation24"] = "consultation_24", e["Emergency"] = "emergency", e["EmergencyAmbulance"] = "emergency_ambulance", e["SelfCare"] = "self_care" }(a || (a = {})) }, 83950: (e, t, n) => { "use strict"; n.d(t, { Z: () => g }); var a = n(96358), i = n(65979), s = (n(72050), n(71756), n(16366), n(74553), n(31781), n(4302), n(66469), n(78551)), o = n(7089), r = n(63791), l = n(22522), c = n(35684), u = n(87502); const d = /(?!\n)[\s\S]+?(?=\s\[form:|$)/g, m = (0, i.Z)(/(\s*\[form:([\s\S]+?)\]\s*)?([\s\S]+)/, { formName: 2, translation: 3 }), v = /\[([\s\S]+?)\/([\s\S]+?)\]/g, p = ["base", "someone", "underage", "teenager", "child", "infant", "newborn"]; function g() { const e = (0, c.V)(), t = (0, l.z)(), n = null !== (0, s.FN)() ? (0, r.QT)() : u.ag.global, { t: i, te: g, tm: h, rt: f } = n, { patientAge: y, patientSex: _, thirdPerson: w } = (0, o.Jk)(t), b = (0, s.Fl)((() => e.formQuestions.findIndex((e => "patient_sex" === e.type)))), S = (0, s.Fl)((() => !_.value || b.value >= e.indexFormQuestions ? "$1/$2" : "male" === _.value ? "$1" : "$2")); function k() { const e = ["base"]; return w.value ? ((() => { e.unshift("someone"), y.value.value >= 18 || !y.value.value && 0 !== y.value.value || (e.unshift("underage"), y.value.value >= 12 ? e.unshift("teenager") : (e.unshift("child"), "year" !== y.value.unit && (e.unshift("infant"), 0 === y.value.value && e.unshift("newborn")))) })(), e) : e } function U(e) { const t = new Map, n = e.match(d); n.forEach((e => { const n = e.replace(/\s+$/, ""), a = m.exec(n); if (!a) return; const { formName: i, translation: s } = a.groups; i ? p.includes(i) && t.set(i, s) : t.set("base", s) })); const a = k(), i = a.find((e => t.get(e))); return i ? t.get(i) : "" } function x(e) { return e.replace(v, S.value) } function I(e, ...t) { const n = i(e, ...t); return n.includes("[form") ? x(U(n)) : x(n) } function C(e, ...t) { return g(e) ? I(e, ...t) : "" } function F(e, t, ...n) { const a = e.replace("$version", ""); if (!t) return I(a, !1, ...n); const i = e.replace("$version", t), s = C(i, ...n); return s || I(a, ...n) } return (0, a.Z)((0, a.Z)({}, n), {}, { translate: I, translateNoFallback: C, translateWithVersion: F, translateList: h, translateScoped: f, translationExists: g }) } }, 15006: (e, t, n) => { "use strict"; n.d(t, { Z: () => r }); n(4302); var a = n(78551), i = n(35684), s = n(22522), o = n(83950); function r() { const { translate: e } = (0, o.Z)(), t = (0, i.V)(), n = (0, s.z)(), r = (0, a.Fl)((() => n.conditions.map(((n, a) => { var i, s; const o = n; return o.sexFilter = null === (i = t.summaryConcepts.get(n.id)) || void 0 === i ? void 0 : i.sex_filter, o.recommendedChannel = null === (s = t.summaryConcepts.get(n.id)) || void 0 === s ? void 0 : s.recommended_channel, ["common", "moderate"].includes(n.condition_details.prevalence) ? o.isCommon = !0 : ["rare", "very_rare"].includes(n.condition_details.prevalence) && (o.isRare = !0), n.probability < .1 ? o.probabilityClass = "weak" : n.probability < .7 ? o.probabilityClass = "moderate" : o.probabilityClass = "strong", o.probabilityInt = Math.round(100 * n.probability), o.probabilityLabel = e(`common.evidence.${o.probabilityClass}`), o.ranking = a + 1, o })))), l = e => { var n; const { stagedConditionProgressBar: a } = null !== (n = t.settings) && void 0 !== n ? n : {}; return a ? e < 10 ? 4 : e < 70 ? 40 : 100 : e }; return { detailedConditions: r, computeConditionProgressBarValue: l } } }, 98129: (e, t, n) => { "use strict"; n.d(t, { Z: () => c }); var a = n(96358), i = n(78551), s = n(43007), o = n(81360), r = n(39682); const l = { NO_INTERNET: "noInternet", UNKNOWN: "unknown", CONNECTION_RESTORED: "connectionRestored" }; function c(e, t = {}) { const n = { immediate: !0, initialValue: null, catchRequestStatus: "unknown" }, c = (0, a.Z)((0, a.Z)({}, n), t), u = (0, o.J)(), d = (0, i.Fl)((() => u.noInternet)), m = (0, s.iH)(!1), v = (0, s.iH)(c.initialValue), p = (0, s.iH)(!1), g = (0, s.iH)(null), h = (0, s.iH)(null), f = (0, i.Fl)((() => d.value && !m.value)), y = async t => { if (!c.preFetchGuardFunction || !await c.preFetchGuardFunction()) if (d.value) h.value = l.NO_INTERNET; else { p.value = !0, g.value = null, h.value = null; try { v.value = await e(t), m.value = !0, c.onFetched && c.onFetched(v.value) } catch (n) { (0, r.iR)(n), g.value = n, h.value = c.catchRequestStatus } finally { p.value = !1 } } }; return (0, i.YP)(d, (e => { e || m.value || !c.immediate ? e || h.value !== l.NO_INTERNET ? h.value = null : h.value = l.CONNECTION_RESTORED : y() })), c.immediate && y(), { data: v, loading: p, error: g, fetch: y, noInternetAndData: f, requestStatus: h } } }, 30466: (e, t, n) => { "use strict"; n.d(t, { U: () => d, h: () => u }); var a = n(96358), i = (n(4302), n(66469), n(65394), n(78819), n(71756), n(5538), n(81289), n(78551)), s = n(35684), o = n(22522), r = n(57481), l = n(63785), c = n(39682); function u(e) { const t = (0, r.f)(), n = Object.keys(t.queryParams).filter((n => e.includes(n) && t.queryParams[n])); if (!n.length) return { parameterValue: null, canSkip: !1 }; const a = t.queryParams[n.at(-1)]; return Array.isArray(a) ? { parameterValue: a.at(-1), canSkip: !1 } : { parameterValue: a, canSkip: 1 === n.length } } const d = { message: { component: (0, i.RC)((() => Promise.all([n.e(6863), n.e(3997)]).then(n.bind(n, 96877)))), title: "interviewStep.introduction", skipOnAnswer: !0, handleParams() { const { parameterValue: e, canSkip: t } = u(["message-skip", "welcome-skip"]); return "true" === e && t } }, agreement: { component: (0, i.RC)((() => n.e(8631).then(n.bind(n, 50741)))), title: "interviewStep.introduction", required: !0, skipOnAnswer: !0, handleParams() { const e = (0, o.z)(), { parameterValue: t, canSkip: n } = u(["agreement-skip"]); return "true" === t && (e.confirmedAgreements = e.requiredAgreements, n) } }, third_person: { component: (0, i.RC)((() => n.e(6161).then(n.bind(n, 78313)))), title: "interviewStep.patient", required: !0, skipOnAnswer: !0, handleParams() { const e = (0, o.z)(), { parameterValue: t, canSkip: n } = u(["someone", "interview_direct"]); return !!["myself", "someone"].includes(t) && (void 0 === e.thirdPerson && (e.thirdPerson = "someone" === t), n) } }, patient_sex: { component: (0, i.RC)((() => n.e(6868).then(n.bind(n, 88106)))), title: "interviewStep.patient", required: !0, skipOnAnswer: !0, handleParams() { const e = (0, o.z)(), t = { male: "male", m: "male", female: "female", f: "female" }, { parameterValue: n, canSkip: a } = u(["sex"]); return !!t[n] && (e.patientSex = t[n], a) } }, patient_age: { component: (0, i.RC)((() => n.e(6165).then(n.bind(n, 49586)))), title: "interviewStep.patient", required: !0, skipOnAnswer: !0, settings: { minChildAge: 0, minAdultAge: 18, maxAge: 120, defaultSliderValue: 50, forceCalendar: !1 }, handleParams(e) { var t; const n = (0, s.V)(), a = (0, o.z)(), i = { unit: "year" }, { parameterValue: r, canSkip: d } = u(["age"]); if (!r && 0 !== r) return !1; if ((0, l.kE)(r)) i.value = parseInt(r, 10); else try { const e = JSON.parse(r); i.value = parseInt(e.value, 10), i.unit = e.unit } catch (p) { c.u3.warn("useNameParam:patient_age", p) } const m = n.hasPediatrics && a.thirdPerson ? null === e || void 0 === e ? void 0 : e.minChildAge : null === e || void 0 === e ? void 0 : e.minAdultAge, v = null === e || void 0 === e ? void 0 : e.maxAge; return !Number.isInteger(i.value) || i.value < m || i.value > v || !["year", "month"].includes(i.unit) || "month" === i.unit && (0 !== m || i.value >= 12) || "year" === i.unit && 0 === i.value ? (c.u3.warn("useNameParam:patient_age", "Incorrect value, or extending allowed range"), !1) : (null !== (t = a.patientAge) && void 0 !== t && t.value || (a.patientAge = i), d) } }, risk_factors: { component: (0, i.RC)((() => n.e(2038).then(n.bind(n, 97970)))), title: "interviewStep.patient", customAppTitle: "appTitles.riskFactors", required: !0, async beforeEnter() { const e = (0, s.V)(), t = (0, o.z)(); return await e.fetchSummaryConcepts(), await e.fetchRiskFactors((0, a.Z)((0, a.Z)({}, t.data), {}, { evidence: t.data.evidence.filter((({ source: e }) => "suggest" !== e)), suggest_method: "risk_factors" })), !0 }, handleParams(e, t) { var n, a; const i = (0, s.V)(), l = (0, o.z)(), c = (0, r.f)(); let d; const m = Object.keys(c.queryParams).join("&"); if (["risk-factors", "risk_factors", "rfs"].forEach((e => { m.includes(e) && (d = e) })), !d) return; const v = null !== (n = null === (a = l.evidenceByIndex(t)) || void 0 === a ? void 0 : a.evidence) && void 0 !== n ? n : []; if (Array.isArray(v) && v.length) return; const p = i.riskFactors.map((({ id: e }) => e)), g = ["present", "absent", "unknown"].reduce(((e, t) => { const { parameterValue: n } = u([`${d}-${t}`, `${d}_${t}`]); if (!n || "string" !== typeof n) return e; const a = n.split(",").map((e => ({ id: e, choice_id: t, source: "suggest" }))); return [...e, ...a] }), []).filter((({ id: e }) => !!p.includes(e))); l.setEvidence({ evidence: g, index: t }) } }, initial_symptoms: { component: (0, i.RC)((() => n.e(6053).then(n.bind(n, 64584)))), title: "interviewStep.symptoms", required: !0, componentSettings: { displayBodyModelOnMobile: !1 }, handleParams(e, t) { var n, a; const i = (0, s.V)(), r = (0, o.z)(), { parameterValue: l } = u(["initial-symptoms", "symptoms_present"]), c = r.patientEvidences.map((({ id: e }) => e)); if (!l || "string" !== typeof l) return; const d = null !== (n = null === (a = r.evidenceByIndex(t)) || void 0 === a ? void 0 : a.evidence) && void 0 !== n ? n : []; if (Array.isArray(d) && d.length) return; const { summaryConcepts: m } = i, v = l.split(",").filter((e => !c.includes(e))), p = v.filter((e => { const t = m.get(e); return t && ("both" === (null === t || void 0 === t ? void 0 : t.sex_filter) || (null === t || void 0 === t ? void 0 : t.sex_filter) === r.patientSex) })).map(((e, t) => ({ id: e, choice_id: "present", origin: "url", position: t, label: m.get(e).common_name || m.get(e).name, source: "initial" }))); r.setEvidence({ evidence: p, index: t }) } }, intent_survey_consult_medical_professional: { component: (0, i.RC)((() => n.e(6176).then(n.bind(n, 84799)))), title: "interviewStep.symptoms", required: !0 }, intent_survey_kind_of_care: { component: (0, i.RC)((() => n.e(7216).then(n.bind(n, 19282)))), title: "interviewStep.symptoms", required: !0, skipOnAnswer: !0, handleParams() { const e = (0, o.z)(), t = !e.intentSurveyAnswers.intent_survey_consult_medical_professional, n = ["recovering_at_home", "not_sure"].includes(e.intentSurveyAnswers.intent_survey_consult_medical_professional); return n || t } }, intent_survey_contact_form: { component: (0, i.RC)((() => n.e(5878).then(n.bind(n, 24585)))), title: "interviewStep.symptoms", required: !0, skipOnAnswer: !0, handleParams() { const e = (0, o.z)(), t = !e.intentSurveyAnswers.intent_survey_consult_medical_professional || !e.intentSurveyAnswers.intent_survey_kind_of_care, n = ["recovering_at_home", "not_sure"].includes(e.intentSurveyAnswers.intent_survey_consult_medical_professional) || !["primary_care", "specialist_care"].includes(e.intentSurveyAnswers.intent_survey_kind_of_care); return n || t } }, intent_survey_ambulance: { component: (0, i.RC)((() => n.e(117).then(n.bind(n, 48805)))), title: "interviewStep.symptoms", required: !0, skipOnAnswer: !0, handleParams() { const e = (0, o.z)(), t = !e.intentSurveyAnswers.intent_survey_consult_medical_professional || !e.intentSurveyAnswers.intent_survey_kind_of_care, n = ["recovering_at_home", "not_sure"].includes(e.intentSurveyAnswers.intent_survey_consult_medical_professional) || "emergency_care" !== e.intentSurveyAnswers.intent_survey_kind_of_care; return n || t } }, regions: { component: (0, i.RC)((() => n.e(5436).then(n.bind(n, 28345)))), title: "interviewStep.regions" }, intelligent_interview: { component: (0, i.RC)((() => n.e(8457).then(n.bind(n, 7173)))), title: "interviewStep.interview", settings: { enableSuggestQuestion: !0 }, async beforeEnter({ settings: e }, { newIndexDiagnosis: t }) { const n = (0, s.V)(), a = (0, o.z)(); if (n.shouldStop) return !0; const { data: i } = a; return n.diagnosis.length ? t >= n.diagnosis.length && await n.fetchDiagnosis(i) : (!n.suggestRequested && null !== e && void 0 !== e && e.enableSuggestQuestion && await n.suggest(i), n.hasSuggest || await n.fetchDiagnosis(i)), !0 } }, results: { component: (0, i.RC)((() => Promise.resolve().then(n.bind(n, 64455)))), title: "interviewStep.results", version: "modern", show: !0, componentSettings: { triage: { showSeriousEvidence: !0, specialistRecommender: { show: !0, enableDataExporter: !0 }, channel: { show: !0, enableDataExporter: !0 } }, conditions: { articles: { show: !1 } }, plansSurvey: { hide: !1 }, labTests: { hide: !0, showPreventive: !1 }, answers: { hide: !1 }, summary: { showPdfDownload: !0, showStartOver: !0 }, disclaimer: { customContent: null } }, beforeEnter() { const e = (0, o.z)(); e.endTime = Date.now() } }, rich_content: { component: (0, i.RC)((() => n.e(962).then(n.bind(n, 48061)))), title: "interviewStep.interview" } } }, 82831: (e, t, n) => { n(53705), function (e, t, n, a, i) { e[a] = e[a] || [], e[a].push({ "gtm.start": (new Date).getTime(), event: "gtm.js" }); var s = t.getElementsByTagName(n)[0], o = t.createElement(n), r = "dataLayer" != a ? "&l=" + a : ""; o.async = !0, o.src = "https://www.googletagmanager.com/gtm.js?id=" + i + r, s.parentNode.insertBefore(o, s) }(window, document, "script", "dataLayer", "GTM-573QR82") }, 99229: (e, t, n) => { "use strict"; n.d(t, { $D: () => m, PV: () => p, jx: () => v, kq: () => d }); var a = n(96358), i = (n(47921), n(4302), n(66469), n(18819), n(71756), n(67939)), s = n(35684), o = n(22522), r = n(95535), l = n(39682), c = n(66417), u = n(87502); function d() { const e = (0, s.V)(), t = { domain: window.location.hostname, form_id: e.id, form_token: e.token, type: "Symptom Checker", version: "3.11.0", language: e.language }, n = { instance: t.domain, path: `/${t.form_token}/`, form_lang: t.language }; i.c.setGlobalProperties((0, a.Z)({ application: t }, n)) } function m() { var e; const t = (0, s.V)(), n = { initial_symptoms: "evidence_search_body_widget", regions: "map_select", intelligent_interview: "intelligent_diagnosis", results: "result_blocks", third_person: "interview_direct" }, o = { suggest: u.ZP.global.t("intelligentInterview.suggest") }, { interviewIdWithReturns: l, currentFormQuestion: d, currentDiagnosisQuestion: m, isIntelligentInterview: v } = t, p = () => ({ question_text: m.type in o ? o[m.type] : m.text, question_type: m.type, questions: m.items.map((({ id: e, name: t }) => ({ id: e, name: t }))) }), g = () => { var e, t; const n = (0, r.Z)(), a = null !== (e = null === (t = { intent_survey_consult_medical_professional: n.consultMedicalProfessionalChoices.value, intent_survey_kind_of_care: n.kindOfCareChoices.value, intent_survey_contact_form: n.contactFormChoices.value, intent_survey_ambulance: n.ambulanceChoices.value }[d.type]) || void 0 === t ? void 0 : t.map((({ id: e }) => ({ id: e })))) && void 0 !== e ? e : []; return { questions: a } }; let h = {}; void 0 !== m && v ? h = p() : d.type.startsWith("intent_survey") && (h = g()); const f = { section: (0, a.Z)({ name: d.title.includes("interviewStep") ? d.title.split(".").pop() : d.title, type: null !== (e = n[d.type]) && void 0 !== e ? e : d.type, index: t.index, subsection: void 0 }, h), user: { interview_id: l, session_id: t.sessionId, browser_languages: c.D } }; i.c.setGlobalProperties(f), t.analyticsInitialized = !0 } function v(e, t, n) { const a = (0, s.V)(), r = (0, o.z)(), { thirdPerson: c, patientSex: u, patientAge: d, evidenceByIndex: m, intentSurveyAnswers: v } = r, p = { third_person: c, patient_sex: u || void 0, patient_age: d.value || 0 === d.value ? d : void 0 }; i.c.setGlobalProperties(p); const g = { event_type: "confirm", event_object: e ? "back_button" : "next_button" }; if (!e) { let e = a.formQuestionByIndex(t); if (e.skipped) { const n = a.formQuestions.slice(0, t); e = [...n].reverse().find((({ skipped: e }) => !e)) } const { type: i } = e; switch (i) { case "third_person": g.event_data = { type: "person", data: c ? ["someone"] : ["myself"] }; break; case "patient_age": g.event_data = { type: "age", data: [d] }; break; case "patient_sex": g.event_data = { type: "sex", data: [u] }; break; case "initial_symptoms": var h, f; g.event_data = { type: "initial_symptom", data: null === (h = m(n)) || void 0 === h || null === (f = h.evidence) || void 0 === f ? void 0 : f.map((({ id: e, origin: t }) => ({ id: e, origin: t }))) }; break; case "risk_factors": case "regions": var y, _; g.event_data = { type: i, data: null === (y = m(n)) || void 0 === y || null === (_ = y.evidence) || void 0 === _ ? void 0 : _.map((({ id: e, name: t, choice_id: n }) => ({ id: e, name: t, choice_id: n }))) }; break; case "intelligent_interview": { var w; const e = n - (a.diagnosis.length ? 0 : 1), s = null === (w = m(e)) || void 0 === w ? void 0 : w.evidence; if (!s) { const n = 'Cannot send "next_button" event with correct data. Evidence wvariable is undefined.'; l.u3.error(n), l.CA.captureMessage(n, (n => (n.setExtras({ type: i, finalIndexOfQuestion: e, previousQuestionIndex: t }), n))); break } const o = Array.isArray(s) ? s : [s]; g.event_data = { type: "questions", data: o.map((({ id: e, name: t, choice_id: n }) => ({ id: e, name: t, choice_id: n }))) }; break } case "intent_survey_consult_medical_professional": case "intent_survey_kind_of_care": case "intent_survey_contact_form": case "intent_survey_ambulance": { var b, S; const e = v[i], t = { intent_survey_consult_medical_professional: { medical_professional: "intent_step" }, intent_survey_kind_of_care: { emergency_care: "intent_step" }, intent_survey_contact_form: { client_helpline: "intent_contact_form", teleconsultation: "intent_contact_form", in_person_visit: "intent_contact_form", client_application: "intent_contact_form", not_sure: "intent_contact_form" } }; g.event_data = { type: null !== (b = null === (S = t[i]) || void 0 === S ? void 0 : S[e]) && void 0 !== b ? b : "intent", data: e ? [e] : [] }; break } default: break } } i.c.trackEvent("Form Activity", { event_details: g }, ["infermedicaAnalytics"]) } function p() { const e = (0, s.V)(), { currentFormQuestion: t, index: n } = e, o = { event_type: "show", event_object: "router" }, r = { label: `${n}. ${u.ZP.global.t(t.title)} ('${t.type}')`, question: `${n}_${t.type}`, question_position: n, question_type: t.type }; i.c.trackEvent("Form Activity", (0, a.Z)({ event_details: o }, r)) } }, 70225: (e, t, n) => { "use strict"; n.d(t, { QC: () => c, VM: () => u, zy: () => d }); var a = n(96358), i = n(6963), s = (n(89620), n(35684)); const o = ["condition_details", "explain", "recommendedChannel", "sexFilter", "probabilityLabel"], r = ["icd10_code", "hint"], l = ["article"]; function c(e, t = {}) { var n, a; const i = (0, s.V)(); if (null === (n = i.settings) || void 0 === n || !n.enableDataExporter) return; const o = null !== (a = i.settings) && void 0 !== a && a.dataExporterToTop ? "top" : "parent"; window[o].postMessage(JSON.stringify({ action: e, data: t }), "*") } function u({ answer: e = {}, type: t, questionType: n }) { const a = e => e.map((({ id: e, choice_id: t }) => ({ id: e, choice_id: t }))), i = { group_multiple: a, group_single: ({ id: e, choice_id: t }) => [{ id: e, choice_id: t }], single: ({ id: e, choice_id: t }) => [{ id: e, choice_id: t }], risk_factors: a, initial_symptoms: a, regions: a, suggest: a, "abdominal-pain": a, scale: ({ id: e, choice_id: t, extras: { pain: n } }) => [{ id: e, choice_id: t, pain_value: n }] }[n || t], s = i ? i(e) : e; c("question-answered", { type: t, questionType: n, answer: s }) } function d(e) { const { condition_details: t, explain: n, recommendedChannel: s, sexFilter: c, probabilityLabel: u } = e, d = (0, i.Z)(e, o), { icd10_code: m, hint: v } = t, p = (0, i.Z)(t, r), g = null !== n && void 0 !== n ? n : {}, { article: h } = g, f = (0, i.Z)(g, l); return (0, a.Z)((0, a.Z)({}, d), {}, { article: h, explain: f, probabilityDisplay: u, details: (0, a.Z)((0, a.Z)({}, p), {}, { extras: { icd10Code: m, hint: v }, recommendedChannel: s, sexFilter: c }) }) } }, 2992: (e, t, n) => { "use strict"; n.d(t, { p: () => l, u: () => r }); var a = n(96358), i = n(66417); const s = (e, t) => new Date(e, t, 0).getDate(), o = e => ({ day: e.getDate(), month: e.getMonth() + 1, year: e.getFullYear() }); function r(e, t) { const n = o(e), i = o(t), r = s(n.year, n.month), l = { day: 0, month: 0, year: 0 }, c = { day: r, month: 12, year: 0 }, u = (0, a.Z)({}, l); for (let a = 0; a < Object.keys(u).length; a += 1) { const e = Object.keys(c)[a], t = a ? Object.keys(c)[a - 1] : "", s = t && l[t] < 0, o = i[e] - n[e] - (s ? 1 : 0), r = o < 0 ? c[e] + o : o; l[e] = o, u[e] = null !== r && void 0 !== r ? r : 0 } return u } function l(e, t, n) { const a = (0, i.k)(t); return new Intl.DateTimeFormat(a, n).format(e) } }, 39682: (e, t, n) => { "use strict"; n.d(t, { CA: () => o, iR: () => r, u3: () => s }); n(39723); var a = n(9161), i = n(43789); const s = new Proxy(console, { get(e, t) { return i.Z.enableTestFeatures ? Reflect.get(e, t) : () => { } }, set() { return !1 } }), o = { captureException(e, t) { t ? (0, a.Tb)(e, t) : (0, a.Tb)(e) }, captureMessage(e, t) { t ? (0, a.uT)(e, t) : (0, a.uT)(e) } }, r = e => { var t, n; const a = null === e || void 0 === e || null === (t = e.response) || void 0 === t || null === (n = t.config) || void 0 === n ? void 0 : n.url; s.warn(`API error with ${a}`), s.dir(e), o.captureException(e, (t => { var n; return t.setExtra("endpoint", a), null !== e && void 0 !== e && null !== (n = e.response) && void 0 !== n && n.data && t.setExtra("response", e.response.data), t })) } }, 68213: (e, t, n) => { "use strict"; n.d(t, { i: () => a, q: () => i }); n(47921), n(16366), n(31781), n(71756), n(4302), n(66469), n(76626); function a(e, t) { const n = Object.keys(e), a = `${t}-`; return n.filter((e => e.startsWith(a))).map((e => ({ innerName: e.replace(a, ""), name: e }))) } function i(e, t = []) { const n = Object.entries(e).filter((([e]) => !t.includes(e))); return Object.fromEntries(n) } }, 67906: (e, t, n) => { "use strict"; n.d(t, { d: () => i, i: () => a }); n(16366), n(31781); function a(e) { return e.replace(/([_][a-z])/g, (e => e.toUpperCase().replace("-", "").replace("_", ""))) } function i(e) { return e.replace(/([-][a-z])/g, (e => e.toUpperCase().replace("-", "").replace("_", ""))) } }, 87502: (e, t, n) => { "use strict"; n.d(t, { ZP: () => E, ag: () => x, J1: () => I, g: () => C }); n(4302), n(66469), n(71756), n(90982); var a = n(63791); function i(e, t) { return 0 === e ? 0 : 1 === e ? 1 : 2 === e ? 2 : e % 100 >= 3 && e % 100 <= 10 ? 3 : e % 100 >= 11 && e % 100 <= 99 ? 4 : t - 1 } function s(e, t) { return 1 === e ? 0 : [2, 3, 4].includes(e) ? 1 : e % 1 === 0 ? 2 : t - 1 } function o(e) { return 1 === e ? 0 : 1 } function r(e) { return e >= 1 && e < 1.1 ? 0 : 1 } function l(e) { return e >= 0 && e < 2 ? 0 : 1 } function c(e) { return 1 === e ? 0 : 1 } function u(e) { return 1 === e ? 0 : 1 } function d(e, t) { return 1 === e ? 0 : e % 1 === 0 && e % 10 >= 2 && e % 10 <= 4 && (e % 100 < 10 || e % 100 >= 20) ? 1 : e % 1 === 0 ? 2 : t - 1 } function m(e) { return e >= 0 && e < 2 ? 0 : 1 } function v(e, t) { return 1 === e ? 0 : e % 1 !== 0 || 0 === e || e % 100 >= 2 && e % 100 < 20 ? 1 : t - 1 } function p(e, t) { return e % 1 === 0 && e % 10 === 1 && e % 100 !== 11 ? 0 : e % 1 === 0 && e % 10 >= 2 && e % 10 <= 4 && (e % 100 <= 12 || e % 100 >= 14) ? 1 : e % 1 === 0 ? 2 : t - 1 } function g(e, t) { return 1 === e ? 0 : [2, 3, 4].includes(e) ? 1 : e % 1 !== 0 ? 2 : t - 1 } function h(e) { return 1 === e || e > 1 && e < 1.1 ? 0 : 1 } function f(e, t) { return e % 1 === 0 && e % 10 === 1 && e % 100 !== 11 ? 0 : e % 1 === 0 && e % 10 >= 2 && e % 10 <= 4 && (e % 100 <= 12 || e % 100 >= 14) ? 1 : e % 1 === 0 ? 2 : t - 1 } function y() { return 0 } const _ = { ar: i, cs: s, de: o, es: r, fr: l, it: c, nl: u, pl: d, "pt-br": m, ro: v, ru: p, sk: g, tr: h, uk: f, "zh-hans": y }, w = {}; Object.keys(_).forEach((e => { const t = _[e]; w[e] = (e, n, a) => { const i = t(e, n, a); return Math.min(i, n - 1) } })); const b = w; var S = n(56866), k = n.n(S); const U = { seo: !0, legacy: !1, globalInjection: !0, locale: "en", fallbackLocale: "en", messages: { en: k() }, pluralRules: b }, x = (0, a.o)(U); async function I(e, t) { const a = `${e}.${t}`; if (x.global.availableLocales.includes(a)) return a; const [{ value: i }, { value: s }] = await Promise.allSettled([n(42003)(`./${e}.yaml`), n(42003)(`./${a}.yaml`)]); return x.global.setLocaleMessage(e, null === i || void 0 === i ? void 0 : i.default), s && x.global.mergeLocaleMessage(e, null === s || void 0 === s ? void 0 : s.default), e } async function C(e, t) { const n = await I(e, t); x.global.locale.value = null !== n && void 0 !== n ? n : `${e}.${t}` } const F = () => x, E = F() }, 80743: (e, t, n) => { "use strict"; n(83001), n(8760), n(65477), n(40542), n(4302), n(66469), n(71756), n(65394), n(78819); var a = n(19408), i = n(43007), s = n(18278), o = n(78551), r = n(42681), l = n(96795), c = n(21745), u = n(83950); const d = ["aria-label"], m = (0, o.aZ)({ __name: "ScStepper", props: { steps: {}, currentStep: {} }, setup(e) { const t = e, { translate: n } = (0, u.Z)(), a = (0, o.Fl)((() => { const e = t.steps.findIndex((e => e.label === t.currentStep)) + 1, a = t.currentStep, i = t.steps.length; return n("common.stepperAriaLabel", { currentStep: e, totalSteps: i, stepName: a }) })); return (e, t) => ((0, o.wg)(), (0, o.j4)((0, i.SU)(c.T3), { steps: e.steps, "current-step": e.currentStep }, (0, o.Nv)({ "current-step": (0, o.w5)((() => [(0, o._)("div", { class: "sc-stepper__current-step", "aria-label": a.value }, [(0, o.Wm)((0, i.SU)(c.II), { tag: "span", "aria-hidden": "true", class: "ui-text--body-2-compact ui-stepper__current-step" }, { default: (0, o.w5)((() => [(0, o.Uk)((0, r.zw)(e.currentStep), 1)])), _: 1 })], 8, d)])), _: 2 }, [(0, o.Ko)(e.$slots, ((t, n) => ({ name: n, fn: (0, o.w5)((t => [(0, o.WI)(e.$slots, n, (0, r.vs)((0, o.F4)(t)))])) })))]), 1032, ["steps", "current-step"])) } }), v = m, p = v; var g = n(67939), h = n(57481), f = n(35684); function y() { const e = (0, f.V)(), t = (0, o.Fl)((() => e.settings)), n = (0, o.Fl)((() => { var e, n; return "undefined" === typeof (null === (e = t.value) || void 0 === e ? void 0 : e.showHeader) || (null === (n = t.value) || void 0 === n ? void 0 : n.showHeader) })), a = (0, o.Fl)((() => { var e; return null === (e = t.value) || void 0 === e ? void 0 : e.showBusiness })), i = (0, o.Fl)((() => { var e; return null === (e = t.value) || void 0 === e ? void 0 : e.showCeMarking })), s = (0, o.Fl)((() => { var e; return (null === (e = t.value) || void 0 === e ? void 0 : e.footer_links) || [] })), r = (0, o.Fl)((() => { var e; return null === (e = t.value) || void 0 === e ? void 0 : e.showSideMenu })), l = (0, o.Fl)((() => { var e, n; return "undefined" === typeof (null === (e = t.value) || void 0 === e ? void 0 : e.progressBarType) ? "with-dots" : null === (n = t.value) || void 0 === n ? void 0 : n.progressBarType })), c = (0, o.Fl)((() => { var e; return !(null === (e = t.value) || void 0 === e || !e.showFooterOnMobile) })), u = (0, o.Fl)((() => { var t; return "recaptcha" === (null === (t = e.captchaConfig) || void 0 === t ? void 0 : t.method) })), d = (0, o.Fl)((() => c.value || u.value)); return { hasHeader: n, hasFooterNavigationOnMobile: c, hasRecaptchaFooter: u, hasFooterOnMobile: d, hasForBusiness: a, hasMedicalCertification: i, customFooterLinks: s, hasSideMenu: r, progressBarType: l } } function _() { const e = (0, f.V)(), t = (0, h.f)(), { hasSideMenu: n, progressBarType: a } = y(), { translate: i } = (0, u.Z)(); async function s(n) { await t.navigate(n - e.index) } const r = (0, o.Fl)((() => e.steps.map((e => ({ label: i(e.name), onClick: () => { var t; return s(null !== (t = e.index) && void 0 !== t ? t : 0) } }))))), l = (0, o.Fl)((() => i(e.currentStep))), c = (0, o.Fl)((() => r.value.findIndex((({ label: e }) => e === l.value)) + 1)), d = (0, o.Fl)((() => r.value.length > 0)), m = (0, o.Fl)((() => !n.value && "with-dots" === a.value)), v = (0, o.Fl)((() => !n.value && "subtle" === a.value)), p = (0, o.Fl)((() => !n.value && "subtle-bottom" === a.value)); return { steps: r, hasSteps: d, currentStep: l, currentStepNumber: c, hasDotsProgressBar: m, hasSubtleProgressBar: v, hasSubtleBottomProgressBar: p } } var w = n(68213); const b = { __name: "ScControls", props: { isLoading: { type: Boolean, default: !1 }, isBlock: { type: Boolean, default: !1 } }, setup(e) { const t = (0, f.V)(), n = (0, h.f)(), { translate: s } = (0, u.Z)(), l = (0, o.Fl)((() => { var e, n; return null !== (e = null === (n = t.currentFormQuestion) || void 0 === n ? void 0 : n.skipped) && void 0 !== e && e })), d = (0, o.Fl)((() => t.indexFormQuestions <= t.indexFormQuestionFirstUnskipped || l.value)), m = (0, o.Fl)((() => t.currentHasHiddenNextButton || l.value)), v = (0, o.Fl)((() => { var e; const n = t.formQuestionByQuestionType(null === (e = t.current) || void 0 === e ? void 0 : e.type); return { next: null !== n && void 0 !== n && n.nextButtonLabel ? s(n.nextButtonLabel) : s("common.next"), back: null !== n && void 0 !== n && n.backButtonLabel ? s(n.backButtonLabel) : s("common.back") } })); async function p() { await n.navigate(1) } async function g() { await n.navigate(-1) } const { hasSubtleBottomProgressBar: y, steps: b, currentStepNumber: S } = _(); return (t, n) => ((0, o.wg)(), (0, o.j4)((0, i.SU)(c.oE), { invalid: !1, "hide-next-button": m.value, class: (0, r.C_)(["sc-controls", { "sc-controls--with-progress": (0, i.SU)(y) }]) }, (0, o.Nv)({ bottom: (0, o.w5)((() => [(0, o.WI)(t.$slots, "bottom", (0, r.vs)((0, o.F4)({ hasSubtleBottomProgressBar: (0, i.SU)(y), steps: (0, i.SU)(b), currentStepNumber: (0, i.SU)(S), isBlock: e.isBlock, isLoading: e.isLoading, hideNextButton: m.value, toNextHandler: p, translations: v.value, toBackHandler: g })), (() => [(0, i.SU)(y) ? ((0, o.wg)(), (0, o.j4)((0, i.SU)(c.Qs), { key: 0, class: "sc-controls__progress", max: (0, i.SU)(b).length, value: (0, i.SU)(S) }, null, 8, ["max", "value"])) : (0, o.kq)("", !0), (0, o._)("div", { class: (0, r.C_)(["ui-controls__bottom", { "sc-controls__bottom--next-hidden": m.value }]) }, [(0, o.WI)(t.$slots, "next", (0, r.vs)((0, o.F4)({ isBlock: e.isBlock, isLoading: e.isLoading, hideNextButton: m.value, toNextHandler: p })), (() => [(0, o.wy)((0, o.Wm)((0, i.SU)(c.wg), { id: "controls-next", class: "ui-controls__next", onClick: p }, { default: (0, o.w5)((() => [(0, o.Wm)((0, i.SU)(c.MH), { name: "", "is-loading": e.isLoading, type: "ellipsis", "transition-type": "opacity" }, { default: (0, o.w5)((() => [(0, o._)("span", null, (0, r.zw)(v.value.next), 1)])), _: 1 }, 8, ["is-loading"])])), _: 1 }, 512), [[a.F8, !m.value]])])), (0, o.WI)(t.$slots, "back", (0, r.vs)((0, o.F4)({ isBlock: e.isBlock, hideBackButton: d.value, toBackHandler: g })), (() => [(0, o.wy)((0, o.Wm)((0, i.SU)(c.wg), { id: "controls-back", class: "ui-controls__back ui-button--text", onClick: g }, { default: (0, o.w5)((() => [(0, o.Wm)((0, i.SU)(c.ax), { icon: "chevron-left", class: "ui-button__icon" }), (0, o.Uk)(" " + (0, r.zw)(v.value.back), 1)])), _: 1 }, 512), [[a.F8, !d.value]])]))], 2)]))])), _: 2 }, [(0, o.Ko)((0, i.SU)(w.q)(t.$slots, ["bottom", "next", "back"]), ((e, n) => ({ name: n, fn: (0, o.w5)((e => [(0, o.WI)(t.$slots, n, (0, r.vs)((0, o.F4)(e)))])) })))]), 1032, ["hide-next-button", "class"])) } }, S = b, k = S, U = (0, o.aZ)({ __name: "ScControls", setup(e) { const t = (0, f.V)(), { translate: n } = (0, u.Z)(), s = (0, o.Fl)((() => { var e, a; const i = t.formQuestionByQuestionType(null !== (e = null === (a = t.current) || void 0 === a ? void 0 : a.type) && void 0 !== e ? e : ""); return { next: null !== i && void 0 !== i && i.nextButtonLabel ? n(i.nextButtonLabel) : n("common.next"), back: null !== i && void 0 !== i && i.backButtonLabel ? n(i.backButtonLabel) : n("common.back") } })), d = () => { g.c.trackEvent("Next button seen", { event_details: { event_type: "seen", event_object: "next_button", event_data: { type: "", data: [] } } }) }, m = (0, i.iH)(), v = (0, o.Fl)((() => { var e; return null === (e = m.value) || void 0 === e ? void 0 : e.$el })); let p; return p = (0, l.S1d)(v, (([e]) => { e.isIntersecting && (d(), p.stop()) }), { threshold: .75 }), (e, t) => ((0, o.wg)(), (0, o.j4)((0, o.LL)(k), (0, r.vs)((0, o.F4)(e.$props)), (0, o.Nv)({ next: (0, o.w5)((({ isLoading: e, hideNextButton: t, toNextHandler: n }) => [(0, o.wy)((0, o.Wm)((0, i.SU)(c.wg), { id: "controls-next", ref_key: "nextButtonRef", ref: m, class: "ui-controls__next", onClick: n }, { default: (0, o.w5)((() => [(0, o.Wm)((0, i.SU)(c.MH), { name: "", "is-loading": e, type: "ellipsis", "transition-type": "opacity" }, { default: (0, o.w5)((() => [(0, o._)("span", null, (0, r.zw)(s.value.next), 1)])), _: 2 }, 1032, ["is-loading"])])), _: 2 }, 1032, ["onClick"]), [[a.F8, !t]])])), _: 2 }, [(0, o.Ko)(e.$slots, ((t, n) => ({ name: n, fn: (0, o.w5)((t => [(0, o.WI)(e.$slots, n, (0, r.vs)((0, o.F4)(t)))])) })))]), 1040)) } }), x = U, I = x, C = (0, o.aZ)({ __name: "ScCopyright", setup(e) { const t = (0, f.V)(), n = ["de"], a = (0, o.Fl)((() => n.includes(t.interfaceLanguage) ? t.interfaceLanguage : "")), s = (new Date).getFullYear(); return (e, t) => ((0, o.wg)(), (0, o.j4)((0, i.SU)(c.cR), { id: "copyright", class: "sc-copyright ui-link--secondary ui-link--small", href: `https://infermedica.com/${a.value}`, target: "_blank", rel: "noopener noreferrer", translate: "no" }, { default: (0, o.w5)((() => [(0, o.WI)(e.$slots, "content", (0, r.vs)((0, o.F4)({ year: (0, i.SU)(s) })), (() => [(0, o.Uk)(" © " + (0, r.zw)((0, i.SU)(s)) + " Infermedica ", 1)]))])), _: 3 }, 8, ["href"])) } }), F = C, E = F; n(16366), n(31781); var P = n(81360); function T() { function e() { g.c.trackEvent("CE Instruction Open", { event_details: { event_type: "click", event_object: "instruction_for_use" } }) } return { handleInstructionForUseClick: e } } function W(e) { const t = { shouldShow: !0, name: e.id }, n = { target: "_blank", rel: "noopener noreferrer" }; return "href" in e ? Object.assign(t, n, e) : Object.assign(t, e) } function A() { const e = (0, P.J)(), t = (0, f.V)(), { translate: n } = (0, u.Z)(), { handleInstructionForUseClick: a } = T(), i = (0, o.Fl)((() => t.settings)), s = (0, o.Fl)((() => t.instructionURL)), r = (0, o.Fl)((() => !!s.value)), l = (0, o.Fl)((() => { var e; return !(null === (e = i.value) || void 0 === e || !e.showBusiness) })), c = (0, o.Fl)((() => { var e; return !(null === (e = i.value) || void 0 === e || !e.showCeMarking) })), d = (0, o.Fl)((() => t.hasTermsOfService)), m = (0, o.Fl)((() => t.hasPrivacyPolicy)), v = (0, o.Fl)((() => t.isUnauthorized)), p = (0, o.Fl)((() => t.isMedicalDevice)); function h(t) { t.analyticsHandler && t.analyticsHandler(), "href" in t || e.openPanel({ type: t.panelType, id: t.id }) } const y = (0, o.Fl)((() => W({ id: "for-business", title: n("menu.forBusiness"), shouldShow: l.value, panelType: "panel", analyticsHandler() { g.c.trackEvent("For Business", { event_details: { event_type: "click", event_object: "for_business" } }, ["infermedicaAnalytics"]) } }))), _ = (0, o.Fl)((() => W({ id: "medical-certification", title: n("menu.medicalCertification"), shouldShow: c.value && p.value, panelType: "panel" }))), w = (0, o.Fl)((() => { var e; return W({ id: "instruction-for-use", title: n("menu.instructionForUse"), "aria-label": n("menu.instructionForUseAccessibleLabel"), href: null !== (e = s.value) && void 0 !== e ? e : "", shouldShow: c.value && r.value && p.value, analyticsHandler: a }) })), b = (0, o.Fl)((() => W({ id: "terms-of-service", title: n("common.termsOfService"), shouldShow: d.value, panelType: "panel" }))), S = (0, o.Fl)((() => W({ id: "privacy-policy", title: n("common.privacyPolicy"), shouldShow: m.value, panelType: "panel" }))), k = (0, o.Fl)((() => W({ id: "interview-id", title: n("menu.interviewId"), shouldShow: !0, panelType: "panel" }))), U = (0, o.Fl)((() => { var e; return null !== (e = i.value) && void 0 !== e && e.footer_links ? i.value.footer_links.map((e => { var t; return W({ id: null !== (t = e.id) && void 0 !== t ? t : e.title.replace(/\s+/g, "-").toLowerCase(), title: n(e.title), href: e.url }) })) : [] })), x = (0, o.Fl)((() => [y].map((e => e.value)).filter((e => e.shouldShow)))), I = (0, o.Fl)((() => [_.value, w.value, b.value, S.value, k.value, ...U.value].filter((e => e.shouldShow && !v.value)))), C = (0, o.Fl)((() => [...x.value, ...I.value].map((e => ("href" in e || (e.panelType = "menu"), e))))); return { clickHandler: h, forBusiness: y, medicalCertification: _, instructionForUse: w, termsOfService: b, privacyPolicy: S, interviewId: k, customFooterLinks: U, headerLinks: x, footerLinks: I, megaMenuLinks: C } } const D = { class: "sc-navigation" }, R = (0, o.aZ)({ __name: "ScNavigation", props: { items: { type: Array, default: () => [] } }, setup(e) { const t = (0, o.l1)(), n = (0, o.Fl)((() => t.class)), { clickHandler: a } = A(), s = (0, o.Fl)((() => { var e, t; return null !== (e = null === (t = n.value) || void 0 === t ? void 0 : t.includes("sc-navigation--secondary")) && void 0 !== e && e })), l = (0, o.Fl)((() => { var e, t; return null !== (e = null === (t = n.value) || void 0 === t ? void 0 : t.includes("sc-navigation--small")) && void 0 !== e && e })); return (t, n) => ((0, o.wg)(), (0, o.iD)("nav", D, [(0, o.WI)(t.$slots, "default"), ((0, o.wg)(!0), (0, o.iD)(o.HY, null, (0, o.Ko)(e.items, (e => (0, o.WI)(t.$slots, "item", (0, r.vs)((0, o.dG)({ key: e.id }, { item: e, isNavigationSmall: l.value, isNavigationSecondary: s.value })), (() => [(0, o.Wm)((0, i.SU)(c.wg), { id: e.id, "aria-label": e["aria-label"], target: e.target, rel: e.rel, href: e.href, class: (0, r.C_)(["sc-navigation__item ui-button--text", { "sc-navigation__item--primary": !s.value, "ui-button--small": l.value, "ui-button--secondary": s.value }]), onClick: t => (0, i.SU)(a)(e) }, { default: (0, o.w5)((() => [(0, o.WI)(t.$slots, "item-text", (0, r.vs)((0, o.F4)({ item: e })), (() => [(0, o.Uk)((0, r.zw)(e.title), 1)]))])), _: 2 }, 1032, ["id", "aria-label", "target", "rel", "href", "class", "onClick"])])))), 128)), (0, o.WI)(t.$slots, "after")])) } }), N = R, O = N; var L = n(98646); const $ = { class: "sc-footer" }, q = (0, o.aZ)({ __name: "ScFooter", setup(e) { const { translate: t } = (0, u.Z)(), n = (0, f.V)(), { hasFooterNavigationOnMobile: a, hasRecaptchaFooter: s } = y(), { footerLinks: l } = A(), d = (0, o.f3)(L.bz), m = (0, o.Fl)((() => !(null !== d && void 0 !== d && d.value) || a.value)), v = (0, o.Fl)((() => { var e; return !(null !== (e = n.settings) && void 0 !== e && e.disableCopyrightLink) })), p = (0, o.Fl)((() => m.value ? l.value : [])), g = (0, o.Fl)((() => null !== d && void 0 !== d && d.value ? "after" : "default")); return (e, n) => { const a = (0, o.up)("i18n-t"); return (0, o.wg)(), (0, o.iD)("footer", $, [(0, o.WI)(e.$slots, "navigation", (0, r.vs)((0, o.F4)({ navigation: (0, i.SU)(l) })), (() => [(0, o.Wm)(O, { items: p.value, class: "sc-footer__navigation sc-navigation--secondary sc-navigation--small sc-navigation--multiline" }, { item: (0, o.w5)((t => [(0, o.WI)(e.$slots, "navigation-item", (0, r.vs)((0, o.F4)(t)))])), "item-text": (0, o.w5)((t => [(0, o.WI)(e.$slots, "navigation-item-text", (0, r.vs)((0, o.F4)(t)))])), [g.value]: (0, o.w5)((() => [(0, o.WI)(e.$slots, "copyright", {}, (() => [v.value ? ((0, o.wg)(), (0, o.j4)(E, { key: 0, class: "sc-navigation__item sc-navigation__item--copyright" })) : (0, o.kq)("", !0)]))])), _: 2 }, 1032, ["items"]), (0, i.SU)(s) ? ((0, o.wg)(), (0, o.j4)(a, { key: 0, keypath: "footer.recaptcha.main", scope: "global", tag: "div", class: "sc-footer__recaptcha" }, { privacyPolicy: (0, o.w5)((() => [(0, o.Wm)((0, i.SU)(c.cR), { href: "https://policies.google.com/privacy", target: "_blank", rel: "noopener noreferrer", class: "sc-footer__recaptcha-link" }, { default: (0, o.w5)((() => [(0, o.Uk)((0, r.zw)((0, i.SU)(t)("footer.recaptcha.privacyPolicy")), 1)])), _: 1 })])), termsOfService: (0, o.w5)((() => [(0, o.Wm)((0, i.SU)(c.cR), { href: "https://policies.google.com/terms", target: "_blank", rel: "noopener noreferrer", class: "sc-footer__recaptcha-link" }, { default: (0, o.w5)((() => [(0, o.Uk)((0, r.zw)((0, i.SU)(t)("footer.recaptcha.termsOfService")), 1)])), _: 1 })])), _: 1 })) : (0, o.kq)("", !0)]))]) } } }), H = q, Z = H; var j = n(70059); const M = { key: 0, class: "sc-legal-disclaimer" }, z = { __name: "ScLegalDisclaimer", setup(e) { const t = (0, f.V)(), { translate: n } = (0, u.Z)(), a = (0, o.Fl)((() => [n("footer.legalDisclaimer.shared"), n("footer.legalDisclaimer." + (t.isResults ? "results" : "interview"))])), s = (0, o.Fl)((() => a.value.every((e => "" !== e)))); return (e, t) => s.value ? ((0, o.wg)(), (0, o.iD)("div", M, [((0, o.wg)(!0), (0, o.iD)(o.HY, null, (0, o.Ko)(a.value, ((e, t) => ((0, o.wg)(), (0, o.j4)((0, i.SU)(c.II), { key: t, class: "sc-legal-disclaimer__paragraph ui-text--caption" }, { default: (0, o.w5)((() => [(0, o.Uk)((0, r.zw)(e), 1)])), _: 2 }, 1024)))), 128))])) : (0, o.kq)("", !0) } }, B = z, V = B, Y = { __name: "ScFooter", setup(e) { const t = (0, f.V)(), n = (0, o.Fl)((() => { var e; return "results" === (null === (e = t.currentFormQuestion) || void 0 === e ? void 0 : e.type) })); return (e, t) => ((0, o.wg)(), (0, o.iD)(o.HY, null, [((0, o.wg)(), (0, o.j4)((0, o.LL)(Z))), n.value ? ((0, o.wg)(), (0, o.j4)(j.Z, { key: 0 })) : (0, o.kq)("", !0), (0, o.Wm)(V)], 64)) } }, G = Y, Q = G; var J = n(43789); const K = ["src", "alt"], X = { __name: "ScHeaderLogo", props: { isStartOverAvailable: { type: Boolean, default: !1 } }, setup(e) { const { translate: t } = (0, u.Z)(), a = (0, f.V)(), s = (0, o.Fl)((() => { var e, t, i, s; const r = null === a || void 0 === a || null === (e = a.settings) || void 0 === e || null === (t = e.customLogo) || void 0 === t ? void 0 : t.remote, l = null === a || void 0 === a || null === (i = a.settings) || void 0 === i || null === (s = i.customLogo) || void 0 === s ? void 0 : s.image; return !0 === r ? { type: "url", image: l } : !1 === r ? { type: "component", image: (0, o.h)("div", { innerHTML: l }) } : { type: "default", image: (0, o.RC)((() => Promise.resolve().then(n.bind(n, 21731)))) } })), l = (0, o.Fl)((() => t("header.logoLabel", { applicationTitle: J.Z.title }))); return (n, a) => ((0, o.wg)(), (0, o.j4)((0, i.SU)(c.wg), { id: "header-logo", class: "ui-button--text sc-header-logo__brand", "aria-label": e.isStartOverAvailable ? l.value : null, disabled: !e.isStartOverAvailable }, { default: (0, o.w5)((() => [(0, o.WI)(n.$slots, "logo", (0, r.vs)((0, o.F4)({ logo: s.value })), (() => ["default" === s.value.type ? ((0, o.wg)(), (0, o.j4)((0, i.SU)(c.ax), { key: 0, class: "sc-header-logo__logo-icon", icon: s.value.image }, null, 8, ["icon"])) : "url" === s.value.type ? ((0, o.wg)(), (0, o.iD)("img", { key: 1, src: s.value.image, class: "sc-header-logo__logo-icon", referrerpolicy: "no-referrer", alt: (0, i.SU)(t)("header.logoLabel") }, null, 8, K)) : "component" === s.value.type ? ((0, o.wg)(), (0, o.j4)((0, o.LL)(s.value.image), { key: 2, class: "sc-header-logo__logo-icon" })) : (0, o.kq)("", !0)]))])), _: 3 }, 8, ["aria-label", "disabled"])) } }, ee = X, te = ee, ne = { __name: "ScHeaderLogo", setup(e) { const t = (0, o.RC)((() => Promise.resolve().then(n.bind(n, 21731)))); return (e, n) => ((0, o.wg)(), (0, o.j4)(te, null, { logo: (0, o.w5)((() => [(0, o.Wm)((0, i.SU)(c.ax), { icon: (0, i.SU)(t), "aria-hidden": "true", class: "sc-header-logo__logo-icon" }, null, 8, ["icon"])])), _: 1 })) } }, ae = ne, ie = ae; var se = n(96358), oe = (n(53705), n(70)), re = n(47174), le = n(39682); const ce = (0, o.aZ)({ __name: "ScErrorBoundary", emits: ["error"], setup(e, { emit: t }) { const n = (0, i.iH)(!1); (0, o.d1)((e => (t("error"), le.u3.error(e), le.CA.captureException(e), n.value = !0, !1))); const a = () => { n.value = !1 }; return (e, t) => n.value ? (0, o.WI)(e.$slots, "error", (0, r.vs)((0, o.dG)({ key: 1 }, { restart: a }))) : (0, o.WI)(e.$slots, "default", { key: 0 }) } }), ue = ce, de = ue; var me = n(69070), ve = n(3862), pe = n(7975); n(81289); const ge = { languages: { component: (0, o.RC)((() => n.e(9671).then(n.bind(n, 64357)))) }, "for-business": { component: (0, o.RC)((() => n.e(5035).then(n.bind(n, 89359)))) }, "medical-certification": { component: (0, o.RC)((() => Promise.all([n.e(6863), n.e(489)]).then(n.bind(n, 48)))) }, "terms-of-service": { component: (0, o.RC)((() => n.e(8786).then(n.bind(n, 18020)))) }, "privacy-policy": { component: (0, o.RC)((() => n.e(327).then(n.bind(n, 99267)))) }, "interview-id": { component: (0, o.RC)((() => n.e(6884).then(n.bind(n, 99376)))) }, "report-an-issue": { component: (0, o.RC)((() => n.e(3947).then(n.bind(n, 83598)))) }, gender: { component: (0, o.RC)((() => n.e(7194).then(n.bind(n, 45247)))) }, why: { component: (0, o.RC)((() => n.e(5146).then(n.bind(n, 13235)))) }, "why-intent-survey": { component: (0, o.RC)((() => n.e(8320).then(n.bind(n, 8389)))) }, "intent-survey-generic-rationale": { component: (0, o.RC)((() => n.e(3357).then(n.bind(n, 59883)))) }, "recommendation-explanation": { component: (0, o.RC)((() => n.e(7481).then(n.bind(n, 34328)))) }, info: { component: (0, o.RC)((() => n.e(9014).then(n.bind(n, 34079)))) }, summary: { component: (0, o.RC)((() => Promise.resolve().then(n.bind(n, 54537)))) }, condition: { component: (0, o.RC)((() => n.e(5916).then(n.bind(n, 42095)))) } }, he = ["languages", "for-business", "medical-certification", "terms-of-service", "privacy-policy", "interview-id"], fe = Object.keys(ge).reduce(((e, t) => (he.includes(t) && (e[t] = ge[t]), e)), {}), ye = { languages: "menu.languages", "for-business": "menu.forBusiness", "medical-certification": "sidePanel.medicalCertification.title", "terms-of-service": "common.termsOfService", "privacy-policy": "common.privacyPolicy", "interview-id": "menu.interviewId", gender: "patientSex.gender", why: "intelligentInterview.why.title", "why-intent-survey": "intelligentInterview.why.title", "recommendation-explanation": "results.recommendationExplanation.title", "report-an-issue": "intelligentInterview.issue.title", info: "intelligentInterview.info.title", summary: "results.summaryPanel.title", condition: "" }, _e = { class: "sc-mega-menu" }, we = { class: "ui-side-panel__label sc-mega-menu__header" }, be = { class: "sc-mega-menu__heading" }, Se = { id: "mega-menu-content", class: "ui-side-panel__content", tabindex: "-1" }, ke = { class: "sc-mega-menu__current-language" }, Ue = { __name: "ScMegaMenu", setup(e) { const t = (0, P.J)(), n = (0, f.V)(), { translate: s } = (0, u.Z)(), { languageLabel: l } = (0, ve.Z)(), { clickHandler: d, megaMenuLinks: m } = A(), v = (0, o.Fl)((() => { var e; return !(null !== (e = n.settings) && void 0 !== e && e.disableCopyrightLink) })), p = (0, o.Fl)((() => t.noInternet)), g = (0, i.iH)({}), h = (0, i.iH)(!1); function y(e) { g.value = e } const _ = (0, o.Fl)((() => { var e; return "menu" === (null === (e = t.currentlyOpenPanel) || void 0 === e ? void 0 : e.type) ? t.currentlyOpenPanel : null })), w = (0, o.Fl)((() => { var e; return ye[null === (e = _.value) || void 0 === e ? void 0 : e.id] })), b = (0, o.Fl)((() => (0, se.Z)((0, se.Z)({}, g.value), {}, { title: w.value ? s(w.value) : g.value.title || s("menu.title") }))), S = (0, i.iH)([]), k = (0, o.Fl)((() => { var e, t; return null === (e = fe[null === (t = _.value) || void 0 === t ? void 0 : t.id]) || void 0 === e ? void 0 : e.component })), U = (0, o.Fl)((() => { var e; return S.value.includes(null === (e = _.value) || void 0 === e ? void 0 : e.id) })), x = (0, o.Fl)((() => n.showLanguageSelector)); function I() { const e = 300; (0, oe.Z)((() => { var e; S.value.push(null === (e = _.value) || void 0 === e ? void 0 : e.id), h.value = !1 }), { wait: U.value ? 0 : e })() } function C() { h.value = !0 } function F() { h.value = !1 } (0, o.YP)(k, (() => { g.value = {} })); const T = (0, o.Fl)((() => { var e; return "mega-menu" !== (null === (e = _.value) || void 0 === e ? void 0 : e.id) })); function W() { t.openPanel({ type: "menu", id: "mega-menu" }) } function D() { t.openPanel({ type: "menu", id: "languages" }) } function R() { t.closePanel() } function N() { t.closePanel(!0) } return (e, t) => ((0, o.wg)(), (0, o.iD)("div", _e, [(0, o.WI)(e.$slots, "hamburger", (0, r.vs)((0, o.F4)({ openHandler: W })), (() => [(0, o.Wm)((0, i.SU)(c.wg), { "data-test-id": (0, i.SU)(pe).HAMBURGER_MENU_BUTTON, class: "ui-button--text sc-mega-menu__hamburger", "aria-label": (0, i.SU)(s)("header.menu"), onClick: W }, { default: (0, o.w5)((() => [(0, o.Wm)((0, i.SU)(c.ax), { icon: "menu", class: "ui-button__icon" })])), _: 1 }, 8, ["data-test-id", "aria-label"])])), (0, o.Wm)((0, i.SU)(c.Xo), (0, o.dG)({ "model-value": !!_.value }, b.value, { class: "sc-mega-menu__panel", "button-close-attrs": { id: "mega-menu-close", ["aria-label"]: (0, i.SU)(s)("common.close") }, "onUpdate:modelValue": N }), { label: (0, o.w5)((t => [(0, o.WI)(e.$slots, "label", (0, r.vs)((0, o.F4)(t)), (() => [(0, o._)("div", we, [(0, o._)("div", be, [T.value ? ((0, o.wg)(), (0, o.j4)((0, i.SU)(c.wg), { key: 0, id: "mega-menu-back", class: "ui-button--text sc-mega-menu__back", "aria-label": (0, i.SU)(s)("common.back"), onClick: R }, { default: (0, o.w5)((() => [(0, o.Wm)((0, i.SU)(c.ax), { icon: "chevron-left", class: "ui-button__icon" })])), _: 1 }, 8, ["aria-label"])) : (0, o.kq)("", !0), (0, o.Wm)((0, i.SU)(c.Hg), { id: "mega-menu-title" }, { default: (0, o.w5)((() => [(0, o.Uk)((0, r.zw)(t.title), 1)])), _: 2 }, 1024)]), t.subtitle ? ((0, o.wg)(), (0, o.j4)((0, i.SU)(c.II), { key: 0, id: "mega-menu-subtitle", class: (0, r.C_)(["ui-side-panel__subtitle sc-mega-menu__subtitle", { "sc-mega-menu__subtitle--has-back": T.value }]) }, { default: (0, o.w5)((() => [(0, o.Uk)((0, r.zw)(t.subtitle), 1)])), _: 2 }, 1032, ["class"])) : (0, o.kq)("", !0)])]))])), content: (0, o.w5)((() => [(0, o.WI)(e.$slots, "content", (0, r.vs)((0, o.F4)({ translate: (0, i.SU)(s), openMenu: _.value, languageLabel: (0, i.SU)(l), megaMenuLinks: (0, i.SU)(m), pageView: k.value })), (() => [(0, o._)("div", Se, [(0, o.Wm)((0, i.SU)(c.JM), { "model-value": "mega-menu" !== _.value.id ? _.value.id : "" }, { default: (0, o.w5)((() => [(0, o.WI)(e.$slots, "languages", (0, r.vs)((0, o.F4)({ translate: (0, i.SU)(s) })), (() => [x.value && !k.value ? ((0, o.wg)(), (0, o.j4)(re.Z, { id: "mega-menu-language", key: "languages", title: (0, i.SU)(s)("menu.language"), name: "languages", class: "ui-button--text sc-mega-menu__trigger sc-mega-menu__language", onClick: D }, { label: (0, o.w5)((() => [(0, o.Uk)((0, r.zw)((0, i.SU)(s)("menu.language")), 1)])), suffix: (0, o.w5)((() => [(0, o._)("div", ke, [(0, o.Uk)((0, r.zw)((0, i.SU)(l)) + " ", 1), (0, o.Wm)((0, i.SU)(c.ax), { icon: "chevron-right", class: "ui-button__icon ui-button__icon--right" })])])), _: 1 }, 8, ["title"])) : (0, o.kq)("", !0)])), (0, o.WI)(e.$slots, "pages", (0, r.vs)((0, o.F4)({ megaMenuLinks: (0, i.SU)(m) })), (() => [k.value ? (0, o.kq)("", !0) : ((0, o.wg)(!0), (0, o.iD)(o.HY, { key: 0 }, (0, o.Ko)((0, i.SU)(m), (e => ((0, o.wg)(), (0, o.j4)(re.Z, { id: e.id, key: e.title, title: e.title, name: e.name, "aria-label": e["aria-label"], target: e.target, rel: e.rel, href: e.href, class: "ui-button--text sc-mega-menu__trigger", "suffix-visible": "always", "suffix-attrs": { icon: "chevron-right" }, onClick: t => (0, i.SU)(d)(e) }, { default: (0, o.w5)((() => [(0, o.Uk)((0, r.zw)(e.title), 1)])), _: 2 }, 1032, ["id", "title", "name", "aria-label", "target", "rel", "href", "onClick"])))), 128))])), v.value ? (0, o.WI)(e.$slots, "copyright", { key: 0 }, (() => [k.value ? (0, o.kq)("", !0) : ((0, o.wg)(), (0, o.j4)(re.Z, { key: 0, class: "sc-mega-menu__copyright", tag: "div" }, { default: (0, o.w5)((() => [(0, o.Wm)(E)])), _: 1 }))])) : (0, o.kq)("", !0), !p.value || U.value ? ((0, o.wg)(), (0, o.iD)(o.HY, { key: 1 }, [h.value ? ((0, o.wg)(), (0, o.j4)((0, i.SU)(c.MH), { key: 0, name: "", "is-loading": !0, type: "skeleton", class: "sc-mega-menu__loader" }, { "loader-blocks": (0, o.w5)((() => [(0, o.WI)(e.$slots, "loader-blocks")])), _: 3 })) : (0, o.kq)("", !0), k.value ? ((0, o.wg)(), (0, o.j4)(de, { key: 1, onError: F }, { error: (0, o.w5)((({ restart: e }) => [(0, o.Wm)(me.Z, { class: "sc-mega-menu__no-internet", condensed: !0, "try-again-button-attrs": { onClick: e }, "with-fake-reconnect": !1 }, null, 8, ["try-again-button-attrs"])])), default: (0, o.w5)((() => [(0, o.wy)((0, o._)("div", null, [((0, o.wg)(), (0, o.j4)(o.n4, { onPending: C, onResolve: I }, { default: (0, o.w5)((() => [((0, o.wg)(), (0, o.j4)((0, o.LL)(k.value), { onClose: N, onUpdate: y }, null, 32))])), _: 1 }))], 512), [[a.F8, !h.value]])])), _: 1 })) : (0, o.kq)("", !0)], 64)) : k.value ? (0, o.WI)(e.$slots, "no-internet", { key: 2 }, (() => [(0, o.Wm)(me.Z, { class: "sc-mega-menu__no-internet", condensed: !0 })])) : (0, o.kq)("", !0)])), _: 3 }, 8, ["model-value"])])]))])), _: 3 }, 16, ["model-value", "button-close-attrs"])])) } }, xe = Ue, Ie = xe; var Ce = n(48320); const Fe = (0, o.aZ)({ __name: "ScLanguageSelector", props: { small: { type: Boolean, default: !1 } }, setup(e) { const t = (0, P.J)(), { translate: n } = (0, u.Z)(), { interfaceLanguage: a, languages: s, languageLabel: l, changeLanguage: d } = (0, ve.Z)(), m = (0, o.Fl)((() => t.noInternet)), v = (0, i.iH)(null), p = (0, i.iH)(!1), g = () => { p.value = !0 }, h = () => { p.value = !1 }; return (t, u) => (0, i.SU)(s) ? ((0, o.wg)(), (0, o.j4)((0, i.SU)(c.A8), (0, o.dG)({ key: 0, "model-value": (0, i.SU)(a), class: ["sc-language-selector", { "sc-language-selector--no-internet": m.value }], "toggle-element": v.value, "popover-attrs": { class: "sc-language-selector__popover" } }, t.$attrs, { translate: "no", onOpen: g, onClose: h }), { toggle: (0, o.w5)((a => [(0, o.WI)(t.$slots, "toggle", (0, r.vs)((0, o.F4)((0, se.Z)((0, se.Z)({}, a), {}, { languageLabel: (0, i.SU)(l), translate: (0, i.SU)(n), isDropdownOpened: p.value }))), (() => [(0, o.Wm)((0, i.SU)(c.II), { id: "language-selector-description", class: "visual-hidden sc-language-selector__description" }, { default: (0, o.w5)((() => [(0, o.Uk)((0, r.zw)((0, i.SU)(n)("languageSelector.description")), 1)])), _: 1 }), (0, o.Wm)((0, i.SU)(c.wg), { ref_key: "toggleButton", ref: v, "data-test-id": (0, i.SU)(pe).LANGUAGE_SELECTOR_BUTTON, class: (0, r.C_)(["ui-button--text sc-language-selector__toggle", { "ui-button--small": e.small }]), "aria-expanded": p.value, "aria-haspopup": "true", "aria-describedby": "language-selector-description", "aria-label": (0, i.SU)(n)("languageSelector.selectedLanguage", { language: (0, i.SU)(l) }), onClick: a.toggleHandler }, { default: (0, o.w5)((() => [(0, o.WI)(t.$slots, "toggle-text", (0, r.vs)((0, o.F4)({ languageLabel: (0, i.SU)(l), translate: (0, i.SU)(n) })), (() => [(0, o.Uk)((0, r.zw)((0, i.SU)(l)), 1)])), (0, o.WI)(t.$slots, "toggle-icon", {}, (() => [(0, o.Wm)((0, i.SU)(c.ax), { icon: "arrow-dropdown-down", class: "ui-button__icon ui-button__icon--right" })]))])), _: 2 }, 1032, ["data-test-id", "class", "aria-expanded", "aria-label", "onClick"])]))])), popover: (0, o.w5)((e => [(0, o.WI)(t.$slots, "popover", (0, r.vs)((0, o.F4)(e)))])), content: (0, o.w5)((e => [(0, o.WI)(t.$slots, "content", (0, r.vs)((0, o.F4)(e)))])), default: (0, o.w5)((e => [(0, o.WI)(t.$slots, "default", (0, r.vs)((0, o.F4)((0, se.Z)((0, se.Z)({}, e), {}, { noInternet: m.value, languages: (0, i.SU)(s), changeLanguage: (0, i.SU)(d), translate: (0, i.SU)(n) }))), (() => [m.value ? (0, o.WI)(t.$slots, "no-internet", { key: 1 }, (() => [(0, o.Wm)(me.Z, { key: "no-internet", class: "sc-language-selector__no-internet", condensed: !0 })])) : (0, o.WI)(t.$slots, "items", (0, r.vs)((0, o.dG)({ key: 0 }, { languages: (0, i.SU)(s), changeLanguage: (0, i.SU)(d) })), (() => [((0, o.wg)(!0), (0, o.iD)(o.HY, null, (0, o.Ko)((0, i.SU)(s), (n => ((0, o.wg)(), (0, o.j4)(Ce.Z, { key: n.code, value: n.code, class: "sc-language-selector__item", lang: n.code, onClick: t => { e.closeHandler(), (0, i.SU)(d)(n) } }, { default: (0, o.w5)((() => [(0, o.WI)(t.$slots, "item-text", (0, r.vs)((0, o.F4)({ language: n })), (() => [(0, o.Uk)((0, r.zw)(n.label), 1)]))])), _: 2 }, 1032, ["value", "lang", "onClick"])))), 128))]))]))])), _: 3 }, 16, ["model-value", "class", "toggle-element"])) : (0, o.kq)("", !0) } }), Ee = Fe, Pe = Ee, Te = { class: "sc-header__container" }, We = { __name: "ScHeader", props: { subtle: { type: Boolean, default: !1 } }, setup(e) { const t = e, n = (0, P.J)(), a = (0, f.V)(), { hasFooterNavigationOnMobile: s } = y(), { translate: l } = (0, u.Z)(), { languageLabel: d } = (0, ve.Z)(), { headerLinks: m } = A(), v = (0, o.f3)(L.bz), p = (0, o.Fl)((() => a.isUnauthorized)), h = (0, o.Fl)((() => !a.isUnauthorized && !a.isFirstDisplayableQuestion)); async function _() { if (!h.value) return; const e = "logo"; g.c.trackEvent("Logo", { event_details: { event_type: "click", event_object: "start_over", placement: e } }, ["infermedicaAnalytics"]), await n.openPanel({ type: "modal", id: "confirmation", data: { placement: e } }) } const w = () => n.openPanel({ type: "panel", id: "languages" }), b = (0, o.Fl)((() => !p.value && v.value && (!t.subtle || !s.value))), S = (0, o.Fl)((() => !p.value && !v.value && a.showLanguageSelector)); return (t, n) => ((0, o.wg)(), (0, o.iD)("header", { class: (0, r.C_)(["sc-header", { "sc-header--subtle": e.subtle }]) }, [(0, o._)("div", Te, [(0, o.WI)(t.$slots, "logo", (0, r.vs)((0, o.F4)({ startOverHandler: _ })), (() => [(0, o.Wm)(ie, { "is-start-over-available": h.value, onClick: _ }, null, 8, ["is-start-over-available"])])), p.value ? (0, o.kq)("", !0) : ((0, o.wg)(), (0, o.iD)(o.HY, { key: 0 }, [(0, o.WI)(t.$slots, "navigation", (0, r.vs)((0, o.F4)({ navigation: (0, i.SU)(m) })), (() => [(0, o.Wm)(O, { items: (0, i.SU)(m), class: "sc-header__navigation" }, { item: (0, o.w5)((e => [(0, o.WI)(t.$slots, "navigation-item", (0, r.vs)((0, o.F4)(e)))])), "item-text": (0, o.w5)((e => [(0, o.WI)(t.$slots, "navigation-item-text", (0, r.vs)((0, o.F4)(e)))])), _: 3 }, 8, ["items"])])), (0, o.WI)(t.$slots, "language", (0, r.vs)((0, o.F4)({ hasLanguageSelector: S.value, isMobile: (0, i.SU)(v), mobileLanguageHandler: w, languageLabel: (0, i.SU)(d) })), (() => [S.value ? (0, o.WI)(t.$slots, "language-tablet", { key: 0 }, (() => [(0, o.Wm)(Pe, { id: "header-language-selector", class: "sc-header__language", small: e.subtle }, null, 8, ["small"])])) : !b.value && e.subtle ? (0, o.WI)(t.$slots, "language-mobile", (0, r.vs)((0, o.dG)({ key: 1 }, { mobileLanguageHandler: w, languageLabel: (0, i.SU)(d) })), (() => [(0, o.Wm)((0, i.SU)(c.wg), { class: (0, r.C_)(["ui-button--text", { "ui-button--small": e.subtle }]), "data-test-id": (0, i.SU)(pe).LANGUAGE_SELECTOR_BUTTON, onClick: w }, { default: (0, o.w5)((() => [(0, o.Uk)((0, r.zw)((0, i.SU)(d)) + " ", 1), (0, o.Wm)((0, i.SU)(c.ax), { icon: "arrow-dropdown-down", class: "ui-button__icon ui-button__icon--right" })])), _: 1 }, 8, ["class", "data-test-id"])])) : (0, o.kq)("", !0)]))], 64)), (0, o.WI)(t.$slots, "mobile-menu", (0, r.vs)((0, o.F4)({ isMobile: (0, i.SU)(v) })), (() => [b.value && !e.subtle ? (0, o.WI)(t.$slots, "mobile-menu-hamburger", { key: 0 }, (() => [(0, o.Wm)(Ie, { id: "header-mega-menu", class: "sc-header__mobile-menu" })])) : b.value && e.subtle ? (0, o.WI)(t.$slots, "mobile-menu-dots", { key: 1 }, (() => [(0, o.Wm)(Ie, { id: "header-mega-menu", class: "sc-header__mobile-menu" }, { hamburger: (0, o.w5)((({ openHandler: e }) => [(0, o.Wm)((0, i.SU)(c.wg), { class: "ui-button--text", onClick: e }, { default: (0, o.w5)((() => [(0, o.Uk)((0, r.zw)((0, i.SU)(l)("header.menu")) + " ", 1), (0, o.Wm)((0, i.SU)(c.ax), { icon: "dots", class: "ui-button__icon ui-button__icon--right" })])), _: 2 }, 1032, ["onClick"])])), _: 1 })])) : (0, o.kq)("", !0)]))])], 2)) } }, Ae = We, De = Ae; var Re = n(76990); const Ne = { xmlns: "http://www.w3.org/2000/svg", fill: "none", viewBox: "0 0 160 160", role: "img" }, Oe = (0, o.uE)('<circle cx="80" cy="80" r="80" fill="#FFE4E4"></circle><mask id="mask0_852_43257" width="160" height="160" x="0" y="0" maskUnits="userSpaceOnUse" style="mask-type:alpha;"><circle cx="80" cy="80" r="80" fill="#FFE8B8"></circle></mask><g mask="url(#mask0_852_43257)"><rect width="80" height="125" x="40" y="40" fill="#475463" stroke="#333D48" stroke-width="2" rx="8"></rect><path fill="#333D48" d="M40 80h80v2H40zm0-24h80v2H40zm0 48h80v2H40zm0 24h80v2H40z"></path><circle cx="97" cy="69" r="4" fill="#FFC037"></circle><circle cx="109" cy="69" r="4" fill="#FA514F"></circle><circle cx="97" cy="93" r="4" fill="#FFC037"></circle><circle cx="109" cy="93" r="4" fill="#FA514F"></circle><circle cx="97" cy="117" r="4" fill="#FFC037"></circle><circle cx="109" cy="117" r="4" fill="#FA514F"></circle></g><path fill="#333D48" fill-rule="evenodd" d="M77 40H48a8 8 0 0 0-8 8v29c20.434 0 37-16.566 37-37Z" clip-rule="evenodd"></path><rect width="64" height="64" x="8" y="8" fill="#FA514F" stroke="#D42E2E" stroke-width="2" rx="32"></rect><path fill="#fff" stroke="#D42E2E" stroke-width="2" d="M32.243 26.586a2 2 0 0 0-2.829 0l-2.828 2.828a2 2 0 0 0 0 2.829l7.778 7.778-7.778 7.778a2 2 0 0 0 0 2.828l2.828 2.829a2 2 0 0 0 2.829 0l7.778-7.778 7.778 7.778a2 2 0 0 0 2.828 0l2.829-2.829a2 2 0 0 0 0-2.828l-7.778-7.778 7.778-7.778a2 2 0 0 0 0-2.829l-2.829-2.828a2 2 0 0 0-2.828 0l-7.778 7.778-7.778-7.778Z"></path>', 6), Le = [Oe]; function $e(e, t) { return (0, o.wg)(), (0, o.iD)("svg", Ne, Le) } var qe = n(56490); const He = {}, Ze = (0, qe.Z)(He, [["render", $e]]), je = Ze, Me = { class: "sc-server-error__container" }, ze = { __name: "ScServerError", setup(e) { const t = (0, h.f)(), { translate: n } = (0, u.Z)(), { serverError: a } = (0, f.V)(), s = (0, o.Fl)((() => n("serverError.subtitle", { serverError: a }))), l = async () => { await t.restartInterview() }; return (e, t) => ((0, o.wg)(), (0, o.j4)((0, i.SU)(c.bK), { class: "sc-server-error" }, { default: (0, o.w5)((() => [(0, o.Wm)(Re.Z, { "heading-level": "2", title: (0, i.SU)(n)("serverError.title"), subtitle: s.value, illustration: !0 }, (0, o.Nv)({ illustration: (0, o.w5)((t => [(0, o.WI)(e.$slots, "illustration", (0, r.vs)((0, o.F4)(t)), (() => [(0, o.Wm)((0, i.SU)(je), { class: "ui-icon ui-message__illustration" })]))])), default: (0, o.w5)((() => [(0, o.WI)(e.$slots, "default", (0, r.vs)((0, o.F4)({ translate: (0, i.SU)(n), restartHandler: l })), (() => [(0, o.WI)(e.$slots, "description", (0, r.vs)((0, o.F4)({ translate: (0, i.SU)(n) })), (() => [(0, o.Wm)((0, i.SU)(c.II), null, { default: (0, o.w5)((() => [(0, o.Uk)((0, r.zw)((0, i.SU)(n)("serverError.description")), 1)])), _: 1 })])), (0, o._)("div", Me, [(0, o.WI)(e.$slots, "default", (0, r.vs)((0, o.F4)({ translate: (0, i.SU)(n), restartHandler: l })), (() => [(0, o.Wm)((0, i.SU)(c.II), { class: "sc-server-error__alert" }, { default: (0, o.w5)((() => [(0, o.Uk)((0, r.zw)((0, i.SU)(n)("serverError.failed")), 1)])), _: 1 }), (0, o.Wm)((0, i.SU)(c.wg), { class: "sc-server-error__restart ui-button--text", onClick: l }, { default: (0, o.w5)((() => [(0, o.Uk)((0, r.zw)((0, i.SU)(n)("serverError.restart")) + " ", 1), (0, o.Wm)((0, i.SU)(c.ax), { icon: "chevron-right", class: "ui-button__icon ui-button__icon--right" })])), _: 1 })]))])]))])), _: 2 }, [(0, o.Ko)(e.$slots, ((t, n) => ({ name: n, fn: (0, o.w5)((t => [(0, o.WI)(e.$slots, n, (0, r.vs)((0, o.F4)(t)))])) })))]), 1032, ["title", "subtitle"])])), _: 3 })) } }, Be = ze, Ve = Be, Ye = (0, o.aZ)({ __name: "ScSecurityError", setup(e) { const { translate: t, translateList: n } = (0, u.Z)(), a = J.Z.isEmbeddedMobileApp, s = (0, o.Fl)((() => n("securityError.hints" + (a ? "MobileApp" : "")))), l = (0, i.iH)(""), d = (0, o.Fl)((() => [{ name: "why", title: t("securityError.why"), content: t("securityError.whyExplanation") }])); return (e, n) => ((0, o.wg)(), (0, o.j4)((0, i.SU)(c.bK), { class: "sc-security-error" }, { default: (0, o.w5)((() => [(0, o.Wm)(Re.Z, { illustration: "lock", title: (0, i.SU)(t)("securityError.heading"), subtitle: (0, i.SU)(t)("securityError.subheading") }, (0, o.Nv)({ default: (0, o.w5)((() => [(0, o.WI)(e.$slots, "default", (0, r.vs)((0, o.F4)({ translate: (0, i.SU)(t) })), (() => [(0, o.Wm)((0, i.SU)(c.II), { class: "sc-security-error__description" }, { default: (0, o.w5)((() => [(0, o.Uk)((0, r.zw)((0, i.SU)(t)("securityError.description")), 1)])), _: 1 }), (0, o.Wm)((0, i.SU)(c.Hg), { class: "sc-security-error__hints-heading", level: "4" }, { default: (0, o.w5)((() => [(0, o.Uk)((0, r.zw)((0, i.SU)(t)("securityError.youCanTry")), 1)])), _: 1 }), (0, o.Wm)((0, i.SU)(c.F0), { class: "sc-security-error__hints", items: s.value }, null, 8, ["items"]), (0, o.Wm)((0, i.SU)(c.A9), { modelValue: l.value, "onUpdate:modelValue": n[0] || (n[0] = e => l.value = e), class: "sc-security-error__why-accordion", items: d.value }, (0, o.Nv)({ _: 2 }, [(0, o.Ko)(d.value, (({ name: e }, t) => ({ name: e, fn: (0, o.w5)((({ item: e }) => [(0, o.Wm)((0, i.SU)(c.II), null, { default: (0, o.w5)((() => [(0, o.Uk)((0, r.zw)(e.content), 1)])), _: 2 }, 1024)])) })))]), 1032, ["modelValue", "items"])]))])), _: 2 }, [(0, o.Ko)(e.$slots, ((t, n) => ({ name: n, fn: (0, o.w5)((t => [(0, o.WI)(e.$slots, n, (0, r.vs)((0, o.F4)(t)))])) })))]), 1032, ["title", "subtitle"])])), _: 3 })) } }), Ge = Ye, Qe = Ge; n(76626); var Je = n(11923), Ke = n(15006), Xe = n(70225), et = n(2992), tt = n(67906); const nt = { key: 0, class: "ui-side-panel__label" }, at = { class: "sc-side-panel__condition-subtitle" }, it = { key: 1, class: "ui-side-panel__label" }, st = { __name: "ScSidePanel", setup(e) { const t = (0, P.J)(), n = (0, f.V)(), { translate: s, locale: l } = (0, u.Z)(), d = (0, i.iH)({}), { computeConditionProgressBarValue: m } = (0, Ke.Z)(), v = (0, o.Fl)((() => { var e; return "panel" === (null === (e = t.currentlyOpenPanel) || void 0 === e ? void 0 : e.type) ? t.currentlyOpenPanel : null })), p = (0, o.Fl)((() => { var e; return ye[null === (e = v.value) || void 0 === e ? void 0 : e.id] })), g = (0, i.iH)(null), h = (0, o.Fl)((() => { var e, t, a; const i = p.value ? s(p.value) : null === (e = d.value) || void 0 === e ? void 0 : e.title, o = null === (t = v.value) || void 0 === t ? void 0 : t.id, r = ["terms-of-service", "privacy-policy"].includes(o), c = null === (a = d.value) || void 0 === a ? void 0 : a.subtitle; if (r) { const e = new Date(n.settings[`${(0, tt.d)(o)}Date`]); return { title: i, subtitle: s("menu.lastUpdated", { date: (0, et.p)(e, l.value) }) } } return { title: i, subtitle: c } })), y = (0, i.iH)(!1), _ = (0, o.Fl)((() => { var e, t; return null === (e = ge[null === (t = v.value) || void 0 === t ? void 0 : t.id]) || void 0 === e ? void 0 : e.component })), w = (0, i.iH)([]), b = (0, o.Fl)((() => { var e; return w.value.includes(null === (e = v.value) || void 0 === e ? void 0 : e.id) })), S = (0, o.Fl)((() => t.noInternet)), k = (0, o.Fl)((() => { var e; return "condition" === (null === (e = v.value) || void 0 === e ? void 0 : e.id) && t.condition })), U = (0, o.Fl)((() => { var e; const t = null === (e = n.settings) || void 0 === e ? void 0 : e.disableSidePanels; return !!t && (!0 === t || Array.isArray(t) && t.some((e => { var t; return e === (null === (t = v.value) || void 0 === t ? void 0 : t.id) }))) })); function x(e) { d.value = (0, se.Z)({}, e) } function I(e) { y.value = e } (0, o.m0)((async () => { if (!v.value || !h.value.title && "condition" !== v.value.id) return; const e = { type: "side-panel", payload: { title: h.value.title } }; "condition" === v.value.id && (e.type = "condition-details", e.payload = (0, Xe.zy)(k.value)), "summary" !== v.value.id ? ("privacy-policy" !== v.value.id && "terms-of-service" !== v.value.id || (await (0, o.Y3)(), e.payload.content = g.value.innerText), (0, Xe.QC)("modal-open", e), U.value && await t.closePanel()) : U.value && await t.closePanel() })), (0, o.YP)((() => v.value), (e => { e ? (y.value = !1, d.value = {}, window.parentIFrame && (window.parentIFrame.sendMessage("sidePanelOpened"), window.parentIFrame.scrollToOffset(0, 0))) : window.parentIFrame && (window.parentIFrame.sendMessage("sidePanelClosed"), window.parentIFrame.scrollToOffset(0, t.iframeOffset)) })); const C = () => { I(!0) }, F = () => { const e = 300; (0, oe.Z)((() => { var e; w.value.push(null === (e = v.value) || void 0 === e ? void 0 : e.id), I(!1) }), { wait: b.value ? 0 : e })() }; function E() { t.closePanel() } function T() { y.value = !1 } const W = () => { window.parentIFrame ? window.parentIFrame.scrollToOffset(0, 0) : g.value.scrollTop = 0 }, A = async e => { await (0, o.Y3)(); const t = 64, n = e.offsetTop - g.value.offsetTop - t; if (n < g.value.scrollTop && (g.value.scrollTop = n), window.parentIFrame) { const n = e.getBoundingClientRect().top - t; window.parentIFrame.scrollToOffset(0, n) } }; return (e, t) => (0, o.wy)(((0, o.wg)(), (0, o.j4)((0, i.SU)(c.Xo), (0, o.dG)({ "model-value": !!v.value }, h.value, { class: "sc-side-panel", "button-close-attrs": { id: "side-panel-close", "aria-label": (0, i.SU)(s)("common.close") }, "dialog-attrs": { "aria-modal": "true" }, "onUpdate:modelValue": E }), (0, o.Nv)({ label: (0, o.w5)((t => [(0, o.WI)(e.$slots, "label", (0, r.vs)((0, o.F4)((0, se.Z)((0, se.Z)({}, t), {}, { condition: k.value, translate: (0, i.SU)(s) }))), (() => [k.value ? ((0, o.wg)(), (0, o.iD)("div", nt, [(0, o._)("div", at, [(0, o.Wm)((0, i.SU)(c.Qs), { value: (0, i.SU)(m)(k.value.probabilityInt), class: (0, r.C_)(["sc-side-panel__condition-pill", { "sc-side-panel__condition-pill--secondary": "weak" === k.value.probabilityClass }]) }, null, 8, ["value", "class"]), (0, o.Wm)((0, i.SU)(c.II), { class: "ui-text--body-2-comfortable" }, { default: (0, o.w5)((() => [(0, o.Uk)((0, r.zw)((0, i.SU)(s)(`common.evidence.${k.value.probabilityClass}`)), 1)])), _: 1 })]), (0, o.Wm)((0, i.SU)(c.Hg), { level: "2", tag: "h1", class: "sc-side-panel__name" }, { default: (0, o.w5)((() => [(0, o.Uk)((0, r.zw)(k.value.common_name), 1)])), _: 1 }), k.value.common_name !== k.value.name ? ((0, o.wg)(), (0, o.j4)((0, i.SU)(c.II), { key: 0, class: "sc-side-panel__pro-name ui-text--body-2-comfortable" }, { default: (0, o.w5)((() => [(0, o.Uk)((0, r.zw)(k.value.name), 1)])), _: 1 })) : (0, o.kq)("", !0)])) : ((0, o.wg)(), (0, o.iD)("div", it, [(0, o.Wm)((0, i.SU)(c.Hg), { id: "side-panel-heading", tag: "h1", level: "2" }, { default: (0, o.w5)((() => [(0, o.Uk)((0, r.zw)(t.title), 1)])), _: 2 }, 1024), t.subtitle ? ((0, o.wg)(), (0, o.j4)((0, i.SU)(c.II), { key: 0, id: "side-panel-subtitle", class: "ui-side-panel__subtitle" }, { default: (0, o.w5)((() => [(0, o.Uk)((0, r.zw)(t.subtitle), 1)])), _: 2 }, 1024)) : (0, o.kq)("", !0)]))]))])), content: (0, o.w5)((({ contentAttrs: t }) => [(0, o.WI)(e.$slots, "content", (0, r.vs)((0, o.F4)({ contentAttrs: t, noInternet: S.value, viewLoaded: b.value, metaUpdate: x, isLoadingHandler: I, handleViewError: T, handlePending: C, handleResolve: F, scrollToTop: W, scrollToElement: A })), (() => [(0, o.wy)(((0, o.wg)(), (0, o.iD)("div", (0, o.dG)({ id: "side-panel-content", ref_key: "sidePanelContent", ref: g, class: "ui-side-panel__content" }, t), [!S.value || b.value ? (0, o.WI)(e.$slots, "panel-content", (0, r.vs)((0, o.dG)({ key: 0 }, { isLoading: y.value, panelView: _.value, metaUpdate: x, isLoadingHandler: I })), (() => [y.value ? ((0, o.wg)(), (0, o.j4)((0, i.SU)(c.MH), { key: 0, name: "", "is-loading": !0, type: "skeleton", class: "sc-side-panel__loader" }, { "loader-blocks": (0, o.w5)((() => [(0, o.WI)(e.$slots, "loader-blocks")])), _: 3 })) : (0, o.kq)("", !0), (0, o.Wm)(de, { onError: T }, { error: (0, o.w5)((({ restart: e }) => [(0, o.Wm)(me.Z, { class: "sc-side-panel__no-internet", condensed: !0, "try-again-button-attrs": { onClick: e }, "with-fake-reconnect": !1 }, null, 8, ["try-again-button-attrs"])])), default: (0, o.w5)((() => [(0, o.wy)((0, o._)("div", null, [((0, o.wg)(), (0, o.j4)(o.n4, { onPending: C, onResolve: F }, { default: (0, o.w5)((() => [((0, o.wg)(), (0, o.j4)((0, o.LL)(_.value), { onUpdate: x, onScrollTopRequest: W, onScrollToElementRequest: A }, null, 32))])), _: 1 }))], 512), [[a.F8, !y.value]])])), _: 1 })])) : (0, o.WI)(e.$slots, "no-internet", { key: 1 }, (() => [(0, o.Wm)(me.Z, { class: "sc-side-panel__no-internet", condensed: !0 })]))], 16)), [[(0, i.SU)(Je.mX)]])]))])), default: (0, o.w5)((() => [(0, o.WI)(e.$slots, "default")])), _: 2 }, [(0, o.Ko)(Object.fromEntries(Object.entries(e.$slots).filter((([e]) => !["label"].includes(e)))), ((t, n) => ({ name: n, fn: (0, o.w5)((t => [(0, o.WI)(e.$slots, n, (0, r.vs)((0, o.F4)(t)))])) })))]), 1040, ["model-value", "button-close-attrs"])), [[a.F8, !U.value]]) } }, ot = st, rt = ot, lt = { __name: "ScUnauthorized", setup(e) { const { translate: t } = (0, u.Z)(); return (e, n) => ((0, o.wg)(), (0, o.j4)((0, i.SU)(c.bK), { class: "sc-unauthorized" }, { default: (0, o.w5)((() => [(0, o.Wm)(Re.Z, { illustration: "lock", title: (0, i.SU)(t)("unauthorized.heading"), subtitle: (0, i.SU)(t)("unauthorized.code") }, (0, o.Nv)({ default: (0, o.w5)((() => [(0, o.WI)(e.$slots, "default", (0, r.vs)((0, o.F4)({ translate: (0, i.SU)(t) })), (() => [(0, o.Wm)((0, i.SU)(c.II), null, { default: (0, o.w5)((() => [(0, o.Uk)((0, r.zw)((0, i.SU)(t)("unauthorized.description")), 1)])), _: 1 })]))])), _: 2 }, [(0, o.Ko)(e.$slots, ((t, n) => ({ name: n, fn: (0, o.w5)((t => [(0, o.WI)(e.$slots, n, (0, r.vs)((0, o.F4)(t)))])) })))]), 1032, ["title", "subtitle"])])), _: 3 })) } }, ct = lt, ut = ct, dt = (0, o.aZ)({ __name: "ScQuestionWrapper", props: { loaderAttrs: { type: Object, default: () => ({ type: "question" }) } }, setup(e) { const t = (0, P.J)(), n = (0, f.V)(), { translate: a } = (0, u.Z)(), s = (0, o.Fl)((() => n.indexFormQuestions)), l = (0, o.Fl)((() => t.isLoading)), d = (0, o.Fl)((() => t.blockInterviewProgress)), m = (0, i.iH)(null), v = (0, i.iH)(null); let p = null; return p = (0, o.m0)((() => { var e; !l.value && h.o.value && ((0, Xe.QC)("initialization-complete", { interviewId: n.interviewIdWithReturns }), null === (e = p) || void 0 === e || e()) })), (0, o.YP)(l, (async e => { var t; e && (await (0, o.Y3)(), null === (t = document.querySelector("#question-loader")) || void 0 === t || t.focus({ preventScroll: !0 })) })), (0, o.m0)((async () => { l.value && (window.parentIFrame ? window.parentIFrame.scrollToOffset(0, 0) : document.body.scrollTo(0, 0)), l.value && m.value ? v.value = `${m.value.offsetHeight}px` : (await (0, o.Y3)(), v.value = null) })), (t, n) => ((0, o.wg)(), (0, o.iD)("div", { ref_key: "questionWrapperElement", ref: m, class: "sc-question-wrapper", style: (0, r.j5)({ height: v.value }) }, [(0, o.Wm)((0, i.SU)(c.MH), { id: "question-loader", "is-loading": l.value, type: "skeleton", "transition-type": "show", "loader-attrs": e.loaderAttrs, "eager-load-component": !0, class: "sc-question-wrapper__loader", "aria-valuetext": (0, i.SU)(a)("common.loading"), role: "progressbar", tabindex: "-1", name: "" }, { default: (0, o.w5)((() => [d.value ? ((0, o.wg)(), (0, o.j4)(me.Z, { key: 0 })) : (0, o.kq)("", !0), !d.value && (0, i.SU)(h.o) ? ((0, o.wg)(), (0, o.j4)((0, o.LL)((0, i.SU)(h.o)), { key: s.value })) : (0, o.kq)("", !0)])), _: 1 }, 8, ["is-loading", "loader-attrs", "aria-valuetext"])], 4)) } }), mt = dt, vt = mt; var pt = n(63785); const gt = (0, o.aZ)({ __name: "ScNewCheckupConfirmationModal", setup(e) { (0, a.sj)((e => ({ "7a161837": b.value, "360ade64": S.value }))); const t = (0, P.J)(), n = (0, f.V)(), s = (0, h.f)(), { translate: r } = (0, u.Z)(), d = (0, i.iH)(null), m = (0, o.Fl)((() => { var e, n; return "modal" === (null === (e = t.currentlyOpenPanel) || void 0 === e ? void 0 : e.type) && "confirmation" === (null === (n = t.currentlyOpenPanel) || void 0 === n ? void 0 : n.id) })), v = async () => { var e, n; g.c.trackEvent("Restart confirmation", { event_details: { event_type: "confirm", event_object: "start_over", placement: null === (e = t.currentlyOpenPanel) || void 0 === e || null === (n = e.data) || void 0 === n ? void 0 : n.placement } }, ["infermedicaAnalytics"]), await s.restartInterview() }; async function p(e) { e || await t.closePanel() } (0, o.YP)(m, (async e => { if (window.parentIFrame) if (e) { var n; const e = window.innerHeight; if (e < (null !== (n = t.parentHeight) && void 0 !== n ? n : 0)) window.parentIFrame.scrollToOffset(0, 0); else { var a; const n = e / 2 - (null !== (a = t.parentHeight) && void 0 !== a ? a : 0) / 2; window.parentIFrame.scrollToOffset(0, n) } window.parentIFrame.sendMessage("modalOpened") } else window.parentIFrame.sendMessage("modalClosed"), t.iframeOffset && window.parentIFrame.scrollToOffset(0, t.iframeOffset) })); const { orientation: y } = (0, l.xLQ)(), { width: _, height: w } = (0, l.iPe)(), b = (0, i.iH)("50%"), S = (0, i.iH)("translate(-50%, -50%)"), k = (0, o.Fl)((() => n.isRtl ? "50%" : "-50%")); return (0, o.YP)([m, y, _, w], (async ([e, t, n, a], [i, s, r, l]) => { if (window.parentIFrame) return; const c = t !== s || n !== r && a !== l; if (c && (b.value = "50%", S.value = `translate(${k.value}, -50%)`, await (0, pt._v)(1)), e) { var u, m, v; await (0, o.Y3)(); const e = null === (u = d.value) || void 0 === u || null === (m = u.$el) || void 0 === m ? void 0 : m.querySelector("dialog"), t = null === e || void 0 === e || null === (v = e.getBoundingClientRect()) || void 0 === v ? void 0 : v.top; b.value = `${t}px`, S.value = `translate(${k.value}, 0)` } })), (e, t) => ((0, o.wg)(), (0, o.j4)((0, i.SU)(c.hY), { ref_key: "modalRef", ref: d, class: "sc-new-checkup-confirmation-modal", "model-value": m.value, title: (0, i.SU)(r)("results.summary.confirmation.title"), description: (0, i.SU)(r)("results.summary.confirmation.description"), translation: { confirm: (0, i.SU)(r)("results.summary.confirmation.confirm"), cancel: (0, i.SU)(r)("common.cancel") }, "button-close-attrs": { "aria-label": (0, i.SU)(r)("common.cancel") }, onConfirm: v, "onUpdate:modelValue": t[0] || (t[0] = e => p(e)) }, null, 8, ["model-value", "title", "description", "translation", "button-close-attrs"])) } }), ht = gt, ft = ht; var yt = n(64455), _t = (n(47921), n(70785), n(89620), n(85267), n(70238), n(45880), n(4361), n(76359)), wt = n(10045), bt = n(22522); function St() { const e = () => { g.c.trackEvent("Page reloaded", { event_details: { event_type: "page_reloaded", event_object: "browser" } }, ["infermedicaAnalytics"]) }; return { trackPageReloaded: e } } function kt(e, t = null) { try { return e() } catch (n) { return le.u3.error(n), t } } function Ut() { document.body.addEventListener("click", (e => { const t = e.target, n = (null === t || void 0 === t ? void 0 : t.closest("a")) || (null === t || void 0 === t ? void 0 : t.closest("button")) || null; if (!n) return; const a = n.getAttribute("data-analytics-event"); if (!a) return; const i = kt((() => JSON.parse(a))); i ? g.c.trackEvent("Generic event", { event_details: i }) : le.u3.error("Cannot send analytics event - check passed JSON schema is correct") })) } function xt() { const e = (0, P.J)(), t = (0, f.V)(); window.iFrameResizer = { onMessage: n => { "iframeOffset" === (null === n || void 0 === n ? void 0 : n.type) && (e.iframeOffset = null === n || void 0 === n ? void 0 : n.value), "parentHeight" === (null === n || void 0 === n ? void 0 : n.type) && (e.parentHeight = null === n || void 0 === n ? void 0 : n.value), "isPageReloaded" === (null === n || void 0 === n ? void 0 : n.type) && (t.pageReloaded = !0) } }, n.e(1082).then(n.t.bind(n, 1082, 23)) } var It = n(53004); n(15089), n(88906), n(60178), n(59346), n(45060), n(60252), n(37193), n(12041), n(31266), n(95350), n(72490), n(98775), n(22414), n(65130), n(86554), n(57137); (function (e, t) { const n = { _0x5b5d1d: 78, _0x2b496f: 49, _0x502147: 64, _0x2be7f4: 81, _0xb192e0: 84, _0x3af676: 59, _0xe8b3a1: 72, _0x3b50fb: 106, _0x7f5ff6: 103, _0x2a1b2f: 115, _0x104c92: 94, _0x2d4a7f: 98, _0x34f268: 110, _0x1ce979: 83, _0x1a5d33: 82, _0x13a497: 88, _0x10616e: 55, _0x2752a8: 73, _0x328d6f: 1085, _0x506a60: 1092, _0xb66d95: 95, _0x479979: 90, _0x51f46f: 82, _0x5821b1: 63, _0x41d3d0: 77, _0x440345: 85 }, a = { _0x21f380: 591 }, i = { _0x34e34f: 408 }; function s(e, t, n, a) { return Pt(a - -i._0x34e34f, e) } const o = e(); function r(e, t, n, i) { return Pt(n - a._0x21f380, i) } while (1) try { const e = parseInt(s(63, n._0x5b5d1d, n._0x2b496f, n._0x502147)) / 1 + -parseInt(s(n._0x2be7f4, n._0xb192e0, n._0x3af676, n._0xe8b3a1)) / 2 + -parseInt(s(n._0x3b50fb, n._0x7f5ff6, n._0x2a1b2f, n._0x104c92)) / 3 + parseInt(s(121, n._0x2d4a7f, n._0x34f268, 105)) / 4 + parseInt(s(n._0x1ce979, 77, n._0x1a5d33, 85)) / 5 + -parseInt(s(n._0x13a497, n._0x10616e, 90, n._0x2752a8)) / 6 * (-parseInt(r(1098, 1105, n._0x328d6f, n._0x506a60)) / 7) + -parseInt(s(n._0xb66d95, n._0x479979, 64, n._0x51f46f)) / 8 * (parseInt(s(n._0x5821b1, n._0x41d3d0, n._0x440345, 77)) / 9); if (e === t) break; o["push"](o["shift"]()) } catch (l) { o["push"](o["shift"]()) } })(Et, 116183); const Ct = function () { const e = { _0x1489e6: 897, _0x48f89b: 881, _0xb881ab: 881, _0x2e03b1: 457, _0x42ca1b: 453, _0x5a714c: 451 }, t = { _0x2e45cc: 690, _0x30c0ff: 711, _0x1a4c83: 696, _0x3aed16: 701 }, n = { _0x19599a: 1422, _0xcb0dab: 1437, _0x4b93c4: 1416, _0x2b5ab1: 1436, _0x226a43: 1432, _0x5075dd: 1423, _0x671caa: 611, _0x60dd08: 621, _0x4330b0: 627 }, a = { _0x15c812: 1161, _0x1a74cf: 135 }, i = { _0x5f0ad8: 952 }; function s(e, t, n, a) { return Pt(e - 410, a) } const o = { faQcP: function (e, t) { return e === t } }; o[s(e._0x1489e6, e._0x48f89b, 877, e._0xb881ab)] = l(-e._0x2e03b1, -e._0x42ca1b, -e._0x5a714c, -459); const r = o; function l(e, t, n, a) { return Pt(e - -i._0x5f0ad8, a) } let c = !0; return function (e, i) { const s = { _0x5e6ef3: 109, _0xd1ea62: 126, _0x1e6098: 122 }; function o(e, t, n, i) { return l(i - a._0x15c812, t - 420, n - a._0x1a74cf, n) } const u = { FWbiM: function (e, t) { const n = { _0x937ba: 602 }; function a(e, t, a, i) { return Pt(a - -n._0x937ba, t) } return r[a(-s._0x5e6ef3, -123, -s._0xd1ea62, -s._0x1e6098)](e, t) }, ruMnn: r["FjMzL"] }; if ("uhBPi" === o(t._0x2e45cc, t._0x30c0ff, t._0x1a4c83, t._0x3aed16)) { const t = c ? function () { const t = { _0x2c9f0a: 494, _0xd8f261: 395, _0x28b490: 95 }, a = { _0x149349: 25, _0x94c1e9: 204, _0x31aeaf: 731 }; function s(e, t, n, i) { return o(e - a._0x149349, t - a._0x94c1e9, t, i - a._0x31aeaf) } function r(e, n, a, i) { return o(e - t._0x2c9f0a, n - t._0xd8f261, i, a - -t._0x28b490) } if (u["FWbiM"](u[s(n._0x19599a, n._0xcb0dab, n._0x4b93c4, 1423)], u[s(n._0x2b5ab1, n._0x226a43, n._0x19599a, n._0x5075dd)])) { if (i) { const t = i["apply"](e, arguments); return i = null, t } } else if (_0x2f4832) { const e = _0x2d1c87[r(636, n._0x671caa, n._0x60dd08, n._0x4330b0)](_0x30fae5, arguments); return _0x596d1a = null, e } } : function () { }; return c = !1, t } { const e = { _0x160132: 12, _0x533877: 17, _0x241dc9: 15, _0x54fa22: 34 }, t = { _0x11ff74: 731 }, n = _0x372a4a ? function () { function n(e, n, a, i) { return o(e - 206, n - 213, n, a - -t._0x11ff74) } if (_0x4db227) { const t = _0x5400fa[n(-e._0x160132, -e._0x533877, -e._0x241dc9, -e._0x54fa22)](_0x21e362, arguments); return _0xf16b2b = null, t } } : function () { }; return _0x3e0eb2 = !1, n } } }(), Ft = Ct(void 0, (function () { const e = { _0x1160b4: 658, _0x4e1503: 651, _0x54d2e8: 667, _0x540497: 642, _0x1837d1: 660, _0x23aca0: 643, _0x12a04a: 170, _0x14ec1b: 191, _0x232537: 164, _0x4f0cb3: 649, _0x43ade0: 645, _0x1e7145: 633, _0x2e26aa: 651, _0x2af772: 662, _0x171117: 640, _0x25902b: 622, _0xd70800: 690, _0x2566ba: 682, _0x5159c9: 174, _0x58ae1e: 187, _0x307281: 164, _0x1911e9: 163, _0x40db8e: 639, _0x41a3df: 650, _0x32a46f: 628 }, t = { _0x1d60d4: 301 }; function n(e, t, n, a) { return Pt(t - 169, a) } const a = {}; function i(e, n, a, i) { return Pt(e - -t._0x1d60d4, n) } a[n(e._0x1160b4, e._0x4e1503, e._0x54d2e8, 648)] = n(630, e._0x540497, e._0x1837d1, e._0x23aca0) + "+$"; const s = a; return Ft[i(170, e._0x12a04a, e._0x14ec1b, e._0x232537)]()[n(628, 644, e._0x4f0cb3, e._0x43ade0)](s[n(e._0x1e7145, e._0x2e26aa, 664, e._0x1e7145)])[n(e._0x2af772, e._0x171117, e._0x25902b, 655)]()[n(e._0xd70800, 675, e._0x2566ba, 694) + "r"](Ft)[i(e._0x5159c9, e._0x58ae1e, e._0x307281, e._0x1911e9)](n(e._0x40db8e, e._0x540497, e._0x41a3df, e._0x32a46f) + "+$") })); function Et() { const e = ["BMvXvNO", "ChvZAa", "odK4mg1NuhHjAa", "mteXmtKZogXnwND0sa", "BMTcB2y", "CNvnBM4", "CMvKDwnL", "mtuZnJnMAMjbA28", "zw5JCNLWDgvKra", "rMPnEKW", "zw5JCNLWDa", "ywX1zxm", "nJK2rxPSEvbb", "CMf3", "DwHcugK", "mtG5odi1DuzQDefu", "n2XkvMnwsG", "sLbPtMm", "AM9PBG", "quvtluncqW", "qLboB3e", "zw5JB2rL", "y3j5ChrV", "zgvJCNLWDa", "mZuZnZe4zefJr0jk", "Aw1WB3j0s2v5", "CMvWBgfJzufSBa", "yxrH", "y29UC3rYDwn0BW", "yxbWBhK", "BMDnChy", "sfHsDhy", "z2v0uMfUzg9TvG", "AKPnwu8", "zNjVBunOyxjdBW", "mty0nJKYDuD2B1jq", "DuLZzvC", "Dg9tDhjPBMC", "mtiYnJi3CM1Vuvbr", "kcGOlISPkYKRkq", "tLjcDuG", "C2vHCMnO", "zMfry1a", "C3bSAxq"]; return Et = function () { return e }, Et() } function Pt(e, t) { const n = Et(); return Pt = function (t, a) { t -= 471; let i = n[t]; if (void 0 === Pt["cNOttL"]) { var s = function (e) { const t = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789+/="; let n = "", a = "", i = n + s; for (let s, o, r = 0, l = 0; o = e["charAt"](l++); ~o && (s = r % 4 ? 64 * s + o : o, r++ % 4) ? n += i["charCodeAt"](l + 10) - 10 !== 0 ? String["fromCharCode"](255 & s >> (-2 * r & 6)) : r : 0)o = t["indexOf"](o); for (let s = 0, o = n["length"]; s < o; s++)a += "%" + ("00" + n["charCodeAt"](s)["toString"](16))["slice"](-2); return decodeURIComponent(a) }; Pt["LCIfQX"] = s, e = arguments, Pt["cNOttL"] = !0 } const o = n[0], r = t + o, l = e[r]; if (l) i = l; else { const t = function (e) { this["IPSaHn"] = e, this["lgopZU"] = [1, 0, 0], this["DQjrEU"] = function () { return "newState" }, this["WMGQSo"] = "\\w+ *\\(\\) *{\\w+ *", this["XPVGFq"] = "['|\"].+['|\"];? *}" }; t["prototype"]["mDeDFZ"] = function () { const e = new RegExp(this["WMGQSo"] + this["XPVGFq"]), t = e["test"](this["DQjrEU"]["toString"]()) ? --this["lgopZU"][1] : --this["lgopZU"][0]; return this["qExHDr"](t) }, t["prototype"]["qExHDr"] = function (e) { return Boolean(~e) ? this["AexbSp"](this["IPSaHn"]) : e }, t["prototype"]["AexbSp"] = function (e) { for (let t = 0, n = this["lgopZU"]["length"]; t < n; t++)this["lgopZU"]["push"](Math["round"](Math["random"]())), n = this["lgopZU"]["length"]; return e(this["lgopZU"][0]) }, new t(Pt)["mDeDFZ"](), i = Pt["LCIfQX"](i), e[r] = i } return i }, Pt(e, t) } function Tt() { const e = { _0x71d54f: 1139, _0x5672fb: 1120, _0x102a78: 1124, _0x9808d3: 1115, _0x29a368: 1115, _0x1207d6: 1126, _0x566cf5: 1114, _0x5df0ee: 1110, _0xefa0b8: 769, _0x38bb05: 763, _0x1422f8: 781, _0x3359bd: 742, _0x5e402c: 720, _0x5c4411: 723, _0x57f2f9: 749, _0x351cd0: 746, _0x13f10a: 760, _0x3b9a70: 1112, _0x4f274c: 1102 }, t = { _0xb8ad22: 1134, _0x53e56f: 1126, _0x1b814b: 1119, _0x2354a2: 70, _0x3a6307: 61, _0x4261c8: 1105, _0x44781d: 1092, _0x1f33f0: 55, _0x52f78f: 44, _0x5ec7e4: 54, _0x19f9b1: 54 }, n = { _0x46f332: 361, _0x4446c5: 32 }, a = { _0x26f9fd: 426, _0x590dd5: 1164 }, i = { _0xa4a87d: 606 }, s = { _0x29c367: 265 }, o = { ngMpv: function (e, t) { return e === t }, WjJgv: function (e, t) { return e % t }, uIseW: function (e, t) { return e !== t }, RFKWj: function (e) { return e() }, HXRtv: function (e, t) { return e === t }, waYtR: function (e, t) { return e !== t } }; var r; const { interviewId: l, sessionId: c } = o["RFKWj"](f.V); function u(e, t, n, a) { return Pt(e - s._0x29c367, n) } const d = o[m(1105, e._0x71d54f, 1098, e._0x5672fb)](r = o[m(e._0x102a78, e._0x9808d3, 1115, e._0x29a368)](c, null) || o["ngMpv"](c, void 0) ? void 0 : c[m(1118, e._0x1207d6, e._0x566cf5, e._0x5df0ee)]("-", ""), null) && o["waYtR"](r, void 0) ? r : ""; function m(e, t, n, a) { return Pt(a - i._0xa4a87d, t) } const v = l[u(e._0xefa0b8, e._0x38bb05, e._0x1422f8, 769)]("-", ""); return d[u(e._0x3359bd, e._0x5e402c, e._0x5c4411, 753)]("")[u(e._0x57f2f9, e._0x351cd0, e._0x13f10a, 731)](((e, i, s) => { function r(e, t, n, i) { return m(e - a._0x26f9fd, e, n - 182, t - -a._0x590dd5) } var l; function c(e, t, a, i) { return u(e - n._0x46f332, t - n._0x4446c5, i, i - 167) } return o[c(t._0xb8ad22, t._0x53e56f, t._0x1b814b, 1127)](o["WjJgv"](s, 2), 0) ? e[r(-t._0x2354a2, -79, -95, -t._0x3a6307)](i) : e[c(t._0x4261c8, 1092, t._0x44781d, 1092)](o[r(-t._0x1f33f0, -t._0x52f78f, -t._0x5ec7e4, -t._0x19f9b1)](l = v["at"](s), null) && void 0 !== l ? l : ""), e }), [])[m(1098, e._0x5df0ee, e._0x3b9a70, e._0x4f274c)]("") } async function Wt() { const e = { _0x19e959: 351, _0x3ab477: 347, _0x4d74fd: 361, _0x74f54c: 365, _0x297b15: 1381, _0x1c96ab: 1379, _0x1d6449: 354, _0x5de883: 350, _0x43e788: 365, _0x541cc4: 1389, _0x2c7cef: 1370, _0xc33cfe: 1368, _0x63ac38: 1361, _0x4b45d0: 1386, _0x5aab31: 1365, _0x59eda5: 1366, _0x476308: 1344, _0x2ea65c: 1366, _0x3a3852: 1384, _0x5b44c2: 1384, _0x2b4063: 1362, _0x4ed47d: 1378, _0x36cfa1: 1392, _0x31ab0f: 1391, _0x1a7c97: 333, _0x255ed5: 337, _0x45f19b: 338, _0x4f76c8: 339 }, t = { _0x2fb013: 867 }, n = { mdVWM: function (e) { return e() }, BPNoq: s(-e._0x19e959, -e._0x3ab477, -e._0x4d74fd, -e._0x74f54c), OASzB: i(1372, 1364, e._0x297b15, e._0x1c96ab), jJMYO: s(-e._0x1d6449, -e._0x5de883, -329, -e._0x43e788) }, a = n["mdVWM"](Tt); function i(e, n, a, i) { return Pt(n - t._0x2fb013, a) } function s(e, t, n, a) { return Pt(t - -838, e) } return crypto["subtle"][i(e._0x541cc4, e._0x2c7cef, e._0xc33cfe, e._0x63ac38)](n[i(e._0x4b45d0, e._0x5aab31, e._0x59eda5, e._0x5aab31)], (new TextEncoder)[i(e._0x476308, e._0x2ea65c, e._0x3a3852, e._0x5b44c2)](a), { name: n["OASzB"], length: 128 }, !0, [n[i(e._0x2b4063, e._0x4ed47d, e._0x36cfa1, e._0x31ab0f)], s(-e._0x1a7c97, -e._0x255ed5, -e._0x45f19b, -e._0x4f76c8)]) } async function At(e) { const t = { _0x3209d0: 817, _0x3a9f55: 846, _0x554489: 795, _0x57bcc2: 803, _0x2fef91: 815, _0xeced5e: 827, _0x199c50: 944, _0x625768: 948, _0x577591: 942, _0x50f9f7: 909, _0x364c72: 906, _0x4b852d: 888, _0x152756: 910, _0x26df0d: 838, _0x53d7e7: 829, _0x2458d9: 841, _0xb6692: 908, _0x4b89f3: 913, _0x288a5b: 920, _0x12e0cb: 870, _0x3786e7: 834, _0x2fd933: 847, _0x58f0c4: 853, _0x49d32e: 926, _0x19702a: 918, _0x1ca88a: 957, _0x2862c3: 915, _0x15b7df: 915, _0x5002bc: 937 }, n = { _0x2ba9c7: 341 }, a = { NRBuH: function (e) { return e() }, neqVz: m(858, t._0x3209d0, 838, t._0x3a9f55), Hiorc: function (e, t) { return e(t) } }, i = await a[m(t._0x554489, t._0x57bcc2, t._0x2fef91, t._0xeced5e)](Wt), s = crypto[d(t._0x199c50, 945, t._0x625768, t._0x577591) + d(t._0x50f9f7, 902, t._0x364c72, 921)](new Uint8Array(16)), o = {}; o["name"] = a[d(t._0x4b852d, 907, t._0x364c72, t._0x152756)], o["iv"] = s; const r = await window[m(t._0x26df0d, t._0x53d7e7, t._0x2458d9, 822)]["subtle"][d(t._0xb6692, t._0x4b89f3, 914, t._0x288a5b)](o, i, (new TextEncoder)["encode"](e)), l = a["Hiorc"](btoa, String[m(850, t._0x12e0cb, 853, t._0x3786e7) + "de"](...new Uint8Array(r))), c = btoa(String[m(t._0x2fd933, 853, t._0x58f0c4, t._0x58f0c4) + "de"](...new Uint8Array(s))), u = {}; function d(e, t, n, a) { return Pt(a - 432, e) } function m(e, t, a, i) { return Pt(a - n._0x2ba9c7, e) } return u["iv"] = c, u[d(908, t._0x49d32e, 923, t._0x19702a) + d(t._0x1ca88a, t._0x2862c3, t._0x15b7df, t._0x5002bc)] = l, u } function Dt() { const e = (0, P.J)(), t = (0, f.V)(), n = (0, bt.z)(), { translate: a } = (0, u.Z)(), s = navigator.userAgent.toLowerCase(), r = -1 !== s.indexOf("safari") && -1 === s.indexOf("chrome"); function c() { g.c.initialize({ forceSignInAnonymously: !0 }) } function d(e) { var t; "string" === typeof (null === e || void 0 === e ? void 0 : e.data) && null !== e && void 0 !== e && null !== (t = e.data) && void 0 !== t && t.startsWith("[iFrameSizer]") && (document.querySelector("body").classList.add("iframe-resized"), window.removeEventListener("message", d)) } function m() { const n = (0, o.Fl)((() => t.interviewIdWithReturns)), a = (0, o.Fl)((() => e.noInternet)); J.Z.devServerApi && (wt["default"].defaults.baseURL = J.Z.devServerApi), wt["default"].defaults.headers["app-version"] = J.Z.appVersion, (0, _t.ZP)(wt["default"], { retries: 3, retryDelay: e => 1e3 * e, retryCondition: e => _t.ZP.isNetworkOrIdempotentRequestError(e) && !a.value }), wt["default"].interceptors.response.use((e => e), (n => { var a, i, s, o, r; if (401 === (null === (a = n.response) || void 0 === a ? void 0 : a.status) || 429 === (null === (i = n.response) || void 0 === i ? void 0 : i.status)) { var l, c, u; le.CA.captureMessage(`Unauthorized error [${n.response.status}]`), t.authorized = !1, It.j.includes(null !== (l = null === (c = n.response) || void 0 === c || null === (u = c.data) || void 0 === u ? void 0 : u.type) && void 0 !== l ? l : "") && (t.isSecurityError = !0) } else { if (!(null !== (s = n.config) && void 0 !== s && null !== (o = s.metadata) && void 0 !== o && o.canBlockInterview && (null === (r = n.response) || void 0 === r ? void 0 : r.status) >= 500)) return Promise.reject(n); e.isLoading = !1, t.serverError = n.response.status } })), wt["default"].interceptors.request.use((e => { const t = e.url.search(/pdf/gm) > -1; return !n.value || t || (e.headers["Interview-Id"] = n.value), e })), wt["default"].interceptors.request.use((async e => { var n, a; const { encryptionEnabled: i } = t, s = null !== (n = null === (a = e.metadata) || void 0 === a ? void 0 : a.shouldEncryptPayload) && void 0 !== n && n && i; if (!s) return e; const { encryptedData: o, iv: r } = await At(JSON.stringify(e.data)); return e.headers["Infermedica-Encryption-IV"] = r, e.data = o, e })) } function v() { const e = (0, o.m0)((() => { t.pageReloaded && t.analyticsInitialized && (St().trackPageReloaded(), e && e()) })) } function p() { const e = (0, o.Fl)((() => n.patientHash)); (0, o.YP)(e, (() => { t.$patch({ riskFactors: [], suggestRequested: !1, diagnosis: [] }), n.intentSurveyAnswers = {}, n.unconfirmedIntentSurveyAnswers = {}, n.evidence = {}, n.clearResultsScreenData() })) } function h() { window.addEventListener("offline", (() => { (0, Xe.QC)("connection-issues-start"), e.noInternet = !0 })), window.addEventListener("online", (() => { (0, Xe.QC)("connection-issues-end"), e.noInternet = !1, e.blockInterviewProgress = !1 })) } function y() { document.addEventListener("focusin", (t => { e.isFocusTracked && (e.lastFocusedElement = t.target) })) } function _() { const e = window.self !== window.top; e || document.querySelector("body").classList.add("standalone"), window.addEventListener("message", d) } let w; function b() { const { innerHeight: e } = window; e !== w && requestAnimationFrame((() => { document.documentElement.style.setProperty("--view-height", `${e}px`), w = e })) } function S() { b(), window.addEventListener("resize", b), window.addEventListener("orientationchange", b) } function k() { const n = (0, i.iH)(null), s = e => { n.value = null === e || void 0 === e ? void 0 : e.$el }; (0, o.JJ)(L.X6, s), (0, o.JJ)(L.MR, n), (0, o.YP)([() => t.interfaceLanguage, () => { var t; return null === (t = e.currentlyOpenPanel) || void 0 === t ? void 0 : t.id }, () => e.isLoading, () => t.index], (async ([e, i, s], [r, c]) => { var u, d, m; const v = e !== r || c !== i; if (v || s) return; await (0, o.Y3)(); const p = null === (u = t.current) || void 0 === u ? void 0 : u.customAppTitle, g = p ? a(p) : null === (d = n.value) || void 0 === d ? void 0 : d.innerText; (0, l.ZQf)(g, { titleTemplate: `%s - ${J.Z.title}` }), null === (m = n.value) || void 0 === m || m.focus({ preventScroll: !0 }) })) } function U() { const e = document.body, n = "config_"; (0, o.YP)((() => t.token), ((t, a) => { e.removeAttribute(`${n}${a}`), e.setAttribute(`${n}${t}`, "") })) } function x() { const e = document.querySelector("link[rel~='icon']"), n = e.href; (0, o.YP)((() => t.token), (() => { const a = t.settings.customFavicon; e.href = null !== a && void 0 !== a ? a : n })) } function I() { document.body.addEventListener("click", (e => { var n, a, i, s; const o = null === (n = t.settings) || void 0 === n ? void 0 : n.linkAsEvent, r = null !== (a = null === o || void 0 === o ? void 0 : o.enabled) && void 0 !== a && a; if (!r) return; const l = e.target.closest("a"); if (!l) return; const c = null === o || void 0 === o ? void 0 : o.eventMapping.find((e => l.id === e.id)), u = new URL(l.href), d = null !== (i = null === c || void 0 === c ? void 0 : c.dataKey) && void 0 !== i ? i : "url", m = null !== (s = null === c || void 0 === c ? void 0 : c.action) && void 0 !== s ? s : "link-clicked"; e.preventDefault(), (0, Xe.QC)(m, { [d]: null !== c && void 0 !== c && c.relative ? u.pathname : u.href }) })) } (0, o.JJ)(L._C, r), (0, o.bv)((() => { xt(), h(), y(), _(), U(), I(), Ut(), x() })), c(), m(), v(), p(), S(), k() } function Rt() { const e = (0, f.V)(); Dt(), (0, o.YP)((() => e.interfaceLanguage), ((e, t) => { if (!t && "en" === e) { const e = document.createElement("meta"); e.name = "description", e.content = "Enter an interactive health survey made by doctors. Add your symptoms, answer questions, and get results in just a few minutes, anonymously and for free.", document.querySelector("head").appendChild(e) } })) } Ft(); const Nt = ["data-current-question"], Ot = { key: 0, class: "app__stepper" }, Lt = { class: "app__content" }, $t = { class: "app__main" }, qt = { __name: "App", setup(e) { const t = (0, P.J)(), n = (0, f.V)(); Rt(); const { hasHeader: a, hasFooterOnMobile: s, hasSideMenu: u } = y(), { steps: d, hasSteps: m, currentStep: v, currentStepNumber: g, hasDotsProgressBar: w, hasSubtleProgressBar: b, hasSubtleBottomProgressBar: S } = _(), k = (0, o.Fl)((() => "")), U = (0, o.Fl)((() => { var e; return null === (e = n.current) || void 0 === e ? void 0 : e.type })), x = (0, o.Fl)((() => n.isResults)), C = (0, o.Fl)((() => t.blockInterviewProgress)), F = (0, o.Fl)((() => { var e; return null !== (e = h.o.value) && void 0 !== e && e })), E = (0, o.Fl)((() => !(n.hasFormSetup && (F.value || n.isUnauthorized)))), T = (0, o.Fl)((() => t.isLoading)), W = (0, o.Fl)((() => n.isUnauthorized)), A = (0, o.Fl)((() => n.isSecurityError)), D = (0, o.Fl)((() => n.isServerError)), R = (0, l.ach)("(max-width: 767px)"); (0, o.JJ)(L.bz, R); const N = (0, o.Fl)((() => n.showLanguageSelector)), O = (0, o.Fl)((() => !W.value && (!a.value && N.value || !a.value && R.value && !s.value))), $ = (0, o.Fl)((() => a.value || O.value)), q = (0, o.Fl)((() => !R.value || s.value)); return (e, t) => ((0, o.wg)(), (0, o.j4)((0, i.SU)(c.MH), { "is-loading": E.value, "transition-attrs": { mode: "in-out" }, "loader-attrs": { class: "ui-loader-spinner--theme-brand", label: k.value }, "eager-load-component": !0, class: "app__loader" }, { default: (0, o.w5)((() => [$.value ? ((0, o.wg)(), (0, o.j4)(De, { key: "header", subtle: O.value, class: (0, r.C_)(["app__header", { "sc-header--without-border sc-header--narrow": !(0, i.SU)(u) }]) }, null, 8, ["subtle", "class"])) : (0, o.kq)("", !0), (0, o._)("div", { key: "container", class: (0, r.C_)(["app__container", { "app__container--has-side-menu": (0, i.SU)(u), "app__container--has-subtle-header": O.value, "app__container--has-subtle-progressbar": (0, i.SU)(b) }]), "data-current-question": U.value }, [W.value ? (0, o.kq)("", !0) : ((0, o.wg)(), (0, o.iD)(o.HY, { key: 0 }, [(0, i.SU)(u) ? ((0, o.wg)(), (0, o.iD)("aside", Ot, [(0, o.Wm)(p, { id: "stepper", steps: (0, i.SU)(d), "current-step": (0, i.SU)(v), "progress-attrs": { id: "stepper-progress", "aria-hidden": !0 } }, null, 8, ["steps", "current-step"])])) : (0, i.SU)(m) ? ((0, o.wg)(), (0, o.iD)("div", { key: 1, class: (0, r.C_)(["app__progress", { "app__progress--with-dots": (0, i.SU)(w), "app__progress--subtle": (0, i.SU)(b), "app__progress--subtle-bottom": (0, i.SU)(S), "app__progress--results": x.value }]) }, [(0, i.SU)(w) ? ((0, o.wg)(), (0, o.j4)((0, i.SU)(c.OV), { key: 0, steps: (0, i.SU)(d).length, "current-step": (0, i.SU)(g) }, null, 8, ["steps", "current-step"])) : (0, i.SU)(b) ? ((0, o.wg)(), (0, o.j4)((0, i.SU)(c.Qs), { key: 1, max: (0, i.SU)(d).length, value: (0, i.SU)(g) }, null, 8, ["max", "value"])) : (0, o.kq)("", !0)], 2)) : (0, o.kq)("", !0)], 64)), (0, o._)("div", Lt, [(0, o._)("main", $t, [x.value ? ((0, o.wg)(), (0, o.j4)(yt["default"], { key: 0 })) : A.value ? ((0, o.wg)(), (0, o.j4)(Qe, { key: 1, class: "app__controls" })) : W.value ? ((0, o.wg)(), (0, o.j4)(ut, { key: 2, class: "app__controls" })) : D.value ? ((0, o.wg)(), (0, o.j4)(Ve, { key: 3, class: "app__controls" })) : ((0, o.wg)(), (0, o.j4)(I, { key: 4, class: "app__controls", "is-loading": T.value, "is-block": C.value }, { default: (0, o.w5)((() => [(0, o.Wm)(vt)])), _: 1 }, 8, ["is-loading", "is-block"]))]), q.value ? ((0, o.wg)(), (0, o.j4)(Q, { key: 0, class: "app__footer" })) : (0, o.kq)("", !0)])], 10, Nt), (0, o.Wm)(rt, { key: "side-panel" }), (0, o.Wm)(ft, { key: "restart-confirmation" })])), _: 1 }, 8, ["is-loading", "loader-attrs"])) } }, Ht = qt, Zt = Ht; var jt = n(7089), Mt = n(65070), zt = n(61926); const Bt = "variants", Vt = new Map, Yt = e => { try { return JSON.parse(e) } catch (t) { return le.u3.error("Invalid JSON value in query params", t), le.CA.captureException(t), {} } }, Gt = (0, oe.Z)((async () => { const e = (0, h.f)(), t = e.queryParams, n = Bt in t ? Yt(t[Bt]) : {}; Vt.forEach(((e, t) => { n[t] = e })), e.queryParams[Bt] = JSON.stringify(n), await e.changeRouterState(), Vt.clear() }), { wait: 100 }); class Qt { getVariant(e) { const t = (0, h.f)(), n = Bt in t.queryParams ? Yt(t.queryParams[Bt]) : null; return null !== n && e in n ? n[e] : null } setVariant(e, t) { Vt.set(e, t), Gt() } } const Jt = "variants", Kt = () => { try { return "undefined" !== typeof sessionStorage } catch (e) { le.u3.error(e) } return !1 }; class Xt { getVariant(e) { if (!Kt()) return null; const t = sessionStorage.getItem(Jt); if (null === t) return null; const n = JSON.parse(t); return e in n ? n[e] : null } setVariant(e, t) { if (!Kt()) return; const n = sessionStorage.getItem(Jt); let a = {}; null !== n && (a = JSON.parse(n)), a[e] = t, sessionStorage.setItem(Jt, JSON.stringify(a)) } } const en = new Map; function tn(e, t) { en.set(e, t), g.c.setGlobalProperties("variants", Object.fromEntries(en)) } const nn = (0, zt.h)(), an = new Mt.G({ user: { id: nn } }); function sn() { var e, t, n; const a = (0, f.V)(), i = { urlQuery: Qt, sessionStorage: Xt }, s = i[null !== (e = null === (t = a.formSetup) || void 0 === t || null === (n = t.featureFlags) || void 0 === n ? void 0 : n.defaultStorage) && void 0 !== e ? e : ""], o = s ? new s : new Qt; return o } function on(e) { const t = (0, f.V)(); an.setFeatures(t.featureFlags); const n = sn(), a = n.getVariant(e); null !== a && an.setForcedFeatures(new Map([[e, a]])); const i = an.feature(e); return null === a && null !== i.value && n.setVariant(e, i.value), null !== i.value && tn(e, i.value), i } function rn(e) { an.setAttributes((0, se.Z)({ id: nn }, e)) } const ln = "symptomate"; function cn({ store: e, options: t }) { if ("form" === e.$id) { const n = e; return e.$onAction((({ name: e, args: t }) => { if ("setLanguage" !== e) return; const n = t[0], a = sn(); a.setVariant("custom_model_enabled", null), rn({ language: n }) })), t.getters.apiAlias = () => { var e; const t = "zh-hans" === n.language ? "zh" : n.language, { value: a } = on("custom_model_enabled"); return a ? (le.u3.info("Enabling custom model..."), `${t}-${ln}`) : (null === (e = n.settings) || void 0 === e ? void 0 : e.apiAlias) || t }, {} } } const un = (0, jt.WB)(); un.use(cn); const dn = un; var mn = n(15195), vn = n(99229); const pn = (0, mn.p7)({ history: (0, mn.PO)(), routes: [{ path: J.Z.enableSeoUrlScheme ? "/:language?/:token?/:index?" : "/:token?/:language?/:index?", component: Zt }], scrollBehavior: () => { } }); let gn = !1, hn = !1; function fn(e, t) { J.Z.enableSeoUrlScheme && t.includes(e.language) && (e.token = e.language) } window.addEventListener("pageshow", (async e => { const t = (0, h.f)(), n = "function" === typeof window.GestureEvent; e.persisted ? (hn = n ? "restoring" : "restored", t.force = !1, t.isStatePushed = !1, await t.restartInterview()) : hn = "loaded" })), window.addEventListener("popstate", (async () => { const e = (0, h.f)(); if (gn) return "restoring" === hn ? (hn = "restored", void await e.changeRouterState(!0)) : void await e.handlePopstate() })), pn.beforeEach((async (e, t, n) => { const a = (0, P.J)(), i = (0, f.V)(), s = (0, h.f)(); return gn ? n() : (gn = "process", a.isLoading = !0, s.queryParams = e.query, fn(e.params, i.configTokens), await i.configureForm(e.params), (0, vn.$D)(), i.isUnauthorized ? n() : (await s.changeRouterState(!0), n(s.url))) })), pn.afterEach((async (e, t, n) => { const a = (0, h.f)(); "process" === gn && (await a.navigate(0, !0), gn = !0), n && !(0, mn.ES)(n, mn.lB.duplicated) && (le.u3.error(n), le.CA.captureException(n)) })); const yn = pn; var _n = n(87502); n(82831); const wn = (0, a.ri)(Zt); function bn(e) { var t, n, a; const i = null === (t = navigator.userAgent) || void 0 === t ? void 0 : t.includes("Chrome/102"); if (!i) return e; const s = null === (n = e.exception) || void 0 === n || null === (a = n.values) || void 0 === a ? void 0 : a.at(0), o = "EvalError" === (null === s || void 0 === s ? void 0 : s.type) && (null === s || void 0 === s ? void 0 : s.value.includes("Possible side-effect in debug-evaluate")) || "SyntaxError" === (null === s || void 0 === s ? void 0 : s.type) && ((null === s || void 0 === s ? void 0 : s.value.includes("Unexpected end of input")) || (null === s || void 0 === s ? void 0 : s.value.includes("missing ) after argument list")) || (null === s || void 0 === s ? void 0 : s.value.includes("Invalid or unexpected token")) || (null === s || void 0 === s ? void 0 : s.value.includes("Unexpected token '"))); return o ? null : e } dn.use((({ store: e }) => { e.$router = (0, i.Xl)(yn) })), wn.use(dn), wn.use(yn), wn.use(_n.ag), (0, s.S)({ app: wn, dsn: J.Z.sentryUrl, environment: "prod", trackComponents: !0, tracesSampleRate: .8, autoSessionTracking: !1, logErrors: !1, instance: window.location.hostname, beforeSend: bn, ignoreErrors: kt((() => JSON.parse("[]")), []) }), wn.mount("#app") }, 56866: e => { const t = [{ common: { remove: "Remove", close: "Close", clear: "Clear", loading: "Loading...", next: "Next", back: "Back", right: "Right", left: "Left", show: "Show", hide: "Hide", startOver: "Start over", search: "Search", submit: "Submit", cancel: "Cancel", required: "Required", optional: "Optional", noResults: "No results", dateUnit: { day: "day | days", month: "month | months", year: "year | years" }, present: "Present", absent: "Absent", unknown: "Skipped", yes: "Yes", no: "No", dontKnow: "Don’t know", female: "Female", male: "Male", termsOfService: "Terms of Service", privacyPolicy: "Privacy Policy", hint: { selectAll: "Select all answers that apply", selectOne: "Select one answer", selectOneEachRow: "Select one answer in each row", selectOneEachStatement: "Select one answer for each statement", pleaseSelectOneAnswer: "Please select one answer" }, evidence: { weak: "Weak evidence", moderate: "Moderate evidence", strong: "Strong evidence" }, showMore: "Show more", showLess: "Show less", ceMarkingLogo: "CE marking logo", hipaaLogo: "HIPAA logo", gdprLogo: "GDPR logo", stepperAriaLabel: "Step {currentStep} of {totalSteps}: {stepName}." }, header: { logoLabel: "{applicationTitle}. Back to the homepage", menu: "Menu" }, footer: { recaptcha: { main: "This site is protected by reCAPTCHA Enterprise and the Google {privacyPolicy} and {termsOfService} apply.", privacyPolicy: "Privacy Policy", termsOfService: "Terms of Service" }, legalDisclaimer: { shared: "Symptomate is a registered Class I medical device in the European Union. Symptomate is a medical device regulated by the FDA as a general wellness product in the US. It is not yet a licensed medical device in other countries, in particular in Canada nor Australia. For more information about territorial use, please see our Terms of Service.", interview: "Symptomate does not provide a medical diagnosis, and should not replace the judgment of a licensed healthcare practitioner. It provides information to help guide your decision making based on readily available information about symptoms. If you have any questions or concerns about the output of Symptomate, consult your healthcare practitioner.", results: "It does not provide a medical diagnosis, and should not replace the judgment of a licensed healthcare practitioner. It provides information only for educational purposes to help guide your decision making based on readily available information about symptoms.  If you have any questions or concerns about the output of Symptomate, consult your healthcare practitioner. If you’re having a health emergency, you should call the local emergency number right away for help." } }, menu: { title: "Settings & Info", language: "Language", forBusiness: "For business", medicalCertification: "Medical device certification", instructionForUse: "Instruction for Use", instructionForUseAccessibleLabel: "Instruction for Use (PDF file)", interviewId: "Interview ID", languages: "Languages", lastUpdated: "Last updated: {date}", medicalSources: "Medical Sources", rateTitle: "Rate Us", rateDesc: "Did Symptomate turn out to be helpful? Let others know on" }, sidePanel: { privacyPolicy: { placeholder: "Your Privacy Policy will be displayed here." }, termsOfService: { placeholder: "Your Terms of Service will be displayed here." }, medicalCertification: { version: "Version {version}", poland: "Poland", title: "Medical certification and compliance", medicalDeviceLabel: "Medical device label", medicalDeviceClassTitle: "Class I medical device in EU", medicalDeviceClassDescription: "This software meets all applicable requirements of the European Directive MDD 93/42/EWG.", compliance: "Compliance", hipaaTitle: "HIPAA compliant", hipaaDescription: "This software was developed by Infermedica, a company which is compliant with the Health Insurance Portability and Accountability Act, a United States federal statute protecting sensitive patient health information from being disclosed without the patient’s consent or knowledge.", gdprTitle: "GDPR compliant", gdprDescription: "This software was developed by Infermedica, a company which is compliant with General Data Protection Regulation, a regulation in European Union’s law on data protection and privacy.", isoTitle: "{isoCertificate} compliant", isoDescription: "This software was developed by Infermedica under quality management system based on {isoCertificate} standard.", medicalDevice: "Medical Device", manufacturer: "Manufacturer", uniqueDeviceIdentifier: "Unique Device Identifier" }, forBusiness: { description: "Symptomate is developed by Infermedica – the company providing a technological platform for digital symptom assessment, triage, patient intake, and more.", learnMore: "Learn more", products: { triage: { description: "Symptom analysis and triage tool for your patients and clinicians." }, intake: { description: "Intelligent medical data collection & consultation support tool." }, api: { description: "Advanced medical API for your website, app or telehealth system." } } } }, interviewStep: { introduction: "Introduction", patient: "Patient", symptoms: "Symptoms", regions: "Regions", interview: "Interview", results: "Results" }, noInternetConnection: { title: "No internet connection", tryAgain: "Try again", tryingToReconnect: "Trying to reconnect..." }, incompatibleBrowser: { noscript: { description: "We’re sorry but Triage doesn’t work properly without JavaScript enabled.", instruction: "Please enable it to continue." }, outdated: { title: "Please update your browser", description: "It looks like you are using an outdated browser that is having trouble viewing modern web pages. To proceed, download and install the latest version of your favorite browser:" } }, noInternetDescription: { default: "It seems you’re offline right now. Please check your connection and try again.", search: "Cannot load search results. Please check your connection and try again.", symptoms: "Cannot load symptoms. Please check your connection and try again.", title: "No internet connection" }, unauthorized: { heading: "Sorry, you are not allowed to see this page", code: "Error 401", description: "If you are an administrator of this website, then check your integration settings." }, securityError: { subheading: "Security error", heading: "Unusual activity", description: "Our systems believe your actions may be those of a bot and restricted the access.", youCanTry: "You can try:", hints: ["Updating your browser", "Restarting your browser’s privacy or adblocking add-ons"], hintsMobileApp: ["Connecting to a different internet network", "Disabling VPN"], why: "Why am I getting this error message?", whyExplanation: "Our security algorithms analyze interactions with the tool to find harmful activity from programs or bots. Sometimes, because the security process is sensitive, even real users may get this error message. " }, message: { title: "Check your symptoms", description: "Take a short (3 min) symptom assessment. The information you give is safe and won’t be shared. Your results will include:", descriptionPoints: ["Possible causes of symptoms.", "Recommendations on what to do next."], about: "About this symptom checker", aboutPoints: ["Created and validated by doctors", "Clinically validated with patient cases", "Class I medical device in EU"], aboutPointsNoMedicalDevice: ["@:message.aboutPoints[0]", "@:message.aboutPoints[1]"], certificationAndCompliance: "Certification and compliance" }, agreement: { title: "@:common.termsOfService", reminder: "Before using the checkup, please read the Terms of Service and remember:", bulletPoints: [{ highlight: "Checkup isn’t a diagnosis.", rest: "It’s only for your information and not a qualified medical opinion." }, { highlight: "Checkup isn’t for emergencies.", rest: "Call your local emergency number right away when there’s a health emergency." }, { highlight: "Your data is safe.", rest: "The information you give won’t be shared or used to identify you." }], agreeTerms: { label: { main: "I read and accept {0}.", termsOfService: "Terms of Service" }, error: "Please agree to Terms of Service." }, agreePrivacy: { label: { main: "I agree for my health information to be used for the interview. More information in the {0}.", privacyPolicy: "Privacy Policy" }, error: "Please agree to Privacy Policy and the processing of your health information." } }, thirdPerson: { header: "Who is the checkup for?", myself: "Myself", someone: "Someone else" }, patientSex: { header: "What is your sex?\n[form:someone] What is [his/her] sex?\n", gender: "What should I select?", genderExplanation: "Gender and sex are a spectrum broader than just female and male. However, this symptom assessment technology can currently differentiate between female and male sexes only. To continue the interview, please select the sex assigned to you at birth.  [form:someone] Gender and sex are a spectrum broader than just female and male. However, this symptom assessment technology can currently differentiate between female and male sexes only. To continue the interview, please select the sex assigned to them at birth.\n" }, patientAge: { header: "How old are you?\n[form:someone] How old is [he/she]?\n", slider: { label: "Age slider", decrease: "Decrease age", increase: "Increase age" }, dateOfBirth: { header: "What is your date of birth?\n[form:someone] What is [his/her] date of birth?\n", age: "Age", placeholderDay: "DD", placeholderMonth: "MM", placeholderYear: "YYYY", errorWrongDate: "Please enter a valid date, e.g. 05/11/1990", errorDateInFuture: "Sorry, the date of birth cannot be a future date", errorOutOfBounds: "Sorry, our checkup only covers people between {min} and {max} years old", calendarLabel: "Open calendar" } }, riskFactors: { header: "Please check all the statements below that apply to you\n[form:someone] Please check all the statements below that apply to [him/her]\n", choices: { p_7: "I’m overweight or obese\n[form:someone] [He/She] is overweight or obese\n", p_8: "I have diabetes\n[form:someone] [He/She] has diabetes\n", p_9: "I have hypertension\n[form:someone] [He/She] has hypertension\n", p_10: "I have high cholesterol\n[form:someone] [He/She] has high cholesterol\n", p_11: "I’m postmenopausal\n[form:someone] [He/She] is postmenopausal\n", p_28: "I have smoked cigarettes for at least 10 years\n[form:someone] [He/She] has smoked cigarettes for at least 10 years\n", p_42: "I’m pregnant\n[form:someone] She is pregnant\n", p_141: "[form:underage] She is before her first period", p_264: "I’ve recently suffered an injury\n[form:someone] [He/She] has recently suffered an injury\n", p_284: "[form:child] [He/She] was born premature, i.e., before 37th week of pregnancy or with birth weight less than 2500 g (5 lb 8 oz)", p_287: "I, or my parents, siblings or grandparents have an allergic disease, e.g., asthma, atopic dermatitis, or a food allergy\n[form:someone] [He/She], or [his/her] parents, siblings or grandparents have an allergic disease, e.g., asthma, atopic dermatitis, or a food allergy\n", p_291: "[form:child] [He/She] is, or were formula-fed\n[form:infant] [He/She] is formula-fed\n", p_292: "I missed one or more doses of mandatory vaccinations\n[form:someone] [He/She] missed one or more doses of mandatory vaccinations\n", p_293: "I had my first period in the past two year\n[form:someone] She had her first period in the past two years\n", p_301: "I’ve had contact with a COVID-19-positive person\n[form:someone] [He/She] has had contact with a COVID-19-positive person\n" } }, initialSymptoms: { header: "Add your symptoms\n[form:someone] Add [his/her] symptoms\n", hint: "Add as many symptoms as you can for the most accurate results.", searchPlaceholder: "Search, e.g., headache\n[form:child] Search, e.g., fever\n", searchDescription: "When evidence results are available use up and down arrows to review and enter to select.", noResultsNotification: { heading: "Unfortunately, the symptom was not found.", bulletPoints: ["Please try to enter single words", "Keep in mind that you can only select symptoms from the autocomplete list"] }, useSearchNotification: "Can’t find a symptom? Please try to use the search box.", pointOnBody: "Point on the body", exactLocationOnBody: "Select the exact location on the body", addSymptoms: "Add symptom", moreSymptomsHint: "Please try to add more than one symptom.", noSymptomsError: "Add at least one symptom", rotateModel: "Rotate model", selectedSymptom: "Selected symptom: {symptom}.", removedSymptom: "Removed symptom: {symptom}.", removedAllSymptoms: "You have removed all symptoms.", amountOfAvailableSymptoms: "{n} symptom is available. | {n} symptoms are available.", amountOfChosenSymptoms: "You have chosen {n} symptom. | You have chosen {n} symptoms.", noSymptomsFound: "No symptoms found.", bodyParts: { anus: "anus", back: "back", breasts: "breasts", buttocks: "buttocks", chest: "chest", chestAndAbdomen: "chest and abdomen", diaperArea: "diaper area", ears: "ears", elbow: "elbow", eyes: "eyes", foot: "foot", forearm: "forearm", hand: "hand", head: "head", knee: "knee", lowerAbdomen: "lower abdomen", lowerBack: "lower back", lowerLeg: "lower leg", lowerLimb: "lower limb", midAbdomen: "middle abdomen", napeOfNeck: "nape of neck", neck: "neck", neckOrThroat: "neck or throat", nose: "nose", oralCavity: "oral cavity", sexualOrgans: "sexual organs", thigh: "thigh", upperAbdomen: "upper abdomen", upperArm: "upper arm", upperLimb: "upper limb" } }, regions: { header: "Select regions", hint: "Please select the region you live in and places you’ve traveled to in the last 3 months.\n[form:someone] Please select the region [he/she] lives in and places [he/she] has traveled to in the last 3 months.\n", regionNames: { "united-states-canada": "United States and Canada", "latin-south-america": "South America", europe: "Europe", "northern-africa": "North Africa", "central-africa": "Central Africa", "southern-africa": "South Africa", "russia-kazakhstan-mongolia": "Russia, Kazakhstan and Mongolia", "middle-east": "Middle East", "asia-excluding-middle-east-russia-mongolia-kazakhstan": "Asia, without Middle east, Russia, Kazakhstan and Mongolia", "australia-oceania": "Australia and Oceania" } }, intelligentInterview: { suggest: "Do you have any of the following symptoms?\n[form:someone] Does [he/she] have any of the following symptoms?\n", painScale: { mild: "Mild", unbearable: "Unbearable", decrease: "Decrease pain", increase: "Increase pain" }, abdomenPain: { title: "Model of abdomen", description: "Select all locations of pain", location: { "upper-left": "Upper left", "upper-middle": "Upper middle", "upper-right": "Upper right", center: "Center", "lower-left": "Lower left", "lower-middle": "Lower middle", "lower-right": "Lower right" } }, info: { title: "Explanation", explication: "What does it mean?", instruction: "How to check it?" }, why: { title: "Why am I being asked this?", rationale: { error: "Sorry, something went wrong. I'm unable to find any explanation. Please try again.", andConjunction: "and", orConjunction: "or", type: { r0: "You're asked this question because the answer may reduce the likelihood of {concepts} and other conditions.\n[form:someone] [He/She]'s asked this question because the answer may reduce the likelihood of {concepts} and other conditions.\n[form:underage] You're asked this question because the answer may reduce the likelihood of {concepts} and other conditions.\n", r1: "You're asked this question because {concepts} may be related to possible conditions.\n[form:someone] [He/She]'s asked this question because {concepts} may be related to possible conditions.\n[form:underage] You're asked this question because {concepts} may be related to possible conditions.\n", r2: "@:intelligentInterview.why.rationale.type.r0", r3: "You're asked this question to rule in or out conditions like {concepts}.\n[form:someone] [He/She]'s asked this question to rule in or out conditions like {concepts}.\n[form:underage] You're asked this question to rule in or out conditions like {concepts}.\n", r4: "You're asked this question because possible conditions may be related to {concepts}.\n[form:someone] [He/She]'s asked this question because possible conditions may be related to {concepts}.\n[form:underage] You're asked this question because possible conditions may be related to {concepts}.\n", r5: "You're asked this question to find out if you've recently been injured.\n[form:someone] [He/She]'s asked this question to find out if [he/she]'s recently been injured.\n[form:underage] You're asked this question to find out if [he/she]'s recently been injured.\n", r6: "You're asked this question to learn more about your {concepts}.\n[form:someone] [He/She]'s asked this question to learn more about [his/her] {concepts}.\n[form:underage] You're asked this question to learn more about [his/her] {concepts}.\n" } } }, issue: { title: "Report an issue", action: "Report an issue with this question", feedback: "Thank you. We’ll review this question as soon as possible.", skip: "Skip this question", hint: "What’s wrong with this question?", options: { too_long: "It’s too long", unrelated: "It seems to be unrelated", complex_words: "It contains complex words", already_asked: "I’ve already answered this question", cant_decide: "I can’t decide which answer to choose", typo: "I found a typo", other: "Other (please comment below)" }, issues: { errorMessage: "Please select at least one issue." }, describeDetails: { label: "Detailed description", errorMessage: "Please provide more details." }, notifications: { unknown: "Unfortunately, your report was not sent. Please try again.", noInternet: "Your report could not be sent because you are offline. Please check your connection and try again.", connectionRestored: "Connection restored." } } }, intentSurvey: { provider: { title: "Are you planning to consult a medical professional?\n[form:someone] Is [he/she] planning to consult a medical professional?\n[form:underage] Are you planning to consult a medical professional?\n" }, contact: { title: "What kind of care are you planning to get right now?\n[form:someone] What kind of care is [he/she] planning to get right now?\n[form:underage] What kind of care are you planning to get right now?\n", primaryCare: "Primary care", specialistCare: "Specialist care", alliedHealthCare: "Allied health care (dietician, physical therapist, etc.)", urgentCare: "Urgent care", emergencyCare: "Emergency care", notSure: "Not sure" }, contactMethod: { title: "What form of contact are you considering? \n[form:someone] What form of contact is [he/she] considering?\n[form:underage] What form of contact are you considering?\n", clientHelpline: "{client} helpline", teleconsultation: "Teleconsultation", inPerson: "In-person visit", clientApplication: "{client} application", notSure: "Not sure" }, primaryCareRationale: { title: "Primary care", description: "Typically a primary care doctor acts as the first contact and main point of continuing care for patients within a healthcare system.", pointsHeading: "Common names for primary care doctors include:", points: ["Family doctor", "General practitioner (UK, Australia, New Zealand)", "Primary care physician (USA)", "Clinical officer (in various parts of Africa)"] }, urgentCareRationale: { title: "Urgent care", description: "Urgent care is the middle ground between primary care and emergency care. Urgent care is usually used when the injury isn’t life or limb-threatening but can’t wait until the next day.", pointsHeading: "Examples of injuries that require urgent care include:", points: ["Sprains and strains", "Bites and stings", "Minor burns and scalds", "Suspected broken limbs", "Eye problems"] }, alliedHealthRationale: { title: "Allied health care", description: "Professions that are often listed as “allied health” include many of the well-known non-nurse, non-physician health care workers.", pointsHeading: "For example:", points: ["Physical therapist", "Nutritionist", "Dietician", "Physician assistant", "Audiologist", "Speech language pathologist"] }, teleconsultationRationale: { title: "Teleconsultation", description: "A teleconsultation or virtual appointment is the same as a regular doctor’s visit but done online or by phone. This means that you can see your doctor, get diagnosed, get prescriptions, and be directed to further care all without ever going to a doctor’s office.", pointsHeading: "Teleconsultations are most often done via:", points: ["Phone", "Video call", "Online chat"] }, emergency: { title: "Are you planning to call an ambulance?\n[form:someone] Is [he/she] planning to call an ambulance?\n[form:underage] Are you planning to call an ambulance?\n" }, explanation: "We are asking this question to better understand the needs and motivations of patients using this checkup. Your answer will help us learn and improve." }, results: { loader: "Analyzing your answers...\n[form:someone] Analyzing answers...\n", startNewCheckup: "Start new checkup", scheduleAppointment: "Schedule an appointment", intakeSurveyCta: "Complete medical history", showCommonCareMethods: "Show common care methods", triageCard: { recommendation: "Recommendation", emergency_ambulance: { title: "Call an ambulance", description: "Your symptoms are very serious, and you may require emergency care. Do not delay. Call an ambulance right now.\n[form:someone] [His/Her] symptoms are very serious, and [he/she] may require emergency care. Do not delay. Call an ambulance right now.\n" }, emergency: { title: "Go to the nearest emergency department", description: "Your symptoms are worrisome and you may require urgent care. If you can’t get to an emergency department, please call an ambulance.\n[form:someone] [His/Her] symptoms appear serious and [he/she] may require urgent care. If [he/she] can’t get to an emergency department, please call an ambulance.\n[form:underage] [His/Her] symptoms appear serious and [he/she] may require urgent care. If you can’t get to an emergency department, please call an ambulance.\n" }, consultation_24: { title: "Consult a doctor within 24 hours", description: "Your symptoms may require prompt medical evaluation. If your symptoms suddenly get worse, go to the nearest emergency department.\n[form:someone] [His/Her] symptoms may require prompt medical evaluation. If [his/her] symptoms suddenly worsen, [he/she] should go to the nearest emergency department.\n[form:underage] [His/Her] symptoms may require prompt medical evaluation. If [his/her] symptoms suddenly worsen, go to the nearest emergency department.\n" }, consultation: { title: "Consult a doctor", description: "Your symptoms may require medical evaluation. Schedule an appointment with your doctor. If your symptoms get worse, see a doctor immediately.\n[form:someone] [His/Her] symptoms may require medical evaluation. [He/She] should schedule an appointment with a doctor. If [his/her] symptoms worsen, [he/she] should see a doctor immediately.\n[form:underage] [His/Her] symptoms may require medical evaluation. Schedule an appointment with a doctor. If [his/her] symptoms worsen, see a doctor immediately.\n[form:infant] [His/Her] symptoms may require medical evaluation. Schedule an appointment with a doctor. If [his/her] symptoms worsen, see a doctor immediately. Remember that conditions in infants can change quickly and do not necessarily present the same as they do in adults.\n[form:newborn] [His/Her] symptoms may require medical evaluation. Schedule an appointment with a doctor. If [his/her] symptoms worsen, see a doctor immediately. Remember that conditions in newborns can change quickly and do not necessarily present the same as they do in adults.\n" }, self_care: { title: "Self-care may be enough", description: "Usually, your symptoms don’t require medical care and they resolve on their own. You can try to manage your condition with home methods. If your symptoms get worse or new symptoms appear, consult a doctor.\n[form:someone] Usually, symptoms such as these do not require medical care and they may resolve on their own. [He/She] can try to manage this condition with home remedies. If symptoms get worse or new symptoms appear, [He/She] should consult a doctor immediately.\n[form:teenager] Usually, symptoms such as these do not require medical care and they may resolve on their own. You can try to manage this condition with home remedies. If symptoms get worse or new symptoms appear, consult a doctor immediately.\n[form:child] Usually in children, symptoms such as these do not require medical care and they may resolve on their own. You can try to manage this condition with home remedies. If symptoms get worse or new symptoms appear, consult a doctor immediately.\n" }, seriousEvidence: { heading: "Alarming symptoms" }, recommendSpecialist: { title: "Recommended specialist", suggestedConsultationForm: "Suggested consultation form", specialization: { allergologist: "Allergologist", angiologist: "Angiologist", cardiologist: "Cardiologist", dentist: "Dentist", dermatologist: "Dermatologist", diabetologist: "Diabetologist", endocrinologist: "Endocrinologist", entDoctor: "ENT doctor", gastroenterologist: "Gastroenterologist", generalPractitioner: "General Practitioner", gynecologist: "Gynecologist", hematologist: "Hematologist", infectiologist: "Infectiologist", internalDiseaseSpecialist: "Internal Diseases Specialist", nephrologist: "Nephrologist", neurologist: "Neurologist", oncologist: "Oncologist", ophthalmologist: "Ophthalmologist", pediatrician: "Pediatrician", psychiatrist: "Psychiatrist", pulmonologist: "Pulmonologist", rheumatologist: "Rheumatologist", surgeon: "Surgeon", toxicologist: "Toxicologist", urologist: "Urologist" } } }, triageCardModern: { self_care: { description: "The symptoms you have declared may not require medical evaluation and they usually resolve on their own. Sometimes they can be eased with self-care methods. If the symptoms get worse or new symptoms appear, consult a doctor.\n[form:someone] The symptoms [he/she] has declared may not require medical evaluation and they usually resolve on their own. Sometimes they can be eased with self-care methods. If the symptoms get worse or new symptoms appear, [he/she] should consult a doctor.\n[form:teenager] Declared symptoms may not require medical evaluation and they usually resolve on their own. Sometimes they can be eased with self-care methods. If the symptoms get worse or new symptoms appear, consult a doctor immediately.\n[form:child] In children, the declared symptoms may not require medical evaluation and they usually resolve on their own. Sometimes they can be eased with self-care methods. If the symptoms get worse or new symptoms appear, consult a doctor immediately.\n" }, seriousEvidence: { heading: "Be sure to report:" }, recommendSpecialist: { title: "Recommended doctor", suggestedConsultationForm: "Recommended appointment type" } }, recommendSpecialistChannel: { personal_visit: "In-person visit", video_teleconsultation: "Video consultation", audio_teleconsultation: "Telephone consultation", text_teleconsultation: "Chat" }, recommendationExplanation: { title: "Why this recommendation?", selfCare: "Self-care is recommended because the health background and symptoms you have declared, as well as the possible conditions they may indicate, do not appear to be alarming.", selfCareDisclaimer: "However, if something still concerns you, do not hesitate to consult a doctor.", consultationWithoutSerious: "Consultation is recommended because of the health background and symptoms you have declared, as well as possible conditions they may indicate.", consultationWithSerious: "Consultation is recommended because of the health background and symptoms you have declared, especially:" }, possibleConditions: { noConditions: { heading: "No possible conditions found", text: "Unfortunately, we are unable to recognize what conditions can be causing your symptoms. If you are still concerned about your health, see your doctor.\n[form:someone] Unfortunately, we are unable to recognize what conditions can be causing these symptoms. If the symptoms are worrying, [he/she] should be consulted with a doctor.\n" }, hasConditions: { heading: "Possible conditions", text: "Please note that the list below may not be complete, is provided solely for educational purposes and is not a qualified medical opinion." }, lessLikelyConditions: "Less likely conditions", hint: "Click any row to see details", message: "Your symptoms point to conditions with low level of evidence. Follow the recommendation above and consult your health provider for diagnosis.\n[form:someone] The symptoms you have provided point to conditions with low level of evidence. See the recommendation above for next steps and consult a health provider for diagnosis.\n", startOver: "Start over", disclaimer: "List of possible conditions may not be complete, is provided solely for informational purposes, is not a qualified medical opinion and can not replace the medical diagnosis." }, conditionDetails: { about: "About", commonCareMethods: "Common care methods", hint: "Hint", icd: "ICD-10", explanation: "Explanation", reasoning: "Reasoning", reasonsFor: "Reasons for", reasonsForSubtitle: "Presence of symptoms:", reasonsAgainst: "Reasons against", reasonsAgainstSubtitle: "Absence of symptoms:", description: "Description", source: "Source:", articleUrlLabel: "Read full description", showDetails: "Show details", learnMore: "Learn more", previousCondition: "Previous condition", nextCondition: "Next condition", aboutAndCommonMethodsSources: "About and Common methods of care sources" }, plansSurvey: { subtitle: "Help us learn and improve", title: "What kind of care are you planning to get now?\n[form:someone] What kind of care is [he/she] planning to get now?\n[form:underage] What kind of care are you planning to get now?\n", contactChoicesTitle: "What form of contact are you considering? \n[form:someone] What form of contact is [he/she] considering?\n[form:underage] What form of contact are you considering?\n", thankYou: "Thank you very much! Your feedback will help us improve the system.", recoveringAtHome: "Recovering at home", alliedHealth: "Allied health care", primaryCare: "Primary care", specialistCare: "Specialist care", urgentCare: "Urgent care", emergencyNoAmbulance: "Emergency, no ambulance", emergencyWithAmbulance: "Emergency, with ambulance", notSure: "Not sure", clientHelpline: "{client} helpline", teleconsultation: "Teleconsultation", inPerson: "In-person visit", clientApplication: "{client} application", submit: "Submit answer", feedbackLabel: "Please explain your choice\n[form:someone] Please explain [his/her] choice\n" }, labTests: { heading: "Lab tests", recommended: { subheading: "Recommended", text: "Lab tests recommended in further diagnostic process." }, preventive: { subheading: "Preventive", text: "The lab test below are not related to your symptoms. However, they are recommended due to your risk profile (e.g. age).\n[form:someone] The lab test below are not related to [his/her] symptoms. However, they are recommended due to [his/her] risk profile (e.g. age).\n" } }, feedback: { heading: "Feedback", description: "Is the information on this site helpful?", giveFeedback: "Give feedback", howHelpfulWasCheckup: "How helpful was this checkup for you?", formField: { label: "Your comment", errorMessage: "Please tell us what’s wrong", placeholder: "Feedback" }, starLabel: "{n} star | {n} stars", ratingAlert: "Please choose your rating", send: "Send feedback", thankYou: "Thank you very much! Your feedback will help us improve the system.", notifications: { unknown: "Unfortunately, your feedback was not sent. Please try again.", noInternet: "Your feedback could not be sent because you are offline. Please check your connection and try again.", connectionRestored: "Connection restored." } }, summary: { heading: "Summary", pdfReportCta: { simple: "Download PDF report", extended: { en: "Download PDF report in English", ar: "Download PDF report in Arabic", cs: "Download PDF report in Czech", de: "Download PDF report in German", es: "Download PDF report in Spanish", fr: "Download PDF report in French", it: "Download PDF report in Italian", nl: "Download PDF report in Dutch", pl: "Download PDF report in Polish", "pt-br": "Download PDF report in Brazilian Portuguese", ru: "Download PDF report in Russian", ro: "Download PDF report in Romanian", sk: "Download PDF report in Slovak", tr: "Download PDF report in Turkish", uk: "Download PDF report in Ukrainian", "zh-hans": "Download PDF report in Chinese" } }, yourAnswers: { label: "Your answers:\n[form:someone] Answers:\n" }, consideredDiagnoses: { label: "Considered conditions:" }, duration: { label: "Duration of the interview:", time: "{minutes} min {seconds} s" }, notifications: { generic: { unknown: "Something went wrong. Please try again.", noInternet: "Request failed because you are offline. Please check your connection and try again.", connectionRestored: "Connection restored." }, pdfDownload: { noInternet: "We cannot generate your PDF report because you are offline. Please check your connection and try again.", unknown: "We cannot generate your PDF report because of unknown error. Please try again later.", connectionRestored: "Connection restored." }, startOver: { noInternet: "We cannot start a new interview because you are offline. Please check your connection and try again.", connectionRestored: "Connection restored." } }, confirmation: { title: "Start new checkup?", description: "You will have to answer the questions again.", confirm: "Yes, start new checkup" } }, summaryPanel: { title: "Your answers\n[form:someone] Answers\n", sex: "Sex", age: "Age", height: "Height", weight: "Weight", risk_factors: "Risk factors", reported_symptoms: "Reported symptoms", other_symptoms: "Other symptoms", present: "Present:", absent: "Absent:", skipped: "Skipped:" }, disclaimer: "Please note that the information from this tool is only for educational purposes and isn’t a qualified medical opinion. This information shouldn’t be considered a doctor or other healthcare provider’s advice or opinion about your actual health. You should get help from a healthcare provider for your symptoms. If you’re having a health emergency, you should call the local emergency number right away for help.\n[form:someone] Please note that the information from this tool is only for educational purposes and isn’t a qualified medical opinion. This information shouldn’t be considered a doctor or other healthcare provider’s advice or opinion about [his/her] actual health. [He/She] should get help from a healthcare provider for [his/her] symptoms. If [he/she] is having a health emergency, [he/she] should call the local emergency number right away for help.\n[form:child] Please note that the information from this tool is only for educational purposes and isn’t a qualified medical opinion. This information shouldn’t be considered a doctor or other healthcare provider’s advice or opinion about [his/her] actual health. [He/She] should get help from a healthcare provider for [his/her] symptoms. If [he/she] is having a health emergency, you should call the local emergency number right away for help.\n", recruitmentCard: { heading: "Tell us what you think & receive $30", subheading: "We’d love to learn more about how you use Symptomate and how we can make it better.", process: "What’s the process?", bulletPoints: ["Answer a few short screening questions; if you qualify, you’ll get an invitation with details", "Take part in a 45 minute interview", "After the interview, you’ll get a $30 Amazon gift card as a thank you"], fillOutSurvey: "Fill out screener survey", surveyUrl: "https://forms.gle/L6XY1KxUNWYZCx7B6" } }, pdfReport: { title: "Report from symptom assessment", generatedOn: "generated:", ageAsMonths: "Age (months)", noConditions: "No probable conditions could be suggested based on the information provided.", conditionsName: "Name", probability: "Probability", probabilityMap: { weak: "Low", moderate: "Medium", strong: "High" }, disclaimer: "@:results.disclaimer" }, serverError: { title: "Server error", subtitle: "Error {serverError}", description: "We are sorry, something went wrong with our server.", failed: "It seems that the problem is still there. Please restart the checkup to continue.", restart: "Restart", tryAgain: "Try again", tryingToReconnect: "Trying to reconnect..." }, languageSelector: { selectedLanguage: "Selected language: {language}", description: "Use enter to open a languages menu. Then use up and down arrows to review and enter to select." }, appTitles: { riskFactors: "Risk factors" }, medicalSources: { placeholder: "Your Medical Sources will be displayed here." } }]; e.exports = t.length <= 1 ? t[0] : t }, 31710: (e, t, n) => { "use strict"; n.r(t), n.d(t, { default: () => d }); var a = n(78551); const i = { xmlns: "http://www.w3.org/2000/svg", viewBox: "0 0 24 24", role: "img" }, s = (0, a._)("path", { d: "M8 9V7h9v9h-2v-5.586L8.513 16.9 7.1 15.485 13.585 9H7.999Z" }, null, -1), o = [s]; function r(e, t) { return (0, a.wg)(), (0, a.iD)("svg", i, o) } var l = n(56490); const c = {}, u = (0, l.Z)(c, [["render", r]]), d = u }, 21731: (e, t, n) => { "use strict"; n.r(t), n.d(t, { default: () => d }); var a = n(78551); const i = { xmlns: "http://www.w3.org/2000/svg", fill: "#fff", "fill-rule": "evenodd", stroke: "#fff", "stroke-linecap": "round", "stroke-linejoin": "round", "stroke-width": "0", "clip-rule": "evenodd", style: { "--icon-width": "135px", "--icon-height": "33px" }, viewBox: "0 0 163 40", role: "img" }, s = (0, a._)("path", { stroke: "none", d: "M31.023 26.367c-.252.436-.535.863-.84 1.27-2.43 3.235-6.142 5.09-10.183 5.09-4.04 0-7.751-1.855-10.182-5.09a12.81 12.81 0 0 1-.842-1.27 1.818 1.818 0 0 1 3.146-1.825c.181.313.384.62.603.911A9.026 9.026 0 0 0 20 29.091a9.023 9.023 0 0 0 7.275-3.638 9.21 9.21 0 0 0 .604-.911 1.819 1.819 0 0 1 3.144 1.825M14.546 16.364h3.636v-3.637a1.818 1.818 0 1 1 3.636 0v3.637h3.637a1.818 1.818 0 0 1 0 3.636h-3.637v3.636a1.818 1.818 0 0 1-3.636 0V20h-3.636a1.818 1.818 0 1 1 0-3.636M20 0C8.954 0 0 8.954 0 20s8.954 20 20 20 20-8.954 20-20S31.046 0 20 0m35.437 23.47c0-.567-.2-1.002-.6-1.305-.4-.304-1.12-.624-2.162-.961-1.04-.337-1.864-.669-2.47-.996-1.655-.893-2.482-2.097-2.482-3.611 0-.787.222-1.49.665-2.106.444-.617 1.08-1.099 1.911-1.446.83-.347 1.763-.52 2.797-.52 1.04 0 1.967.188 2.781.565.814.377 1.446.909 1.896 1.596.45.687.675 1.467.675 2.34h-3.001c0-.666-.21-1.185-.63-1.555-.42-.37-1.011-.555-1.771-.555-.734 0-1.304.155-1.711.465-.407.31-.61.719-.61 1.226 0 .473.238.87.715 1.19.477.32 1.179.62 2.106.9 1.707.514 2.951 1.151 3.732 1.912.78.76 1.17 1.707 1.17 2.841 0 1.26-.477 2.25-1.43 2.967-.954.717-2.238 1.075-3.852 1.075-1.12 0-2.141-.205-3.062-.615-.92-.41-1.622-.972-2.106-1.686-.483-.714-.725-1.54-.725-2.481h3.011c0 1.607.96 2.411 2.882 2.411.713 0 1.27-.145 1.67-.435.4-.29.6-.695.6-1.216m9.17-.27 2.001-6.733h3.101l-4.352 12.506-.24.57c-.647 1.414-1.714 2.121-3.201 2.121-.42 0-.847-.063-1.281-.19v-2.19l.44.01c.547 0 .956-.084 1.226-.25.27-.168.482-.445.635-.831l.34-.891-3.792-10.855h3.112l2.01 6.733zm8.954-6.733.09 1.21c.767-.94 1.805-1.41 3.112-1.41 1.394 0 2.351.55 2.871 1.65.76-1.1 1.845-1.65 3.252-1.65 1.174 0 2.047.341 2.622 1.025.573.684.86 1.712.86 3.087v6.913h-2.902v-6.92c0-.614-.12-1.064-.36-1.348-.24-.285-.663-.426-1.27-.426-.868 0-1.468.414-1.801 1.243l.01 7.451h-2.892v-6.909c0-.629-.123-1.083-.37-1.364-.247-.281-.667-.421-1.26-.421-.82 0-1.415.34-1.782 1.023v7.671h-2.89V16.467h2.711zm21.881 5.292c0-1.01-.178-1.79-.535-2.338-.357-.549-.875-.823-1.556-.823-.907 0-1.53.347-1.871 1.043v4.446c.354.716.984 1.074 1.891 1.074 1.38 0 2.071-1.134 2.071-3.402zm2.892.22c0 1.668-.379 3.004-1.136 4.008-.757 1.003-1.779 1.505-3.066 1.505-1.094 0-1.978-.38-2.652-1.14v5.102h-2.891V16.467h2.681l.1 1.06c.7-.84 1.614-1.26 2.742-1.26 1.334 0 2.37.493 3.11 1.48.742.988 1.112 2.348 1.112 4.082v.15zm5.252-8.174v2.662h1.851v2.12h-1.85v5.404c0 .4.076.686.23.86.153.173.446.26.88.26.32 0 .603-.023.85-.07v2.191c-.567.173-1.15.26-1.75.26-2.028 0-3.062-1.024-3.102-3.071v-5.833h-1.581v-2.121h1.581v-2.662h2.891zm5.603 8.18c0 1.029.193 1.815.58 2.36.387.544.941.816 1.661.816.7 0 1.248-.268 1.641-.807.394-.537.59-1.398.59-2.58 0-1.008-.196-1.79-.59-2.344-.393-.555-.947-.832-1.661-.832-.707 0-1.254.276-1.64.827-.388.551-.58 1.404-.58 2.56zm-2.891-.206c0-1.073.207-2.03.62-2.87a4.544 4.544 0 0 1 1.786-1.952c.777-.46 1.68-.69 2.706-.69 1.461 0 2.653.447 3.577 1.34.924.894 1.439 2.108 1.546 3.642l.02.74c0 1.661-.464 2.994-1.39 3.998-.928 1.003-2.172 1.505-3.733 1.505-1.56 0-2.806-.5-3.736-1.5-.931-1.001-1.396-2.362-1.396-4.082v-.13zm14.747-5.312.09 1.21c.767-.94 1.804-1.41 3.112-1.41 1.394 0 2.35.55 2.871 1.65.76-1.1 1.844-1.65 3.252-1.65 1.174 0 2.047.341 2.621 1.025.574.684.86 1.712.86 3.087v6.913h-2.901v-6.92c0-.614-.12-1.064-.36-1.348-.24-.285-.664-.426-1.27-.426-.868 0-1.468.414-1.802 1.243l.01 7.451h-2.891v-6.909c0-.629-.124-1.083-.37-1.364-.247-.281-.667-.421-1.26-.421-.821 0-1.415.34-1.782 1.023v7.671h-2.891V16.467h2.711zm18.91 8.814c.426 0 .82-.095 1.18-.285.36-.19.627-.445.8-.765V22.37h-1.08c-1.447 0-2.218.5-2.311 1.5l-.01.17c0 .36.126.657.38.89.254.234.6.351 1.04.351zm2.39 2.011a3.218 3.218 0 0 1-.29-.97c-.7.78-1.61 1.17-2.73 1.17-1.061 0-1.94-.307-2.637-.92-.697-.614-1.045-1.388-1.045-2.321 0-1.148.425-2.028 1.275-2.642.85-.613 2.08-.924 3.687-.93h1.33v-.62c0-.5-.128-.9-.384-1.201-.257-.3-.663-.45-1.216-.45-.487 0-.87.116-1.146.35-.277.233-.415.553-.415.96h-2.891a2.9 2.9 0 0 1 .58-1.74c.387-.534.934-.953 1.64-1.256.708-.304 1.501-.455 2.382-.455 1.334 0 2.392.335 3.176 1.005.784.67 1.176 1.613 1.176 2.827v4.692c.007 1.027.15 1.804.43 2.33v.171h-2.922zm7.97-13.487v2.662h1.851v2.12h-1.85v5.404c0 .4.076.686.23.86.153.173.446.26.88.26.32 0 .604-.023.85-.07v2.191c-.567.173-1.15.26-1.75.26-2.028 0-3.062-1.024-3.102-3.071v-5.833h-1.581v-2.121h1.58v-2.662h2.892zm7.887 4.793c-.573 0-1.039.194-1.396.583-.356.388-.585.944-.685 1.668h4.022v-.23c-.013-.645-.187-1.142-.52-1.493-.334-.352-.807-.528-1.42-.528m.33 8.894c-1.588 0-2.88-.487-3.878-1.46-.997-.974-1.495-2.272-1.495-3.892v-.28c0-1.088.21-2.06.63-2.917.42-.857 1.015-1.518 1.786-1.981.77-.464 1.649-.696 2.636-.696 1.481 0 2.646.468 3.497 1.401.85.934 1.275 2.258 1.275 3.972v1.18h-6.893c.093.708.375 1.275.846 1.702.47.427 1.065.64 1.785.64 1.114 0 1.985-.404 2.611-1.21l1.421 1.59c-.433.614-1.02 1.092-1.76 1.436-.74.344-1.561.515-2.462.515" }, null, -1), o = [s]; function r(e, t) { return (0, a.wg)(), (0, a.iD)("svg", i, o) } var l = n(56490); const c = {}, u = (0, l.Z)(c, [["render", r]]), d = u }, 76990: (e, t, n) => { "use strict"; n.d(t, { Z: () => c }); var a = n(78551), i = n(43007), s = n(42681), o = n(21745); const r = (0, a.aZ)({ __name: "ScError", props: { subtitle: { type: String, default: "" }, headingLevel: { type: String, default: "" } }, setup(e) { const t = e, n = (0, a.Fl)((() => t.headingLevel ? { level: t.headingLevel } : {})); return (t, r) => ((0, a.wg)(), (0, a.j4)((0, i.SU)(o.AQ), { class: "sc-error", subtitle: e.subtitle, "heading-title-attrs": n.value }, (0, a.Nv)({ _: 2 }, [(0, a.Ko)(t.$slots, ((e, n) => ({ name: n, fn: (0, a.w5)((e => [(0, a.WI)(t.$slots, n, (0, s.vs)((0, a.F4)(e)))])) })))]), 1032, ["subtitle", "heading-title-attrs"])) } }), l = r, c = l }, 69070: (e, t, n) => { "use strict"; n.d(t, { Z: () => p }); var a = n(96358), i = (n(71756), n(69724), n(78551)), s = n(42681), o = n(43007), r = n(19408), l = n(21745), c = n(76990), u = n(83950); const d = { key: 0, class: "sc-no-internet-connection__trying-again" }, m = (0, i.aZ)({ __name: "ScNoInternetConnection", props: { title: { type: String, default: "" }, description: { type: String, default: "" }, condensed: { type: Boolean, default: !1 }, illustration: { type: Boolean, default: !0 }, tryAgainButtonAttrs: { type: Object, default: () => ({}) }, withFakeReconnect: { type: Boolean, default: !0 }, fakeReconnectTimeout: { type: Number, default: 600 } }, setup(e) { const t = e, m = (0, i.RC)((() => Promise.resolve().then(n.bind(n, 27371)))), v = (0, i.RC)((() => Promise.resolve().then(n.bind(n, 97040)))), { translate: p } = (0, u.Z)(), g = (0, o.iH)(!1); function h() { g.value = !0, setTimeout((() => { g.value = !1 }), t.fakeReconnectTimeout) } return (t, n) => ((0, i.wg)(), (0, i.j4)(c.Z, { class: (0, s.C_)(["sc-no-internet-connection", { "sc-no-internet-connection--condensed": e.condensed }]), "heading-level": e.condensed ? "4" : "2", illustration: e.illustration ? "no-internet" : void 0, title: e.title ? e.title : (0, o.SU)(p)("noInternetConnection.title") }, (0, i.Nv)({ illustration: (0, i.w5)((n => [(0, i.WI)(t.$slots, "illustration", (0, s.vs)((0, i.F4)((0, a.Z)((0, a.Z)({}, n), {}, { condensed: e.condensed }))), (() => [e.condensed ? (0, i.WI)(t.$slots, "illustration-condensed", { key: 0 }, (() => [(0, i.Wm)((0, o.SU)(l.ax), { icon: (0, o.SU)(m), class: "ui-message__illustration" }, null, 8, ["icon"])])) : (0, i.WI)(t.$slots, "illustration-standard", { key: 1 }, (() => [(0, i.Wm)((0, o.SU)(l.ax), { icon: (0, o.SU)(v), class: "ui-message__illustration" }, null, 8, ["icon"])]))]))])), default: (0, i.w5)((() => [(0, i.WI)(t.$slots, "default", {}, (() => [(0, i.WI)(t.$slots, "description", (0, s.vs)((0, i.F4)({ description: e.description, translate: (0, o.SU)(p) })), (() => [(0, i.Wm)((0, o.SU)(l.II), null, { default: (0, i.w5)((() => [(0, i.Uk)((0, s.zw)(e.description ? e.description : (0, o.SU)(p)("noInternetDescription.default")), 1)])), _: 1 })])), e.withFakeReconnect ? (0, i.WI)(t.$slots, "try-again", (0, s.vs)((0, i.dG)({ key: 0 }, { fakeLoading: g.value, fakeTryAgain: h, translate: (0, o.SU)(p) })), (() => [g.value ? ((0, i.wg)(), (0, i.iD)("div", d, [(0, i.WI)(t.$slots, "try-again-loader", (0, s.vs)((0, i.F4)({ translate: (0, o.SU)(p) })), (() => [(0, i.Wm)((0, o.SU)(l.MH), { name: "", type: "spinner", class: "sc-no-internet-connection__trying-again-spinner", "loader-attrs": { label: (0, o.SU)(p)("noInternetConnection.tryingToReconnect") } }, null, 8, ["loader-attrs"])]))])) : (0, i.WI)(t.$slots, "try-again-button", (0, s.vs)((0, i.dG)({ key: 1 }, { fakeTryAgain: h, translate: (0, o.SU)(p) })), (() => [(0, i.Wm)((0, o.SU)(l.wg), { class: "ui-button--text sc-no-internet-connection__try-again", onClick: (0, r.iM)(h, ["stop"]) }, { default: (0, i.w5)((() => [(0, i.Uk)((0, s.zw)((0, o.SU)(p)("noInternetConnection.tryAgain")), 1)])), _: 1 }, 8, ["onClick"])]))])) : (0, i.WI)(t.$slots, "try-again", (0, s.vs)((0, i.dG)({ key: 1 }, { tryAgainButtonAttrs: e.tryAgainButtonAttrs, translate: (0, o.SU)(p) })), (() => [(0, i.Wm)((0, o.SU)(l.wg), (0, i.dG)({ class: "ui-button--text sc-no-internet-connection__try-again" }, e.tryAgainButtonAttrs), { default: (0, i.w5)((() => [(0, i.Uk)((0, s.zw)((0, o.SU)(p)("noInternetConnection.tryAgain")), 1)])), _: 1 }, 16)]))]))])), _: 2 }, [(0, i.Ko)(t.$slots, ((e, n) => ({ name: n, fn: (0, i.w5)((e => [(0, i.WI)(t.$slots, n, (0, s.vs)((0, i.F4)(e)))])) })))]), 1032, ["class", "heading-level", "illustration", "title"])) } }), v = m, p = v }, 84824: (e, t, n) => { "use strict"; n.d(t, { Z: () => d }); var a = n(78551), i = n(43007), s = n(42681), o = n(21745), r = n(83950), l = n(39682); const c = { __name: "ScRequestNotification", props: { requestStatus: { type: String, default: "" }, translationPrefix: { type: String, default: "" } }, setup(e) { const t = e, { translateNoFallback: n } = (0, r.Z)(), c = (0, a.Fl)((() => "connectionRestored" === t.requestStatus ? "success" : "error")), u = (0, a.Fl)((() => { const e = [t.translationPrefix, t.requestStatus].filter((e => "" !== e)).join("."), a = n(e); return a || l.u3.warn(`ScRequestNotification - missing translation for '${e}' key`), a })); return (t, n) => e.requestStatus && u.value ? ((0, a.wg)(), (0, a.j4)((0, i.SU)(o.mE), { key: 0, type: c.value }, { default: (0, a.w5)((() => [(0, a.Uk)((0, s.zw)(u.value), 1)])), _: 1 }, 8, ["type"])) : (0, a.kq)("", !0) } }, u = c, d = u }, 70059: (e, t, n) => { "use strict"; n.d(t, { Z: () => u }); var a = n(78551), i = n(43007), s = n(42681), o = n(21745), r = n(83950); const l = { __name: "ScDisclaimer", setup(e) { const { translate: t } = (0, r.Z)(); return (e, n) => ((0, a.wg)(), (0, a.j4)((0, i.SU)(o.II), { id: "disclaimer", class: "sc-disclaimer ui-text--caption" }, { default: (0, a.w5)((() => [(0, a.Uk)((0, s.zw)((0, i.SU)(t)("results.disclaimer")), 1)])), _: 1 })) } }, c = l, u = c }, 64455: (e, t, n) => { "use strict"; n.r(t), n.d(t, { default: () => wn }); var a = n(96358), i = (n(89620), n(78551)), s = n(42681), o = n(43007), r = n(67939), l = (n(69724), n(16366), n(31781), n(21745)), c = n(77129), u = n(84824), d = n(81360), m = n(64719); const v = { class: "sc-results-cta__label" }, p = { inheritAttrs: !1 }, g = (0, i.aZ)((0, a.Z)((0, a.Z)({}, p), {}, { __name: "ScResultsCtas", props: { items: { type: Array, required: !0 }, placement: { type: String, required: !0 } }, setup(e) { const t = e, n = (0, d.J)(), r = (e, n) => { var a, i; null === (a = n.analyticsEvent) || void 0 === a || a.call(n, n.analyticsParams, t.placement), null === (i = n.onClick) || void 0 === i || i.call(n, e) }, c = (0, i.Fl)((() => t.items.find((e => e.error)))), p = (0, i.Fl)((() => c.value ? c.value.error === m.e.CONNECTION_UNAVAILABLE ? n.noInternet ? "noInternet" : "connectionRestored" : c.value.error === m.e.FAIL ? "unknown" : "" : "")); return (t, n) => ((0, i.wg)(), (0, i.iD)(i.HY, null, [((0, i.wg)(!0), (0, i.iD)(i.HY, null, (0, i.Ko)(e.items, (e => (0, i.WI)(t.$slots, `cta-${e.id}`, (0, s.vs)((0, i.dG)({ key: e.id }, { cta: e })), (() => [(0, i.Wm)((0, o.SU)(l.wg), (0, i.dG)({ class: "sc-results-cta", href: e.href }, (0, a.Z)((0, a.Z)({}, t.$attrs), e.attrs), { class: [e.isLoading ? "sc-results-cta--is-loading" : "", e.customStyle ? "sc-summary-modern__button--custom" : "sc-summary-modern__button--default"], onClick: t => r(t, e) }), { default: (0, i.w5)((() => [(0, i.Wm)((0, o.SU)(l.MH), { name: "", type: "ellipsis", class: "sc-results-cta__loader", "is-loading": !!e.isLoading }, null, 8, ["is-loading"]), (0, i._)("span", v, (0, s.zw)(e.label), 1)])), _: 2 }, 1040, ["href", "class", "onClick"])])))), 128)), c.value ? ((0, i.wg)(), (0, i.j4)(u.Z, { key: 0, "request-status": p.value, "translation-prefix": "results.summary.notifications.generic", class: "sc-summary-modern__notification" }, null, 8, ["request-status"])) : (0, i.kq)("", !0)], 64)) } })), h = g, f = h; var y, _, w = n(22522), b = (n(71756), n(4302), n(66469), n(35684)), S = n(83950), k = (n(42639), n(28933), n(22445)), U = n(11715), x = n(43789); function I(e, t) { return (0, U.Z)({ method: "GET", url: `${x.Z.apiPath}/concepts/`, params: { ids: e.join(",") }, headers: { "api-alias": C(t) } }) } function C(e) { return "zh-hans" === e ? "zh" : e } function F(e) { var t, n, a, i; return { id: e.id, name: null !== (t = e.name) && void 0 !== t ? t : "", common_name: null !== (n = null !== (a = null !== (i = e.common_name) && void 0 !== i ? i : e.name) && void 0 !== a ? a : e.label) && void 0 !== n ? n : "", type: y.Condition } } function E(e) { return e.id } function P(e) { var t; const { common_name: n, name: a, label: i } = e; return null !== (t = null !== n && void 0 !== n ? n : a) && void 0 !== t ? t : i } function T(e, t) { return t.filter((t => e.includes(t.id))) } function W(e) { const t = (0, b.V)(); return e.map((e => t.summaryConcepts.get(e.id))) } function A() { var e, t, n, a, i; const s = (0, w.z)(), o = W(null !== (e = s.groupedEvidences.risk_factors) && void 0 !== e ? e : []), r = W(null !== (t = s.groupedEvidences.initial_symptoms) && void 0 !== t ? t : []), l = W(null !== (n = s.groupedEvidences.regions) && void 0 !== n ? n : []), c = W(null !== (a = s.groupedEvidences.intelligent_interview) && void 0 !== a ? a : []), u = null !== (i = s.conditions) && void 0 !== i ? i : []; return [...o, ...r, ...l, ...c, ...u].map(F) } async function D(e) { const t = (0, b.V)(), n = A(); return t.language === e ? n : I(n.map(E), e) } function R() { const e = x.Z.reportStylesheet; if (e) return `${window.location.origin}/css/${e}` } function N(e) { var t, n; const a = (0, w.z)(), i = (null !== (t = null === (n = a.groupedEvidences) || void 0 === n ? void 0 : n.regions) && void 0 !== t ? t : []).map(E); return T(i, e).map(P) } function O(e) { var t; const n = (0, w.z)(), a = (null !== (t = n.groupedEvidences.risk_factors) && void 0 !== t ? t : []).filter((e => "present" === e.choice_id)).map(E); return T(a, e).map(P) } function L(e) { var t, n; const a = (0, w.z)(), i = (null !== (t = null === (n = a.groupedEvidences) || void 0 === n ? void 0 : n.initial_symptoms) && void 0 !== t ? t : []).map(E); return T(i, e).map(P) } function $(e, t, n) { var i, s; const o = (0, w.z)(), r = null !== (i = null === (s = o.groupedEvidences) || void 0 === s ? void 0 : s.intelligent_interview) && void 0 !== i ? i : [], l = r.map(E), c = T(l, e), u = r.map((e => { const t = c.find((t => t.id === e.id)); return (0, a.Z)((0, a.Z)({}, t), {}, { choice_id: e.choice_id }) })); return ["present", "absent", "unknown"].map((e => ({ label: n(`common.${e}`, null, { locale: t }), style: e, answer: { type: "list", value: u.filter((t => t.choice_id === e)).map((e => e.common_name)) } }))) } function q(e, t, n, a) { var i; const s = (0, w.z)(), o = null !== (i = s.conditions) && void 0 !== i ? i : [], r = o.map(E), l = T(r, e), c = o.map((e => { var i; const s = l.find((t => t.id === e.id)); return { name: null !== (i = null === s || void 0 === s ? void 0 : s.common_name) && void 0 !== i ? i : null === s || void 0 === s ? void 0 : s.name, probability: a(e.probabilityInt), probability_label: n(`pdfReport.probabilityMap.${e.probabilityClass}`, null, { locale: t }), probability_class: e.probabilityClass } })); return o.length ? { type: "results", value: c } : { type: "text", value: n("pdfReport.noConditions", null, { locale: t }) } } function H(e) { var t, n; const a = (0, b.V)(), i = null === (t = a.settings) || void 0 === t || null === (n = t.PDFSettings) || void 0 === n ? void 0 : n.blocks; return !i || !!i.find((t => t === e)) } function Z() { var e, t; const n = (0, b.V)(), a = null === (e = n.settings) || void 0 === e || null === (t = e.PDFSettings) || void 0 === t ? void 0 : t.disclaimer; return a || "pdfReport.disclaimer" } async function j(e, t, n) { const { value: a } = (0, k.WJ)(new Date, "YYYY-MM-DD, HH:mm"), i = await D(e), s = (0, w.z)(), o = [H(_.Sex), H(_.Age), H(_.Regions), H(_.RiskFactors)].some((e => e)), r = [H(_.Initials), H(_.Interview)].some((e => e)), l = [H(_.Results), H(_.Disclaimer)].some((e => e)); return { interface_language: e, api_alias: C(e), report_data: { custom_stylesheet: R(), labels: { title: t("pdfReport.title", null, { locale: e }), generated_on: `${t("pdfReport.generatedOn", null, { locale: e })} ${a}`, conditions_name: t("pdfReport.conditionsName", null, { locale: e }), probability: t("pdfReport.probability", null, { locale: e }) }, blocks: [o ? { title: t("interviewStep.patient", null, { locale: e }), items: [H(_.Sex) ? { label: t("results.summaryPanel.sex", null, { locale: e }), style: "inline", answer: { type: "text", value: t(`common.${s.patientSex}`, null, { locale: e }) } } : [], H(_.Age) ? { label: "month" === s.patientAge.unit ? t("pdfReport.ageAsMonths", null, { locale: e }) : t("results.summaryPanel.age", null, { locale: e }), style: "inline", answer: { type: "text", value: s.patientAge.value } } : [], H(_.Regions) ? { label: t("interviewStep.regions", null, { locale: e }), answer: { type: "list", value: N(i) } } : [], H(_.RiskFactors) ? { label: t("results.summaryPanel.risk_factors", null, { locale: e }), answer: { type: "list", value: O(i) } } : []].flatMap((e => e)) } : null, r ? { title: t("interviewStep.interview", null, { locale: e }), items: [H(_.Initials) ? { label: t("results.summaryPanel.reported_symptoms", null, { locale: e }), answer: { type: "list", value: L(i) } } : [], ...H(_.Interview) ? $(i, e, t) : []].flatMap((e => e)) } : null, l ? { title: t("interviewStep.results", null, { locale: e }), style: "results", items: [H(_.Results) ? { answer: q(i, e, t, n) } : [], H(_.Disclaimer) ? { style: "disclaimer", answer: { type: "text", value: t(Z(), null, { locale: e }) } } : []].flatMap((e => e)) } : null] } } } (function (e) { e["RiskFactor"] = "risk_factor", e["Condition"] = "condition", e["Symptom"] = "symptom" })(y || (y = {})), function (e) { e["Sex"] = "sex", e["Age"] = "age", e["Regions"] = "regions", e["RiskFactors"] = "riskFactors", e["Initials"] = "initials", e["Interview"] = "interview", e["Results"] = "results", e["Disclaimer"] = "disclaimer" }(_ || (_ = {})); var M = n(98129), z = n(15006); n(70238), n(45880), n(4361); function B(e, t) { const n = document.createElement("a"), a = window.URL.createObjectURL(e); n.href = a, n.download = t, n.click(), setTimeout((() => { window.URL.revokeObjectURL(a), n.remove() }), 0) } async function V(e, t) { if (k.gn) { const t = window.open("about:blank"), n = await e(), a = window.URL.createObjectURL(n); t && (t.location.href = a) } else { const n = await e(); B(n, t) } } var Y = n(70225); n(59538); function G(e) { if ("/api/form" !== x.Z.apiPath) throw new Error("New PDF endpoint is not implemented in modulith yet. Remove this check when it is implemented."); return (0, U.Z)({ method: "POST", url: "/prescreening/report/generate/pdf/", responseType: "blob", headers: { "Content-Type": "multipart/form-data" }, data: e }) } var Q = n(87502); function J() { const { computeConditionProgressBarValue: e } = (0, z.Z)(), { translate: t } = (0, S.Z)(), n = (0, b.V)(), s = (0, i.Fl)((() => { var e; const t = null === (e = n.settings) || void 0 === e ? void 0 : e.PDFSettings; return !!t && !!t.showPdfDownload })), o = (0, i.Fl)((() => { var e, t; const a = n.language, i = null === (e = n.settings) || void 0 === e ? void 0 : e.PDFSettings; return i && i.locales && null !== (t = i.locales[a]) && void 0 !== t ? t : [a] })), r = async e => { var t; const a = null === (t = n.formSetup) || void 0 === t ? void 0 : t.token; (0, Q.J1)(e, a) }; function l() { var e; const t = null !== (e = x.Z.title) && void 0 !== e ? e : "Triage", a = `Triage report (${n.interviewIdWithReturns})`; return "Triage" === t ? a : `${t} - ${a}` } function c(e) { const a = o.value[0] === n.language, i = 1 === o.value.length; return t(i && a ? "results.summary.pdfReportCta.simple" : `results.summary.pdfReportCta.extended.${e}`) } const { requestStatus: u, fetch: d } = (0, M.Z)((async i => { var s, o; const c = null === (s = n.settings) || void 0 === s ? void 0 : s.PDFSettings, u = null !== (o = null === c || void 0 === c ? void 0 : c.enableDataExporter) && void 0 !== o && o; if (u) { await r(i); const n = await j(i, t, e); (0, Y.QC)("pdf-report-download", { reportRequestData: (0, a.Z)((0, a.Z)({}, n), {}, { report_data: null !== c && void 0 !== c && c.serializeReportData ? JSON.stringify(n.report_data) : n.report_data }) }) } else await V((async () => { await r(i); const n = await j(i, t, e); return G({ report_data: JSON.stringify(n.report_data), interface_language: n.interface_language, api_alias: n.api_alias }) }), l()) }), { immediate: !1 }); return { pdfDownloadRequestStatus: u, downloadReport: d, loadLocale: r, locales: o, composeReport: j, showPdfDownload: s, getReportCtaLabel: c } } function K() { function e(e) { r.c.trackEvent("CTA", { event_details: { event_type: "redirect", event_object: "cta_event", event_data: { type: "url", data: [e] } } }, ["infermedicaAnalytics"]) } function t(e, t, n = { type: "", data: [] }) { r.c.trackEvent("CTA", { event_details: { event_type: t, event_object: e, event_data: n } }, ["infermedicaAnalytics"]) } return { handleCTAButtonClick: t, handleRedirectCTAButtonClick: e } } n(92346), n(53705); var X = n(32112), ee = n.n(X); function te() { const e = (0, b.V)(), t = (0, w.z)(), n = (0, i.Fl)((() => t.triageLevel)), a = (0, i.Fl)((() => e.interfaceLanguage)), s = (0, i.Fl)((() => t.conditions)), o = (0, i.Fl)((() => { var t; return null === e || void 0 === e || null === (t = e.settings) || void 0 === t ? void 0 : t.conditionCtas })), r = (0, i.Fl)((() => { var e; const { ctaMapping: t, defaultCta: i, limit: r } = null !== (e = o.value) && void 0 !== e ? e : {}; if (!i && (null === t || void 0 === t || !t.length)) return {}; const l = (e, t) => (!(t.conditionIds && t.conditionIds.length && e.id) || t.conditionIds.includes(e.id)) && (!(t.triageLevels && t.triageLevels.length && n.value) || t.triageLevels.includes(n.value)) && (!(t.languages && t.languages.length && a.value) || t.languages.includes(a.value)), c = {}; for (let n = 0; n < Math.min(s.value.length, null !== r && void 0 !== r ? r : 1 / 0); n += 1) { var u; const e = s.value[n], a = null !== (u = null === t || void 0 === t ? void 0 : t.filter((t => l(e, t.requirements))).sort(((e, t) => { const n = ({ requirements: e }) => { var t, n, a; let i = 0; return null !== (t = e.conditionIds) && void 0 !== t && t.length && (i += 4), null !== (n = e.triageLevels) && void 0 !== n && n.length && (i += 2), null !== (a = e.languages) && void 0 !== a && a.length && (i += 1), i }; return n(t) - n(e) }))) && void 0 !== u ? u : []; var d; if (i && a.push(i), a[0]) c[e.id] = ee()({ label: "results.conditionDetails.learnMore", type: "button" }, null !== (d = a[0]) && void 0 !== d ? d : {}) } return c })); return { conditionCtasMapping: r, conditionCtasConfig: o } } var ne = n(30466); function ae() { const e = (0, b.V)(), t = (0, w.z)(), { handleCTAButtonClick: n } = K(), { translate: s, translationExists: o } = (0, S.Z)(), r = (0, i.Fl)((() => t.triageLevel)), l = (0, i.Fl)((() => { var e, n; return null === (e = t.recommendedSpecialist) || void 0 === e || null === (n = e.recommended_specialist) || void 0 === n ? void 0 : n.id })), c = (0, i.Fl)((() => { var e; return null === (e = t.recommendedSpecialist) || void 0 === e ? void 0 : e.recommended_channel })); function u(n) { const a = () => { var e; return null === (e = n.requirements) || void 0 === e || !e.triageLevels || !!r.value && n.requirements.triageLevels.includes(r.value) }, i = () => { var e; const a = null === (e = n.requirements) || void 0 === e ? void 0 : e.age; if (!a) return !0; let i = t.patientAge.value; return "month" === t.patientAge.unit && (i = 1), void 0 !== i && (!a.from || i >= a.from) && (!a.to || i <= a.to) }, s = () => { var e, t; return null === (e = n.requirements) || void 0 === e || !e.specialists || !!l.value && (null === (t = n.requirements) || void 0 === t ? void 0 : t.specialists.includes(l.value)) }, o = () => { var e, t; return null === (e = n.requirements) || void 0 === e || !e.channels || !!c.value && (null === (t = n.requirements) || void 0 === t ? void 0 : t.channels.includes(c.value)) }, u = () => { var e; return null === (e = n.requirements) || void 0 === e || !e.sex || n.requirements.sex === t.patientSex }, d = () => { var e; if (null === (e = n.requirements) || void 0 === e || !e.parameters) return !0; const t = n.requirements.parameters, a = Object.keys(t); return a.every((e => { const n = t[e], { parameterValue: a } = (0, ne.h)([e]); return n.includes(a) })) }, m = () => { var t; return null === (t = n.requirements) || void 0 === t || !t.languages || e.interfaceLanguage && n.requirements.languages.includes(e.interfaceLanguage) }; return [a(), i(), s(), o(), u(), d(), m()].every((e => e)) } const d = (0, i.Fl)((() => { var t, n; return null !== (t = null === e || void 0 === e || null === (n = e.settings) || void 0 === n ? void 0 : n.resultsCta) && void 0 !== t ? t : [] })), m = (0, i.Fl)((() => d.value.flatMap((e => u(e) ? e.ctas.map((e => { var t; const i = () => { var t, n; return e.href ? { href: e.href, attrs: { rel: "noopener noreferrer", target: "_blank" }, analyticsParams: { event_type: "redirect", event_object: "cta_event", category: null === (n = e.analyticsData) || void 0 === n ? void 0 : n.category } } : { analyticsParams: { event_type: "post_message", event_object: "cta_event", category: null === (t = e.analyticsData) || void 0 === t ? void 0 : t.category }, onClick: () => { var t, n; return (0, Y.QC)(null === (t = e.event) || void 0 === t ? void 0 : t.action, null === (n = e.event) || void 0 === n ? void 0 : n.data) } } }, r = () => { var t, n, a, i, s, o, r, l, c; return e.href ? { type: null !== (o = null === (r = e.analyticsData) || void 0 === r ? void 0 : r.type) && void 0 !== o ? o : "url", data: null !== (l = null === (c = e.analyticsData) || void 0 === c ? void 0 : c.data) && void 0 !== l ? l : [e.href] } : { type: null !== (t = null === (n = e.analyticsData) || void 0 === n ? void 0 : n.type) && void 0 !== t ? t : "json", data: null !== (a = null === (i = e.analyticsData) || void 0 === i ? void 0 : i.data) && void 0 !== a ? a : [null === (s = e.event) || void 0 === s ? void 0 : s.data] } }; return (0, a.Z)({ id: null === (t = e.analyticsData) || void 0 === t ? void 0 : t.category, label: o(e.label) ? s(e.label) : e.label, customStyle: e.customStyle, analyticsEvent(e, t) { e && n(null === e || void 0 === e ? void 0 : e.event_object, null === e || void 0 === e ? void 0 : e.event_type, (0, a.Z)({ category: e.category, placement: t }, r())) }, placement: e.placement }, i()) })) : [])))); return { customCtas: m } } var ie = n(7975), se = n(39682), oe = n(3936); function re(e) { return (0, U.Z)({ method: "POST", url: "/api/form/intake_survey/", data: e }) } function le(e) { return (0, U.Z)({ method: "GET", url: `/api/form/intake_survey/${e}/magic_link` }) } var ce = n(98646); const ue = e => t => t.analyticsParams ? (0, a.Z)((0, a.Z)({}, t), {}, { analyticsParams: (0, a.Z)((0, a.Z)({}, t.analyticsParams), {}, { placement: e }) }) : t; function de() { const e = J(), t = (0, w.z)(), n = (0, b.V)(), a = (0, d.J)(), { translate: s } = (0, S.Z)(), { handleCTAButtonClick: o } = K(), r = (0, i.f3)(ce._C), l = (0, i.Fl)((() => t.triage)), c = (0, i.Fl)((() => { var e; return null === (e = l.value) || void 0 === e ? void 0 : e.triage_level })), u = (0, i.Fl)((() => { var e; return n.isResults ? null === (e = n.current) || void 0 === e ? void 0 : e.componentSettings : null })), v = (0, i.Fl)((() => { const [e] = t.conditions; return void 0 !== (null === e || void 0 === e ? void 0 : e.patient_education) && c.value === oe.$.SelfCare })), p = async () => { const [e] = t.conditions; a.condition = e, await a.openPanel({ type: "panel", id: "condition" }) }, g = (0, i.Fl)((() => { var e, t, n; return null !== (e = null === u || void 0 === u || null === (t = u.value) || void 0 === t || null === (n = t.summary) || void 0 === n ? void 0 : n.showStartOver) && void 0 !== e && e })), h = (0, i.Fl)((() => 0 === t.conditions.length)), f = (0, i.Fl)((() => ({ id: "common-care-methods", label: s("results.showCommonCareMethods"), analyticsParams: { event_type: "click", event_object: "common_care_methods_button" }, analyticsEvent: (e, n) => { var a; if (!e) return; const [i] = t.conditions; o(e.event_object, e.event_type, { type: "condition", data: [{ id: i.id, probability: i.probability, ranking: i.ranking, has_patient_education: !(null === i || void 0 === i || null === (a = i.condition_details) || void 0 === a || !a.has_patient_education) }], placement: n }) }, onClick: p }))), y = (0, i.Fl)((() => { var e; return (null === (e = n.settings) || void 0 === e ? void 0 : e.intakeIntegration) && !t.thirdPerson && t.hasConsultationTriageLevel })), _ = (0, i.Fl)((() => { let e; const i = { event_type: "redirect", event_object: "cta_event", category: "cta-appointment" }; return { id: "intake-survey", label: s("results.intakeSurveyCta"), analyticsParams: i, analyticsEvent: (t, n) => { n && (e = n) }, onClick: async () => { let l; if (r) { var c, u; l = window.open("about:blank", "_blank"); const e = document.createElement("div"), t = document.createTextNode(s("common.loading")); e.appendChild(t), e.style.fontSize = "2rem", null === (c = l) || void 0 === c || null === (u = c.document) || void 0 === u || u.body.appendChild(e) } if (t.intakeCta.status === m.e.FETCHING) return; if (a.noInternet) return void (t.intakeCta.status = m.e.CONNECTION_UNAVAILABLE); const d = t.data; d.interview_id = n.interviewId, delete d.extras, t.intakeCta.status = m.e.FETCHING; try { if ("" === t.intakeCta.id) { const e = await re(d); t.intakeCta.id = e.id, t.intakeCta.magicLink = e.magic_link } else t.intakeCta.magicLink = await le(t.intakeCta.id); t.intakeCta.status = m.e.SUCCESS } catch (p) { var v; return r && (null === (v = l) || void 0 === v || v.close()), t.intakeCta.status = m.e.FAIL, void (0, se.iR)(p) } o(i.event_object, i.event_type, { category: i.category, type: "url", data: [t.intakeCta.magicLink], placement: e }), r ? l && (l.location = t.intakeCta.magicLink) : window.open(t.intakeCta.magicLink, "_blank") }, isLoading: t.intakeCta.status === m.e.FETCHING, error: [m.e.FAIL, m.e.CONNECTION_UNAVAILABLE].includes(t.intakeCta.status) ? t.intakeCta.status : null, attrs: { "data-test-id": ie.COMPLETE_INTAKE_SURVEY_BUTTON } } })), k = (0, i.Fl)((() => { let e; return { id: "start-over", label: s("results.startNewCheckup"), analyticsParams: { event_type: "click", event_object: "start_over" }, analyticsEvent: (t, n) => { e = n, t && o(t.event_object, t.event_type, { type: "", data: [], placement: e }) }, onClick: () => { a.openPanel({ type: "modal", id: "confirmation", data: { placement: e } }) }, attrs: { "data-test-id": ie.START_NEW_CHECKUP_BUTTON } } })), U = (0, i.Fl)((() => e.locales.value.map((t => ({ id: `download-pdf-${t}`, label: e.getReportCtaLabel(t), analyticsParams: { event_type: "confirm", event_object: "download_my_answers_button" }, analyticsEvent: (e, n) => { e && o(e.event_object, e.event_type, { type: "language", data: [t], placement: n }) }, onClick: async () => { e.downloadReport(t) }, attrs: { "data-test-id": `${ie.DOWNLOAD_PDF_BUTTON}-${t}` } }))))), { customCtas: x } = ae(), I = e => x.value.filter((t => (t.placement && t.placement.length ? t.placement : ["triage", "summary"]).includes(e))), C = (0, i.Fl)((() => v.value ? [f.value] : [])), F = (0, i.Fl)((() => [...y.value ? [_.value] : [], ...C.value, ...I("triage")].map(ue("triage")))), E = (0, i.Fl)((() => h.value ? [k.value].map(ue("conditions")) : [])), { conditionCtasConfig: P, conditionCtasMapping: T } = te(), W = (0, i.Fl)((() => P.value && T.value ? [{ id: "condition-cta", label: "", href: "", analyticsParams: { event_type: "redirect", event_object: "condition_description", conditions: Object.entries(T.value).map((([e, t]) => ({ id: e, url: t.href }))) } }] : [])), A = (0, i.Fl)((() => [...I("summary"), ...C.value, ...e.showPdfDownload.value ? U.value : [], ...g.value ? [k.value] : []].map(ue("summary")))); return { pdfDownloadRequestStatus: e.pdfDownloadRequestStatus, showPdfDownload: e.showPdfDownload, showCommonCareMethods: v, showCommonCareMethodsCta: f, showStartOver: g, startOverCta: k, triageCtas: F, summaryCtas: A, commonCtas: C, rankingCtas: E, conditionsCtas: W, conditionCtasConfig: P, conditionCtasMapping: T, customCtas: x } } function me(e, t = !1) { var n, a, s, o, l, c; const { translate: u, translateWithVersion: d } = (0, S.Z)(), m = (0, b.V)(), v = (0, w.z)(), p = t ? "Modern" : "", g = (0, i.Fl)((() => d(`results.triageCard$version.${v.triageLevel}.title`, p))), h = (0, i.Fl)((() => d(`results.triageCard$version.${v.triageLevel}.description`, p))), f = (0, i.Fl)((() => { var e, t; return null === (e = v.triage) || void 0 === e || null === (t = e.serious) || void 0 === t ? void 0 : t.map((e => e.common_name)) })), y = (0, i.Fl)((() => { var t; return (null === e || void 0 === e ? void 0 : e.showSeriousEvidence) && (null === (t = f.value) || void 0 === t ? void 0 : t.length) > 0 })), _ = null === (n = m.resultsSettings) || void 0 === n || null === (a = n.componentSettings) || void 0 === a || null === (s = a.triage) || void 0 === s ? void 0 : s.specialistRecommender, k = null === (o = m.resultsSettings) || void 0 === o || null === (l = o.componentSettings) || void 0 === l || null === (c = l.triage) || void 0 === c ? void 0 : c.channel, U = (0, i.Fl)((() => { var e, t; return (null === _ || void 0 === _ ? void 0 : _.show) && Object.keys(v.recommendedSpecialist || {}).length > 0 && (null === v || void 0 === v || null === (e = v.recommendedSpecialist) || void 0 === e || null === (t = e.recommended_specialist) || void 0 === t ? void 0 : t.id) })), x = (0, i.Fl)((() => { var e; return (null === k || void 0 === k ? void 0 : k.show) && Object.keys(v.recommendedSpecialist || {}).length > 0 && (null === v || void 0 === v || null === (e = v.recommendedSpecialist) || void 0 === e ? void 0 : e.recommended_channel) })), I = (0, i.Fl)((() => { var e, t; return null === (e = v.recommendedSpecialist) || void 0 === e || null === (t = e.recommended_specialist) || void 0 === t ? void 0 : t.name })), C = (0, i.Fl)((() => { var e; return x.value ? u(`results.recommendSpecialistChannel.${null === (e = v.recommendedSpecialist) || void 0 === e ? void 0 : e.recommended_channel}`) : "" })); return (0, i.bv)((() => { r.c.trackEvent("Triage Presented", { triage_level: v.triageLevel }) })), { translate: u, translateWithVersion: d, title: g, description: h, seriousSymptoms: f, hasSeriousEvidence: y, hasRecommendSpecialist: U, hasRecommendSpecialistChannel: x, recommendSpecialistName: I, recommendSpecialistChannel: C } } const ve = { id: "triage-label", class: "ui-card__triage" }, pe = { key: 0, class: "sc-triage-card__ctas" }, ge = { __name: "ScTriageCard", props: { settings: { type: Object, default: () => ({}) } }, setup(e) { const t = e, n = (0, w.z)(), { translate: r, title: u, description: d, seriousSymptoms: m, hasSeriousEvidence: v, hasRecommendSpecialist: p, hasRecommendSpecialistChannel: g, recommendSpecialistName: h, recommendSpecialistChannel: y } = me(t.settings), _ = r("results.triageCard.recommendation"), { triageCtas: b } = de(), S = (0, i.Fl)((() => ({ icon: n.triageLevel.replace(/_/g, "-") }))); return (e, t) => (0, o.SU)(n).triage ? ((0, i.wg)(), (0, i.j4)((0, o.SU)(l.RP), { key: 0, id: "triage", class: "sc-triage-card", type: (0, o.SU)(n).triageLevel, "icon-triage-attrs": S.value, title: (0, o.SU)(u), subtitle: (0, o.SU)(_) }, (0, i.Nv)({ title: (0, i.w5)((() => [(0, i.WI)(e.$slots, "title", (0, s.vs)((0, i.F4)({ title: (0, o.SU)(u) })), (() => [(0, o.SU)(u) ? ((0, i.wg)(), (0, i.j4)((0, o.SU)(l.Hg), { key: 0, level: "2", tag: "h1", class: "ui-card__title", "data-test-id": (0, o.SU)(ie).SCREEN_HEADING }, { default: (0, i.w5)((() => [(0, i.Uk)((0, s.zw)((0, o.SU)(u)), 1)])), _: 1 }, 8, ["data-test-id"])) : (0, i.kq)("", !0)]))])), triage: (0, i.w5)((({ iconTriageAttrs: t }) => [(0, i.WI)(e.$slots, "triage", (0, s.vs)((0, i.F4)({ iconTriageAttrs: t })), (() => [(0, i._)("div", ve, [null !== t && void 0 !== t && t.icon ? ((0, i.wg)(), (0, i.j4)((0, o.SU)(l.ax), (0, i.dG)({ key: 0 }, t, { class: "ui-card__icon" }), null, 16)) : (0, i.kq)("", !0)])]))])), description: (0, i.w5)((t => [(0, i.WI)(e.$slots, "description", (0, s.vs)((0, i.F4)((0, a.Z)((0, a.Z)({}, t), {}, { hasSeriousEvidence: (0, o.SU)(v), translate: (0, o.SU)(r), seriousSymptoms: (0, o.SU)(m), hasRecommendSpecialist: (0, o.SU)(p), recommendSpecialistName: (0, o.SU)(h), recommendSpecialistChannel: (0, o.SU)(y), triageCtas: (0, o.SU)(b) }))), (() => [(0, i.Wm)((0, o.SU)(l.II), { class: "ui-card__description" }, { default: (0, i.w5)((() => [(0, i.Uk)((0, s.zw)((0, o.SU)(d)), 1)])), _: 1 }), (0, i.WI)(e.$slots, "serious-evidence", (0, s.vs)((0, i.F4)({ hasSeriousEvidence: (0, o.SU)(v), translate: (0, o.SU)(r), seriousSymptoms: (0, o.SU)(m) })), (() => [(0, o.SU)(v) ? ((0, i.wg)(), (0, i.iD)(i.HY, { key: 0 }, [(0, i.Wm)((0, o.SU)(l.Hg), { level: "4", tag: "h2", class: "sc-triage-card__heading" }, { default: (0, i.w5)((() => [(0, i.Uk)((0, s.zw)((0, o.SU)(r)("results.triageCard.seriousEvidence.heading")), 1)])), _: 1 }), (0, i.Wm)((0, o.SU)(l.F0), null, { default: (0, i.w5)((() => [((0, i.wg)(!0), (0, i.iD)(i.HY, null, (0, i.Ko)((0, o.SU)(m), (e => ((0, i.wg)(), (0, i.j4)(c.Z, { key: e, icon: "bullet-alarming", class: "ui-bullet-points-item--primary" }, { default: (0, i.w5)((() => [(0, i.Wm)((0, o.SU)(l.II), null, { default: (0, i.w5)((() => [(0, i.Uk)((0, s.zw)(e), 1)])), _: 2 }, 1024)])), _: 2 }, 1024)))), 128))])), _: 1 })], 64)) : (0, i.kq)("", !0)])), (0, i.WI)(e.$slots, "recommended-specialist", (0, s.vs)((0, i.F4)({ hasRecommendSpecialist: (0, o.SU)(p), translate: (0, o.SU)(r), recommendSpecialistName: (0, o.SU)(h) })), (() => [(0, o.SU)(p) ? ((0, i.wg)(), (0, i.iD)(i.HY, { key: 0 }, [(0, i.Wm)((0, o.SU)(l.Hg), { level: "4", class: "sc-triage-card__heading" }, { default: (0, i.w5)((() => [(0, i.Uk)((0, s.zw)((0, o.SU)(r)("results.triageCard.recommendSpecialist.title")), 1)])), _: 1 }), (0, i.Wm)((0, o.SU)(l.II), null, { default: (0, i.w5)((() => [(0, i.Uk)((0, s.zw)((0, o.SU)(h)), 1)])), _: 1 })], 64)) : (0, i.kq)("", !0)])), (0, i.WI)(e.$slots, "consultation-form", (0, s.vs)((0, i.F4)({ hasRecommendSpecialistChannel: (0, o.SU)(g), translate: (0, o.SU)(r), recommendSpecialistChannel: (0, o.SU)(y) })), (() => [(0, o.SU)(g) ? ((0, i.wg)(), (0, i.iD)(i.HY, { key: 0 }, [(0, i.Wm)((0, o.SU)(l.Hg), { level: "4", class: "sc-triage-card__heading" }, { default: (0, i.w5)((() => [(0, i.Uk)((0, s.zw)((0, o.SU)(r)("results.triageCard.recommendSpecialist.suggestedConsultationForm")), 1)])), _: 1 }), (0, i.Wm)((0, o.SU)(l.II), null, { default: (0, i.w5)((() => [(0, i.Uk)((0, s.zw)((0, o.SU)(y)), 1)])), _: 1 })], 64)) : (0, i.kq)("", !0)])), (0, i.WI)(e.$slots, "ctas", (0, s.vs)((0, i.F4)({ triageCtas: (0, o.SU)(b) })), (() => [(0, o.SU)(b).length > 0 ? ((0, i.wg)(), (0, i.iD)("div", pe, [(0, i.WI)(e.$slots, "cta", (0, s.vs)((0, i.F4)({ triageCtas: (0, o.SU)(b) })), (() => [(0, i.Wm)(f, { items: (0, o.SU)(b), placement: "triage", class: "sc-triage-card__cta" }, null, 8, ["items"])]))])) : (0, i.kq)("", !0)]))]))])), _: 2 }, [(0, i.Ko)(e.$slots, ((t, n) => ({ name: n, fn: (0, i.w5)((t => [(0, i.WI)(e.$slots, n, (0, s.vs)((0, i.F4)(t)))])) })))]), 1032, ["type", "icon-triage-attrs", "title", "subtitle"])) : (0, i.kq)("", !0) } }, he = ge, fe = he; var ye = n(43420), _e = n(78484); function we(e) { const t = (0, d.J)(); async function n() { var n; t.condition = e, await t.openPanel({ type: "panel", id: "condition" }), r.c.trackEvent("Show Condition Details", { event_details: { event_type: "click", event_object: "condition", event_data: { type: "condition", data: [{ id: e.id, probability: e.probability, ranking: e.ranking, has_patient_education: !(null === e || void 0 === e || null === (n = e.condition_details) || void 0 === n || !n.has_patient_education) }] } } }) } return { showConditionDetailsHandler: n } } const be = { class: "sc-conditions-item__info" }, Se = { class: "sc-conditions-item__text" }, ke = { __name: "ScConditionsItem", props: { condition: { type: Object, default: () => ({}) }, secondary: { type: Boolean, default: !1 } }, setup(e) { const t = e, { computeConditionProgressBarValue: n } = (0, z.Z)(), { translate: a } = (0, S.Z)(), { showConditionDetailsHandler: r } = we(t.condition); return (t, c) => ((0, i.wg)(), (0, i.j4)(_e.Z, { class: (0, s.C_)(["sc-conditions-item", { "sc-conditions-item--secondary": e.secondary }]) }, { default: (0, i.w5)((() => [(0, i.WI)(t.$slots, "item", (0, s.vs)((0, i.F4)({ secondary: e.secondary, showConditionDetailsHandler: (0, o.SU)(r), condition: e.condition, translate: (0, o.SU)(a) })), (() => [(0, i.Wm)((0, o.SU)(l.wg), { class: (0, s.C_)(["sc-conditions-item__wrapper ui-button--outlined", { "ui-button--secondary": e.secondary }]), onClick: (0, o.SU)(r) }, { default: (0, i.w5)((() => [(0, i._)("div", be, [(0, i.WI)(t.$slots, "progress", (0, s.vs)((0, i.F4)({ condition: e.condition })), (() => [(0, i.Wm)((0, o.SU)(l.Qs), { class: "sc-conditions-item__progress", min: 0, max: 100, value: (0, o.SU)(n)(e.condition.probabilityInt) }, null, 8, ["value"])])), (0, i._)("div", Se, [(0, i.WI)(t.$slots, "name", (0, s.vs)((0, i.F4)({ secondary: e.secondary, condition: e.condition })), (() => [(0, i.Wm)((0, o.SU)(l.II), { class: "sc-conditions-item__condition-name" }, { default: (0, i.w5)((() => [(0, i.Uk)((0, s.zw)(e.condition.common_name), 1)])), _: 1 })])), (0, i.WI)(t.$slots, "text", (0, s.vs)((0, i.F4)({ translate: (0, o.SU)(a), condition: e.condition })), (() => [(0, i.Wm)((0, o.SU)(l.II), { class: "sc-conditions-item__probability ui-text--body-2-compact" }, { default: (0, i.w5)((() => [(0, i.Uk)((0, s.zw)((0, o.SU)(a)(`common.evidence.${e.condition.probabilityClass}`)), 1)])), _: 1 })]))])]), (0, i.WI)(t.$slots, "icon", {}, (() => [(0, i.Wm)((0, o.SU)(l.ax), { icon: "chevron-right", class: "sc-conditions-item__icon ui-button__icon" })]))])), _: 3 }, 8, ["class", "onClick"])]))])), _: 3 }, 8, ["class"])) } }, Ue = ke, xe = Ue; function Ie() { const e = (0, o.iH)(""), t = (0, b.V)(); (0, i.m0)((() => { e.value && r.c.trackEvent("Show More Conditions", { event_details: { event_type: "expand", event_object: "less_likely_conditions" } }) })); const n = (0, i.Fl)((() => { var e; return null === (e = t.resultsSettings) || void 0 === e ? void 0 : e.componentSettings })), a = (0, i.Fl)((() => { var e, t; return null === (e = n.value) || void 0 === e || null === (t = e.conditions) || void 0 === t ? void 0 : t.likelyConditionsLimit })), { detailedConditions: s } = (0, z.Z)(), l = (0, i.Fl)((() => { const e = s.value.filter((e => "weak" !== e.probabilityClass)); return void 0 !== a.value && e.splice(a.value), e })), c = (0, i.Fl)((() => s.value.slice(l.value.length))), u = (0, i.Fl)((() => !!l.value.length)), d = (0, i.Fl)((() => !!c.value.length)), m = (0, i.Fl)((() => !u.value && d.value)), v = (0, i.Fl)((() => !u.value && !d.value)); return { openedCondition: e, likelyConditions: l, unlikelyConditions: c, showLikelyConditions: u, showLessLikelyConditions: d, hasOnlyLessLikelyConditions: m, hasNoConditions: v } } const Ce = { __name: "ScPossibleConditions", props: { settings: { type: Object, default: () => ({}) } }, setup(e) { const { translate: t } = (0, S.Z)(), { openedCondition: n, likelyConditions: a, unlikelyConditions: r, showLikelyConditions: c, showLessLikelyConditions: u, hasOnlyLessLikelyConditions: d, hasNoConditions: m } = Ie(), { rankingCtas: v } = de(); return (e, p) => ((0, i.wg)(), (0, i.j4)((0, o.SU)(l.bK), { id: "possible-conditions", class: "sc-possible-conditions" }, { default: (0, i.w5)((() => [(0, i.WI)(e.$slots, "heading", (0, s.vs)((0, i.F4)({ hasNoConditions: (0, o.SU)(m), translate: (0, o.SU)(t) })), (() => [(0, i.Wm)((0, o.SU)(l.Hg), { key: "heading", class: "sc-possible-conditions__heading" }, { default: (0, i.w5)((() => [(0, o.SU)(m) ? ((0, i.wg)(), (0, i.iD)(i.HY, { key: 0 }, [(0, i.Uk)((0, s.zw)((0, o.SU)(t)("results.possibleConditions.noConditions.heading")), 1)], 64)) : ((0, i.wg)(), (0, i.iD)(i.HY, { key: 1 }, [(0, i.Uk)((0, s.zw)((0, o.SU)(t)("results.possibleConditions.hasConditions.heading")), 1)], 64))])), _: 1 })])), (0, i.WI)(e.$slots, "text", (0, s.vs)((0, i.F4)({ hasNoConditions: (0, o.SU)(m), translate: (0, o.SU)(t) })), (() => [(0, i.Wm)((0, o.SU)(l.II), { key: "text", class: "sc-possible-conditions__text" }, { default: (0, i.w5)((() => [(0, o.SU)(m) ? ((0, i.wg)(), (0, i.iD)(i.HY, { key: 0 }, [(0, i.Uk)((0, s.zw)((0, o.SU)(t)("results.possibleConditions.noConditions.text")), 1)], 64)) : ((0, i.wg)(), (0, i.iD)(i.HY, { key: 1 }, [(0, i.Uk)((0, s.zw)((0, o.SU)(t)("results.possibleConditions.hasConditions.text")), 1)], 64))])), _: 1 })])), (0, o.SU)(c) ? ((0, i.wg)(), (0, i.iD)(i.HY, { key: 0 }, [(0, i.WI)(e.$slots, "hint", (0, s.vs)((0, i.F4)({ translate: (0, o.SU)(t) })), (() => [(0, i.Wm)((0, o.SU)(l.II), { key: "hint", class: "sc-possible-conditions__hint" }, { default: (0, i.w5)((() => [(0, i.Uk)((0, s.zw)((0, o.SU)(t)("results.possibleConditions.hint")), 1)])), _: 1 })])), (0, i.WI)(e.$slots, "conditions-list", (0, s.vs)((0, i.F4)({ likelyConditions: (0, o.SU)(a) })), (() => [(0, i.Wm)((0, o.SU)(l.SJ), { key: "list", class: "sc-possible-conditions__list" }, { default: (0, i.w5)((() => [((0, i.wg)(!0), (0, i.iD)(i.HY, null, (0, i.Ko)((0, o.SU)(a), (t => (0, i.WI)(e.$slots, "conditions-item", (0, s.vs)((0, i.dG)({ key: t.id }, { condition: t })), (() => [(0, i.Wm)(xe, { condition: t }, null, 8, ["condition"])])))), 128))])), _: 3 })]))], 64)) : (0, i.kq)("", !0), (0, i.WI)(e.$slots, "message", (0, s.vs)((0, i.F4)({ hasOnlyLessLikelyConditions: (0, o.SU)(d), translate: (0, o.SU)(t) })), (() => [(0, o.SU)(d) ? ((0, i.wg)(), (0, i.j4)((0, o.SU)(l.mE), { key: "message", class: "sc-possible-conditions__message", type: "info" }, { default: (0, i.w5)((() => [(0, i.Uk)((0, s.zw)((0, o.SU)(t)("results.possibleConditions.message")), 1)])), _: 1 })) : (0, i.kq)("", !0)])), (0, i.WI)(e.$slots, "accordion", (0, s.vs)((0, i.F4)({ showLessLikelyConditions: (0, o.SU)(u), openedCondition: (0, o.SU)(n), translate: (0, o.SU)(t), unlikelyConditions: (0, o.SU)(r) })), (() => [(0, o.SU)(u) ? ((0, i.wg)(), (0, i.j4)((0, o.SU)(l.A9), { key: "accordion", modelValue: (0, o.SU)(n), "onUpdate:modelValue": p[0] || (p[0] = e => (0, o.dq)(n) ? n.value = e : null), class: "sc-possible-conditions__accordion" }, { default: (0, i.w5)((() => [(0, i.WI)(e.$slots, "accordion-item", (0, s.vs)((0, i.F4)({ translate: (0, o.SU)(t), unlikelyConditions: (0, o.SU)(r) })), (() => [(0, i.Wm)(ye.Z, { name: "less-likely-conditions", title: (0, o.SU)(t)("results.possibleConditions.lessLikelyConditions") }, { default: (0, i.w5)((() => [(0, i.WI)(e.$slots, "less-likely-conditions-list", (0, s.vs)((0, i.F4)({ unlikelyConditions: (0, o.SU)(r) })), (() => [(0, i.Wm)((0, o.SU)(l.SJ), { class: "sc-possible-conditions__list" }, { default: (0, i.w5)((() => [((0, i.wg)(!0), (0, i.iD)(i.HY, null, (0, i.Ko)((0, o.SU)(r), (t => (0, i.WI)(e.$slots, "less-likely-conditions-list-item", (0, s.vs)((0, i.dG)({ key: t.id }, { condition: t })), (() => [(0, i.Wm)(xe, { secondary: !0, condition: t }, null, 8, ["condition"])])))), 128))])), _: 3 })]))])), _: 3 }, 8, ["title"])]))])), _: 3 }, 8, ["modelValue"])) : (0, i.kq)("", !0)])), (0, i.WI)(e.$slots, "ctas", (0, s.vs)((0, i.F4)({ rankingCtas: (0, o.SU)(v) })), (() => [(0, i.Wm)(f, { class: "ui-button--small", placement: "conditions", items: (0, o.SU)(v) }, null, 8, ["items"])]))])), _: 3 })) } }, Fe = Ce, Ee = Fe; var Pe = n(69070); const Te = { __name: "ScLabTestsAccordion", props: { labTestPanels: { type: Array, default: () => [] } }, setup(e) { const t = e, n = (0, i.Fl)((() => t.labTestPanels.map((e => (0, a.Z)((0, a.Z)({}, e), {}, { title: e.name }))))), s = e => e.map((e => e.common_name)); return (e, t) => ((0, i.wg)(), (0, i.j4)((0, o.SU)(l.A9), { items: n.value }, (0, i.Nv)({ _: 2 }, [(0, i.Ko)(n.value, ((e, t) => ({ name: e.name, fn: (0, i.w5)((() => [(0, i.Wm)((0, o.SU)(l.F0), { tag: "ol", type: "1", items: s(e.lab_tests) }, null, 8, ["items"])])) })))]), 1032, ["items"])) } }, We = Te, Ae = We, De = { key: "recommended", class: "sc-lab-tests__panel sc-lab-tests__panel--recommended" }, Re = { key: "preventive", class: "sc-lab-tests__panel sc-lab-tests__panel--preventive" }, Ne = { __name: "ScLabTestsContent", props: { recommendedTestPanels: { type: Array, default: () => [] }, preventiveTestPanels: { type: Array, default: () => [] }, noInternetAndData: { type: Boolean, default: !1 }, loading: { type: Boolean, default: !1 }, settings: { type: Object, default: () => ({}) } }, setup(e) { const t = e, n = (0, o.iH)([]), a = (0, o.iH)([]), r = (0, i.Fl)((() => !!t.recommendedTestPanels.length)), c = (0, i.Fl)((() => { var e; return !!t.preventiveTestPanels.length && (null === (e = t.settings) || void 0 === e ? void 0 : e.showPreventive) })), { translate: u } = (0, S.Z)(); return (t, d) => ((0, i.wg)(), (0, i.j4)((0, o.SU)(l.MH), { name: "", "is-loading": e.loading, type: "skeleton", "transition-type": "show", class: "sc-lab-tests__loader" }, { "loader-blocks": (0, i.w5)((() => [(0, i.WI)(t.$slots, "loader-blocks")])), default: (0, i.w5)((() => [e.noInternetAndData ? (0, i.WI)(t.$slots, "no-internet", { key: 0 }, (() => [(0, i.Wm)(Pe.Z, { key: "no-internet" })])) : ((0, i.wg)(), (0, i.iD)(i.HY, { key: 1 }, [(0, i.WI)(t.$slots, "heading", (0, s.vs)((0, i.F4)({ translate: (0, o.SU)(u) }))), (0, i.WI)(t.$slots, "recommended", (0, s.vs)((0, i.F4)({ showRecommendedLabTestPanel: r.value, showPreventiveLabTestPanel: c.value, translate: (0, o.SU)(u), openedRecommended: n.value, recommendedTestPanels: e.recommendedTestPanels })), (() => [r.value ? ((0, i.wg)(), (0, i.iD)("div", De, [c.value ? ((0, i.wg)(), (0, i.j4)((0, o.SU)(l.Hg), { key: 0, level: "4", class: "sc-lab-tests__subheading" }, { default: (0, i.w5)((() => [(0, i.Uk)((0, s.zw)((0, o.SU)(u)("results.labTests.recommended.subheading")), 1)])), _: 1 })) : (0, i.kq)("", !0), (0, i.Wm)((0, o.SU)(l.II), { class: "sc-lab-tests__text" }, { default: (0, i.w5)((() => [(0, i.Uk)((0, s.zw)((0, o.SU)(u)("results.labTests.recommended.text")), 1)])), _: 1 }), (0, i.WI)(t.$slots, "recommended-test", (0, s.vs)((0, i.F4)({ openedRecommended: n.value, recommendedTestPanels: e.recommendedTestPanels })), (() => [(0, i.Wm)(Ae, { modelValue: n.value, "onUpdate:modelValue": d[0] || (d[0] = e => n.value = e), "lab-test-panels": e.recommendedTestPanels, class: "sc-lab-tests__accordion" }, null, 8, ["modelValue", "lab-test-panels"])]))])) : (0, i.kq)("", !0)])), (0, i.WI)(t.$slots, "preventive", (0, s.vs)((0, i.F4)({ showPreventiveLabTestPanel: c.value, translate: (0, o.SU)(u), openedPreventive: a.value, preventiveTestPanels: e.preventiveTestPanels })), (() => [c.value ? ((0, i.wg)(), (0, i.iD)("div", Re, [(0, i.Wm)((0, o.SU)(l.Hg), { level: "4", class: "sc-lab-tests__subheading" }, { default: (0, i.w5)((() => [(0, i.Uk)((0, s.zw)((0, o.SU)(u)("results.labTests.preventive.subheading")), 1)])), _: 1 }), (0, i.Wm)((0, o.SU)(l.II), { class: "sc-lab-tests__text" }, { default: (0, i.w5)((() => [(0, i.Uk)((0, s.zw)((0, o.SU)(u)("results.labTests.preventive.text")), 1)])), _: 1 }), (0, i.WI)(t.$slots, "preventive-test", (0, s.vs)((0, i.F4)({ openedPreventive: a.value, preventiveTestPanels: e.preventiveTestPanels })), (() => [(0, i.Wm)(Ae, { modelValue: a.value, "onUpdate:modelValue": d[1] || (d[1] = e => a.value = e), "lab-test-panels": e.preventiveTestPanels, class: "sc-lab-tests__accordion" }, null, 8, ["modelValue", "lab-test-panels"])]))])) : (0, i.kq)("", !0)]))], 64))])), _: 3 }, 8, ["is-loading"])) } }, Oe = Ne, Le = Oe; var $e = n(41102); function qe({ onFetched: e }) { const t = (0, w.z)(), n = (0, i.Fl)((() => t.data)), s = (e, t, n) => { if (!e || !t) return []; const i = t[n]; return i ? i.map((t => (0, a.Z)((0, a.Z)({}, t), {}, { lab_tests: t.lab_tests.map((t => e.find((e => t.id === e.id)))).filter((e => void 0 !== e)) }))) : [] }, { data: o, loading: r, noInternetAndData: l } = (0, M.Z)((async () => { const [e, t] = await Promise.all([(0, $e.Q)(n.value), (0, $e.A)(n.value)]), a = s(e, t, "recommended"), i = s(e, t, "obligatory"); return { labTests: e, recommendedTestPanels: a, preventiveTestPanels: i } }), { onFetched: e }); return { recommendedTestPanels: (0, i.Fl)((() => { var e, t; return null !== (e = null === (t = o.value) || void 0 === t ? void 0 : t.recommendedTestPanels) && void 0 !== e ? e : [] })), preventiveTestPanels: (0, i.Fl)((() => { var e, t; return null !== (e = null === (t = o.value) || void 0 === t ? void 0 : t.preventiveTestPanels) && void 0 !== e ? e : [] })), loading: r, noInternetAndData: l } } const He = { __name: "ScLabTests", props: { settings: { type: Object, default: () => ({}) }, visible: { type: Boolean, default: !1 } }, emits: ["fetch"], setup(e, { emit: t }) { const n = e, a = (0, o.qj)(qe({ onFetched: e => t("fetch", e), visible: (0, i.Fl)((() => n.visible)) })); return (t, n) => ((0, i.wg)(), (0, i.j4)((0, o.SU)(l.bK), { id: "lab-tests", class: "sc-lab-tests" }, { default: (0, i.w5)((() => [(0, i.Wm)(Le, (0, i.dG)(a, { settings: e.settings }), (0, i.Nv)({ heading: (0, i.w5)((({ translate: e }) => [(0, i.WI)(t.$slots, "heading", (0, s.vs)((0, i.F4)({ translate: e })), (() => [(0, i.Wm)((0, o.SU)(l.Hg), { key: "heading", class: "sc-lab-tests__heading" }, { default: (0, i.w5)((() => [(0, i.Uk)((0, s.zw)(e("results.labTests.heading")), 1)])), _: 2 }, 1024)]))])), _: 2 }, [(0, i.Ko)(t.$slots, ((e, n) => ({ name: n, fn: (0, i.w5)((e => [(0, i.WI)(t.$slots, n, (0, s.vs)((0, i.F4)(e)))])) })))]), 1040, ["settings"])])), _: 3 })) } }, Ze = He, je = Ze, Me = { key: "notifications", class: "sc-summary__notifications" }, ze = { key: "buttons", class: "sc-summary__buttons" }, Be = { __name: "ScSummary", props: { consideredDiagnoses: { type: Number, default: 0 }, settings: { type: Object, default: () => ({}) }, noInternet: { type: Boolean, default: !1 } }, setup(e) { const t = e, n = (0, d.J)(), a = (0, b.V)(), r = (0, w.z)(), { translate: c } = (0, S.Z)(); function m() { n.openPanel({ type: "panel", id: "summary" }) } const v = (0, i.Fl)((() => 0 === a.summaryConcepts.size)), p = (0, i.Fl)((() => t.noInternet && v.value)), { pdfDownloadRequestStatus: g, summaryCtas: h } = de(), y = (0, i.Fl)((() => c("results.summary.duration.time", r.interviewDuration))); return (t, n) => ((0, i.wg)(), (0, i.j4)((0, o.SU)(l.bK), { id: "summary", class: "sc-summary" }, { default: (0, i.w5)((() => [(0, i.Wm)((0, o.SU)(l.MH), { name: "", "is-loading": v.value, type: "skeleton", class: "sc-summary__loader" }, { "loader-blocks": (0, i.w5)((() => [(0, i.WI)(t.$slots, "loader-blocks")])), default: (0, i.w5)((() => [p.value ? (0, i.WI)(t.$slots, "no-internet", { key: 0 }, (() => [(0, i.Wm)(Pe.Z, { key: "no-internet" })])) : ((0, i.wg)(), (0, i.iD)(i.HY, { key: 1 }, [(0, i.WI)(t.$slots, "header", (0, s.vs)((0, i.F4)({ translate: (0, o.SU)(c) })), (() => [(0, i.Wm)((0, o.SU)(l.Hg), { key: "heading", class: "sc-summary__heading" }, { default: (0, i.w5)((() => [(0, i.Uk)((0, s.zw)((0, o.SU)(c)("results.summary.heading")), 1)])), _: 1 })])), (0, i.WI)(t.$slots, "content", (0, s.vs)((0, i.F4)({ translate: (0, o.SU)(c), summaryHandler: m, consideredDiagnoses: e.consideredDiagnoses, interviewDuration: y.value })), (() => [(0, i.Wm)((0, o.SU)(l.SJ), { key: "list", class: "sc-summary__list" }, { default: (0, i.w5)((() => [(0, i.Wm)(_e.Z, { class: "sc-summary__list-item" }, { default: (0, i.w5)((() => [(0, i.WI)(t.$slots, "your-answers", (0, s.vs)((0, i.F4)({ label: (0, o.SU)(c)("results.summary.yourAnswers.label"), summaryHandler: m, buttonLabel: (0, o.SU)(c)("common.show") })), (() => [(0, i.Wm)((0, o.SU)(l.II), null, { default: (0, i.w5)((() => [(0, i.Uk)((0, s.zw)((0, o.SU)(c)("results.summary.yourAnswers.label")), 1)])), _: 1 }), (0, i.Wm)((0, o.SU)(l.wg), { id: "summary-show", class: "ui-button--text", onClick: m }, { default: (0, i.w5)((() => [(0, i.Uk)((0, s.zw)((0, o.SU)(c)("common.show")) + " ", 1), (0, i.Wm)((0, o.SU)(l.ax), { icon: "chevron-right", class: "ui-button__icon ui-button__icon--right" })])), _: 1 })]))])), _: 3 }), (0, i.Wm)(_e.Z, { class: "sc-summary__list-item" }, { default: (0, i.w5)((() => [(0, i.WI)(t.$slots, "considered-diagnoses", (0, s.vs)((0, i.F4)({ label: (0, o.SU)(c)("results.summary.consideredDiagnoses.label"), consideredDiagnoses: e.consideredDiagnoses })), (() => [(0, i.Wm)((0, o.SU)(l.II), null, { default: (0, i.w5)((() => [(0, i.Uk)((0, s.zw)((0, o.SU)(c)("results.summary.consideredDiagnoses.label")), 1)])), _: 1 }), (0, i.Wm)((0, o.SU)(l.II), null, { default: (0, i.w5)((() => [(0, i.Uk)((0, s.zw)(e.consideredDiagnoses), 1)])), _: 1 })]))])), _: 3 }), (0, i.Wm)(_e.Z, { class: "sc-summary__list-item" }, { default: (0, i.w5)((() => [(0, i.WI)(t.$slots, "duration", (0, s.vs)((0, i.F4)({ label: (0, o.SU)(c)("results.summary.duration.label"), interviewDuration: y.value })), (() => [(0, i.Wm)((0, o.SU)(l.II), null, { default: (0, i.w5)((() => [(0, i.Uk)((0, s.zw)((0, o.SU)(c)("results.summary.duration.label")), 1)])), _: 1 }), (0, i.Wm)((0, o.SU)(l.II), { id: "summary-duration" }, { default: (0, i.w5)((() => [(0, i.Uk)((0, s.zw)(y.value), 1)])), _: 1 })]))])), _: 3 })])), _: 3 })])), (0, i.WI)(t.$slots, "notifications", (0, s.vs)((0, i.F4)({ translate: (0, o.SU)(c), pdfDownloadRequestStatus: (0, o.SU)(g) })), (() => [(0, o.SU)(g) ? ((0, i.wg)(), (0, i.iD)("div", Me, [(0, i.WI)(t.$slots, "pdf-download-notification", (0, s.vs)((0, i.F4)({ translate: (0, o.SU)(c), pdfDownloadRequestStatus: (0, o.SU)(g) })), (() => [(0, o.SU)(g) ? ((0, i.wg)(), (0, i.j4)(u.Z, { key: 0, "request-status": (0, o.SU)(g), "translation-prefix": "results.summary.notifications.pdfDownload", class: "sc-summary__notification" }, null, 8, ["request-status"])) : (0, i.kq)("", !0)]))])) : (0, i.kq)("", !0)])), (0, i.WI)(t.$slots, "buttons", (0, s.vs)((0, i.F4)({ summaryCtas: (0, o.SU)(h) })), (() => [(0, i._)("div", ze, [(0, i.Wm)(f, { items: (0, o.SU)(h), class: "sc-summary__button ui-button--small", placement: "summary" }, null, 8, ["items"])])]))], 64))])), _: 3 }, 8, ["is-loading"])])), _: 3 })) } }, Ve = Be, Ye = Ve; var Ge = n(19408); n(71541); const Qe = { class: "sc-radio-group" }, Je = { class: "visual-hidden" }, Ke = (0, i.aZ)({ __name: "ScRadioGroup", props: { answers: {}, modelValue: {}, legend: {}, radioAttrs: {} }, emits: ["update:modelValue"], setup(e, { emit: t }) { const n = e, a = (0, o.iH)(n.modelValue); return (e, n) => ((0, i.wg)(), (0, i.iD)("fieldset", Qe, [(0, i._)("legend", Je, (0, s.zw)(e.legend), 1), ((0, i.wg)(!0), (0, i.iD)(i.HY, null, (0, i.Ko)(e.answers, (r => ((0, i.wg)(), (0, i.j4)((0, o.SU)(l.UN), (0, i.dG)({ key: r.value, modelValue: a.value, "onUpdate:modelValue": n[0] || (n[0] = e => a.value = e), value: r.value, class: "sc-radio-group__radio" }, e.radioAttrs, { onInput: e => t("update:modelValue", r.value) }), { default: (0, i.w5)((() => [(0, i.Uk)((0, s.zw)(r.label), 1)])), _: 2 }, 1040, ["modelValue", "value", "onInput"])))), 128))])) } }), Xe = Ke, et = Xe; var tt; n(81289); function nt(e, t) { const n = (0, a.Z)({}, e), i = Object.keys(n); return i.reduce(((e, a) => { const i = n[a], s = "object" === typeof i && null !== i && !Array.isArray(i); if (s && (e[a] = nt(i, t)), Array.isArray(i)) { const n = i; e[a] = n.map((e => nt(e, t))) } else e[a] = t(i); return e }), {}) } (function (e) { e["stars"] = "stars", e["text"] = "text", e["radio"] = "radio" })(tt || (tt = {})); class at { constructor(e) { if (this.settings = void 0, ![`${tt.text}`, `${tt.stars}`, `${tt.radio}`].includes(e.type)) { const e = "Incorrect field type specified in feedback schema flag"; se.u3.error(e), se.CA.captureException(e) } const t = this.getDefault(e), n = nt(this.getProps(t), this.translateI18nStrings), a = nt(this.getMetadata(t), this.translateI18nStrings); this.settings = { component: this.getComponent(e.type), props: (0, o.qj)(n), metadata: (0, o.qj)(a) } } translateI18nStrings(e, t) { const { translate: n } = (0, S.Z)(); return "string" !== typeof e ? e : t ? n(e, t) : n(e) } getComponent(e) { return e === tt.stars ? l.hG : e === tt.text ? l.MP : e === tt.radio ? et : l.MP } getMetadata(e) { var t; return { name: e.name, optional: !!e.optional, errorString: null !== (t = e.error) && void 0 !== t ? t : null, errorMessage: null, message: !!e.question && e.question, hint: e.optional ? "common.optional" : null, requireIfLowRating: e.requireIfLowRating, errorClass: null, type: e.type } } getProps(e) { const t = { value: null }; return e.type === tt.text ? (0, a.Z)((0, a.Z)({}, t), {}, { placeholder: e.placeholder }) : e.type === tt.stars ? (0, a.Z)((0, a.Z)({}, t), {}, { max: e.max, legend: e.legend, translation: e.translation }) : e.type === tt.radio ? (0, a.Z)((0, a.Z)({}, t), {}, { answers: e.answers, legend: e.legend }) : t } getDefault(e) { return e.type === tt.text ? (e.error || Object.assign(e, { error: "common.required" }), e.question || Object.assign(e, { question: "results.feedback.formField.label" }), e.placeholder || Object.assign(e, { placeholder: "results.feedback.formField.placeholder" }), e.requireIfLowRating || Object.assign(e, { requireIfLowRating: !1 })) : e.type === tt.stars ? (e.error || Object.assign(e, { error: "results.feedback.ratingAlert" }), e.question || Object.assign(e, { question: "results.feedback.howHelpfulWasCheckup" }), e.translation || Object.assign(e, { translation: { stars: e => this.translateI18nStrings("results.feedback.starLabel", e) } }), e.max || Object.assign(e, { max: 5 }), e.legend || Object.assign(e, { legend: e.question })) : e.type === tt.radio && (e.error || Object.assign(e, { error: "common.required" }), e.question || Object.assign(e, { question: "results.feedback.formField.label" }), e.answers || Object.assign(e, { answers: [] }), e.legend || Object.assign(e, { legend: e.question })), e } } const it = e => { var t, n; const { translate: a } = (0, S.Z)(), s = (0, d.J)(), l = (0, b.V)(), c = null !== (t = null === (n = l.settings) || void 0 === n ? void 0 : n.feedback) && void 0 !== t ? t : e, { exporter: u, schema: m } = c, v = (0, o.iH)(""), p = (0, o.iH)(!1), g = m.map((e => new at(e))); (0, i.YP)((() => s.noInternet), (e => { e || "noInternet" !== v.value || (v.value = "connectionRestored") })); const h = (e, t) => { var n; const { optional: a } = e.settings.metadata, { value: i } = null !== (n = e.settings.props) && void 0 !== n ? n : t, s = typeof i; if (a) return !1; e.settings.metadata.errorClass = null, e.settings.metadata.errorMessage = null; const o = null == i, r = "number" === s && Number.isNaN(i), l = "string" === s && 0 === String(i).trim().length; var c; return !!(o || r || l) && (e.settings.metadata.errorMessage = null !== (c = e.settings.metadata.errorString) && void 0 !== c ? c : null, e.settings.metadata.type === tt.text ? e.settings.metadata.errorClass = "ui-textarea--has-error" : e.settings.metadata.type === tt.radio && (e.settings.metadata.errorClass = "ui-radio--has-error"), !0) }; { const e = g.find((e => "rating" === e.settings.metadata.name)), t = g.filter((e => e.settings.metadata.requireIfLowRating)); if (e) { const n = (0, i.Fl)((() => Number(e.settings.props.value))); t.forEach((e => { (0, i.YP)(n, (t => { t <= 3 || null == t ? (e.settings.metadata.hint = a("common.required"), e.settings.metadata.optional = !1, p.value && h(e)) : (e.settings.metadata.hint = a("common.optional"), e.settings.metadata.optional = !0, e.settings.metadata.errorMessage = null, e.settings.metadata.errorClass = null) })) })) } } const f = () => { const e = g.map(h).some((e => e)); return e && (0, i.Y3)((() => { const e = document.querySelector("[data-feedback-field-invalid=true]"), t = null === e || void 0 === e ? void 0 : e.querySelector("input, textarea"); null === t || void 0 === t || t.focus() })), e }, y = () => { var e, t, n; const a = null !== (e = g.find((e => "comment" === e.settings.metadata.name))) && void 0 !== e ? e : null, i = null !== (t = g.find((e => "rating" === e.settings.metadata.name))) && void 0 !== t ? t : null, s = g.filter((e => !["rating", "comment"].includes(e.settings.metadata.name))), o = { event_type: "confirm", event_object: "user_feedback", event_data: { type: "rating", data: i ? [null === i || void 0 === i ? void 0 : i.settings.props.value] : [], comment: null !== (n = null === a || void 0 === a ? void 0 : a.settings.props.value) && void 0 !== n ? n : "", custom_feedback: s.map((e => ({ type: e.settings.metadata.name, data: e.settings.props.value }))) } }; try { r.c.trackEvent("Feedback", { event_details: o }), u && (0, Y.QC)("feedback-submitted", o), v.value = "success" } catch (l) { v.value = "unknown" } }, _ = () => { if (p.value = !0, s.noInternet) v.value = "noInternet", f(); else { const e = f(); e || y() } }; return { requestStatus: v, fields: g, handleSubmit: _, validateField: h } }, st = ["id"], ot = (0, i.aZ)({ __name: "ScFeedback", props: { schema: {} }, setup(e) { var t; const n = e, r = (0, i.Fl)((() => (0, i.l1)().class)), c = (0, i.Fl)((() => { var e; return null === (e = r.value) || void 0 === e ? void 0 : e.includes("sc-feedback--classic") })), d = { exporter: !0, schema: [{ name: "rating", type: tt.stars }, { name: "comment", type: tt.text, error: "results.feedback.formField.errorMessage", optional: !0, requireIfLowRating: !0 }] }, { translate: m } = (0, S.Z)(), { fields: v, requestStatus: p, handleSubmit: g, validateField: h } = it(null !== (t = n.schema) && void 0 !== t ? t : d), f = e => ({ "data-test-id": `${ie.FEEDBACK_FIELD_INPUT}-${e.settings.metadata.name}`, "aria-describedby": `feedback-field-error-${e.settings.metadata.name}`, "aria-invalid": !!e.settings.metadata.errorMessage }); return (e, t) => ((0, i.wg)(), (0, i.j4)((0, o.SU)(l.bK), { id: "feedback", class: "sc-feedback" }, { default: (0, i.w5)((() => [(0, i.Wm)((0, o.SU)(l.Hg), { level: "4", tag: "h2", class: "sc-feedback__heading" }, { default: (0, i.w5)((() => [(0, i.Uk)((0, s.zw)((0, o.SU)(m)("results.feedback.giveFeedback")), 1)])), _: 1 }), "success" !== (0, o.SU)(p) ? ((0, i.wg)(), (0, i.iD)("form", { key: 0, class: "sc-feedback__form", onSubmit: t[0] || (t[0] = (0, Ge.iM)(((...e) => (0, o.SU)(g) && (0, o.SU)(g)(...e)), ["prevent"])) }, [((0, i.wg)(!0), (0, i.iD)(i.HY, null, (0, i.Ko)((0, o.SU)(v), ((e, t) => ((0, i.wg)(), (0, i.j4)((0, o.SU)(l.tb), (0, i.dG)({ key: t, "data-test-id": `${(0, o.SU)(ie).FEEDBACK_FIELD}-${e.settings.metadata.name}`, class: "sc-feedback__field" }, e.settings.metadata, { "data-feedback-field-invalid": !!e.settings.metadata.errorMessage }), { default: (0, i.w5)((({ id: t }) => [((0, i.wg)(), (0, i.j4)((0, i.LL)(e.settings.component), (0, i.dG)({ modelValue: e.settings.props.value, "onUpdate:modelValue": t => e.settings.props.value = t, class: [e.settings.metadata.errorClass] }, e.settings.props, { "radio-attrs": (0, a.Z)((0, a.Z)({}, f(e)), {}, { name: t }), "radio-option-attrs": { "input-attrs": (0, a.Z)((0, a.Z)({}, f(e)), {}, { name: t }) }, "textarea-attrs": (0, a.Z)((0, a.Z)({}, f(e)), {}, { id: t }), "onUpdate:modelValue": t => (0, o.SU)(h)(e, t) }), null, 16, ["modelValue", "onUpdate:modelValue", "class", "radio-attrs", "radio-option-attrs", "textarea-attrs"]))])), alert: (0, i.w5)((({ errorMessage: t, alertAttrs: n }) => [(0, i.wy)((0, i.Wm)((0, o.SU)(l.n4), (0, i.dG)({ role: "alert" }, n, { class: "ui-form-field__alert" }), { default: (0, i.w5)((() => [(0, i._)("span", { id: `feedback-field-error-${e.settings.metadata.name}` }, (0, s.zw)(t), 9, st)])), _: 2 }, 1040), [[Ge.F8, t]])])), _: 2 }, 1040, ["data-test-id", "data-feedback-field-invalid"])))), 128)), (0, i.Wm)(u.Z, { class: "sc-feedback__notification sc-feedback__notification--status", "request-status": (0, o.SU)(p), "translation-prefix": "results.feedback.notifications" }, null, 8, ["request-status"]), (0, i.Wm)((0, o.SU)(l.wg), { class: (0, s.C_)(c.value ? "ui-button--small" : "ui-button--outlined"), type: "submit" }, { default: (0, i.w5)((() => [(0, i.Uk)((0, s.zw)((0, o.SU)(m)("results.feedback.send")), 1)])), _: 1 }, 8, ["class"])], 32)) : ((0, i.wg)(), (0, i.j4)((0, o.SU)(l.mE), { key: 1, id: "feedback-notification", class: "sc-feedback__notification sc-feedback__notification--success", type: "success" }, { default: (0, i.w5)((() => [(0, i.Uk)((0, s.zw)((0, o.SU)(m)("results.feedback.thankYou")), 1)])), _: 1 }))])), _: 1 })) } }); var rt = n(56490); const lt = (0, rt.Z)(ot, [["__scopeId", "data-v-634140ec"]]), ct = lt; var ut = n(70059), dt = n(46475), mt = n(95535); const vt = { class: "sc-plans-survey__choices" }, pt = { key: 0, class: "sc-plans-survey__contact" }, gt = { class: "sc-plans-survey__contact-choices" }, ht = { key: 0 }, ft = (0, i.aZ)({ __name: "ScPlansSurvey", setup(e) { const { translate: t } = (0, S.Z)(), { handleInfoButtonClick: n } = (0, dt.Z)(), { plansSurveyChoices: a, contactFormChoices: c } = (0, mt.Z)(), u = (0, o.iH)(!1), d = (0, o.iH)(), m = (0, o.iH)(), v = (e, t) => { r.c.trackEvent("Plans Survey", { event_details: { event_type: "confirm", event_object: "plan_survey", event_data: { type: t, data: [e] } } }) }, p = (0, i.Fl)((() => { var e; return !0 === (null === (e = d.value) || void 0 === e ? void 0 : e.shouldShowContactChoice) })), g = (0, i.Fl)((() => d.value && !p.value || m.value && p.value)), h = e => { var t, n; d.value = e, p.value || (m.value = void 0), v(null !== (t = null === (n = d.value) || void 0 === n ? void 0 : n.id) && void 0 !== t ? t : "", "plan_survey_kind_of_care") }, f = e => { var t, n; m.value = e, v(null !== (t = null === (n = m.value) || void 0 === n ? void 0 : n.id) && void 0 !== t ? t : "", "plan_survey_contact_form") }, y = () => { var e, t; u.value = !0, v(null !== (e = null === (t = d.value) || void 0 === t ? void 0 : t.id) && void 0 !== e ? e : "", "plan_survey_kind_of_care") }, _ = (0, o.iH)(), w = e => { _.value = e }, b = (0, o.iH)(), k = e => { b.value = e }, U = (0, o.iH)(!1), x = async () => { var e; n("why_plan"), U.value = !0, await (0, i.Y3)(), null === (e = _.value) || void 0 === e || e.$el.focus() }, I = async () => { var e; U.value = !1, await (0, i.Y3)(), null === (e = b.value) || void 0 === e || e.$el.focus() }; return (e, n) => ((0, i.wg)(), (0, i.j4)((0, o.SU)(l.bK), { id: "plans-survey", class: "sc-plans-survey" }, { default: (0, i.w5)((() => [(0, i.WI)(e.$slots, "subtitle", (0, s.vs)((0, i.F4)({ translate: (0, o.SU)(t) })), (() => [(0, i.Wm)((0, o.SU)(l.Hg), { level: "4", tag: "h3", class: "sc-plans-survey__subtitle" }, { default: (0, i.w5)((() => [(0, i.Uk)((0, s.zw)((0, o.SU)(t)("results.plansSurvey.subtitle")), 1)])), _: 1 })])), (0, i.WI)(e.$slots, "title", (0, s.vs)((0, i.F4)({ translate: (0, o.SU)(t) })), (() => [(0, i.Wm)((0, o.SU)(l.Hg), { level: "3", tag: "h2", class: "sc-plans-survey__title" }, { default: (0, i.w5)((() => [(0, i.Uk)((0, s.zw)((0, o.SU)(t)("results.plansSurvey.title")), 1)])), _: 1 })])), (0, i.WI)(e.$slots, "choices", (0, s.vs)((0, i.F4)({ sent: u.value, choices: (0, o.SU)(a), handleChoiceClick: h })), (() => [u.value ? (0, i.kq)("", !0) : ((0, i.wg)(), (0, i.iD)(i.HY, { key: 0 }, [(0, i._)("div", vt, [((0, i.wg)(!0), (0, i.iD)(i.HY, null, (0, i.Ko)((0, o.SU)(a), (t => (0, i.WI)(e.$slots, "choice", (0, s.vs)((0, i.dG)({ key: t.id }, { choice: t, handleChoiceClick: h })), (() => { var e; return [(0, i.Wm)((0, o.SU)(l.wg), { class: (0, s.C_)(["sc-plans-survey__choice ui-button--outlined ui-button--small", { "sc-plans-survey__choice--is-checked": (null === (e = d.value) || void 0 === e ? void 0 : e.id) === t.id }]), "data-test-id": t.id, onClick: e => h(t) }, { default: (0, i.w5)((() => [(0, i.Uk)((0, s.zw)(t.label), 1)])), _: 2 }, 1032, ["class", "data-test-id", "onClick"])] })))), 128))]), p.value ? ((0, i.wg)(), (0, i.iD)("div", pt, [(0, i.Wm)((0, o.SU)(l.Hg), { level: "3" }, { default: (0, i.w5)((() => [(0, i.Uk)((0, s.zw)((0, o.SU)(t)("results.plansSurvey.contactChoicesTitle")), 1)])), _: 1 }), (0, i._)("div", gt, [((0, i.wg)(!0), (0, i.iD)(i.HY, null, (0, i.Ko)((0, o.SU)(c), (e => { var t; return (0, i.wg)(), (0, i.j4)((0, o.SU)(l.wg), { key: e.id, class: (0, s.C_)(["sc-plans-survey__choice ui-button--outlined ui-button--small", { "sc-plans-survey__choice--is-checked": (null === (t = m.value) || void 0 === t ? void 0 : t.id) === e.id }]), "data-test-id": e.id, onClick: t => f(e) }, { default: (0, i.w5)((() => [(0, i.Uk)((0, s.zw)(e.label), 1)])), _: 2 }, 1032, ["class", "data-test-id", "onClick"]) })), 128))])])) : (0, i.kq)("", !0)], 64))])), (0, i.WI)(e.$slots, "thank-you", (0, s.vs)((0, i.F4)({ sent: u.value, translate: (0, o.SU)(t) })), (() => [u.value ? ((0, i.wg)(), (0, i.j4)((0, o.SU)(l.mE), { key: 0, class: "sc-plans-survey__thank-you", type: "success" }, { default: (0, i.w5)((() => [(0, i.Uk)((0, s.zw)((0, o.SU)(t)("results.plansSurvey.thankYou")), 1)])), _: 1 })) : (0, i.kq)("", !0)])), (0, i.WI)(e.$slots, "why", (0, s.vs)((0, i.F4)({ sent: u.value, whyExplanationVisible: U.value, handleWhyButtonClick: x, setWhyButtonRef: k, translate: (0, o.SU)(t) })), (() => [u.value || U.value ? (0, i.kq)("", !0) : ((0, i.wg)(), (0, i.j4)((0, o.SU)(l.wg), { key: 0, ref: k, class: "sc-plans-survey__why-button ui-button--text ui-button--small", onClick: x }, { default: (0, i.w5)((() => [(0, i.Wm)((0, o.SU)(l.ax), { class: "ui-button__icon", icon: "info" }), (0, i.Uk)(" " + (0, s.zw)((0, o.SU)(t)("intelligentInterview.why.title")), 1)])), _: 1 }))])), (0, i.WI)(e.$slots, "why-explanation", (0, s.vs)((0, i.F4)({ sent: u.value, whyExplanationVisible: U.value, handleCloseWhyExplanation: I, setWhyCloseButtonRef: w, translate: (0, o.SU)(t) })), (() => [!u.value && U.value ? ((0, i.wg)(), (0, i.j4)((0, o.SU)(l.mE), { key: 0, class: "sc-plans-survey__why", type: "info" }, { default: (0, i.w5)((() => [(0, i.Uk)((0, s.zw)((0, o.SU)(t)("intentSurvey.explanation")) + " ", 1), (0, i.Wm)((0, o.SU)(l.wg), { ref: w, class: "sc-plans-survey__why-close-button ui-button--text ui-button--small", "aria-label": (0, o.SU)(t)("common.close"), onClick: I }, { default: (0, i.w5)((() => [(0, i.Wm)((0, o.SU)(l.ax), { icon: "clear" })])), _: 1 }, 8, ["aria-label"])])), _: 1 })) : (0, i.kq)("", !0)])), (0, i.WI)(e.$slots, "submit", (0, s.vs)((0, i.F4)({ isSubmitButtonAvailable: g.value, sent: u.value, handleSubmitClick: y })), (() => [g.value && !u.value ? ((0, i.wg)(), (0, i.iD)("div", ht, [(0, i.Wm)((0, o.SU)(l.wg), { class: "sc-plans-survey__submit ui-button--small", "data-test-id": (0, o.SU)(ie).PLANS_SURVEY_SUBMIT_BUTTON, onClick: y }, { default: (0, i.w5)((() => [(0, i.Uk)((0, s.zw)((0, o.SU)(t)("results.plansSurvey.submit")), 1)])), _: 1 }, 8, ["data-test-id"])])) : (0, i.kq)("", !0)]))])), _: 3 })) } }), yt = ft, _t = yt; function wt(e) { const t = e.map((e => JSON.stringify(e))); return Array.from(new Set(t)).map((e => JSON.parse(e))) } const bt = { class: "results" }, St = { class: "results__wrapper" }, kt = { __name: "ScResultsTemplateBase", props: { isLoading: { type: Boolean, default: !1 }, noInternet: { type: Boolean, default: !1 }, showResults: { type: Boolean, default: !1 }, resultsSettings: { type: Object, default: () => ({}) }, interview: { type: Object, default: () => ({}) }, consideredDiagnoses: { type: Number, default: 0 }, labTests: { type: Object, default: () => ({}) } }, setup(e) { const t = e, n = J(), { translate: c } = (0, S.Z)(), u = (0, w.z)(), d = (0, i.Fl)((() => { var e; return null === (e = t.resultsSettings) || void 0 === e ? void 0 : e.triage })), m = (0, i.Fl)((() => { var e; return null === (e = t.resultsSettings) || void 0 === e ? void 0 : e.conditions })), v = (0, i.Fl)((() => { var e; return null === (e = t.resultsSettings) || void 0 === e ? void 0 : e.answers })), p = (0, i.Fl)((() => { var e; return null === (e = t.resultsSettings) || void 0 === e ? void 0 : e.summary })), g = (0, i.Fl)((() => { var e; return null === (e = t.resultsSettings) || void 0 === e ? void 0 : e.plansSurvey })), h = (0, i.Fl)((() => { var e; return null === (e = t.resultsSettings) || void 0 === e ? void 0 : e.labTests })), f = (0, i.Fl)((() => { var e; return null === (e = t.resultsSettings) || void 0 === e ? void 0 : e.feedback })), y = (0, i.Fl)((() => { var e; return null === (e = t.resultsSettings) || void 0 === e ? void 0 : e.disclaimer })), { triageCtas: _, conditionsCtas: b, summaryCtas: k, rankingCtas: U } = de(), { plansSurveyChoices: x, contactFormChoices: I } = (0, mt.Z)(), C = (0, i.Fl)((() => { var e, n; return (null === (e = t.labTests) || void 0 === e || null === (n = e.recommendedTestPanels) || void 0 === n ? void 0 : n.length) > 0 })), F = (0, i.Fl)((() => { var e, n, a; return (null === (e = t.labTests) || void 0 === e || null === (n = e.preventiveTestPanels) || void 0 === n ? void 0 : n.length) > 0 && (null === (a = h.value) || void 0 === a ? void 0 : a.showPreventive) })), E = (0, i.Fl)((() => C.value || F.value)); return (0, i.YP)((() => t.isLoading), (e => { var i, s, o, l, c; if (e || !t.showResults) return; const h = x.value.map((e => ({ id: e.id, contact_channel: e.shouldShowContactChoice ? [I.value.map((({ id: e }) => e))] : [] }))); r.c.trackEvent("Page loaded", { event_details: { event_type: "loaded", event_object: "page", event_data: { type: "", data: [], triage_level: u.triageLevel, card_present: { triage: !(null !== (i = d.value) && void 0 !== i && i.hide), conditions: !(null !== (s = m.value) && void 0 !== s && s.hide), intent_survey: !(null !== (o = g.value) && void 0 !== o && o.hide), lab_tests: E.value, answers: !(null !== (l = v.value) && void 0 !== l && l.hide), summary: !(null !== (c = p.value) && void 0 !== c && c.hide) }, cta_present: wt([..._.value.map((e => e.analyticsParams)), ...U.value.map((e => e.analyticsParams)), ...b.value.map((e => e.analyticsParams)), ...k.value.map((e => e.analyticsParams)).map((e => "download_my_answers_button" === e.event_object ? (0, a.Z)((0, a.Z)({}, e), {}, { languages: [...n.locales.value] }) : e))].filter((e => void 0 !== e))), plan_survey_present: h } } }) })), (t, n) => ((0, i.wg)(), (0, i.iD)("div", bt, [(0, i.Wm)((0, o.SU)(l.MH), { name: "", "is-loading": e.isLoading || !e.showResults, tag: (0, o.SU)(l.bK), class: "results__loader", "eager-load-component": !0, "transition-type": "show", "loader-attrs": { label: (0, o.SU)(c)("results.loader") } }, { default: (0, i.w5)((() => [(0, i._)("div", St, [(0, i.WI)(t.$slots, "default", (0, s.vs)((0, i.F4)({ triageSettings: d.value, conditionsSettings: m.value, plansSurveySettings: g.value, labTestsSettings: h.value, showLabTests: E.value, answersSettings: v.value, summarySettings: p.value, consideredDiagnoses: e.consideredDiagnoses, noInternet: e.noInternet, feedbackSettings: f.value, disclaimerSettings: y.value })))])])), _: 3 }, 8, ["is-loading", "tag", "loader-attrs"])])) } }, Ut = kt, xt = Ut, It = { __name: "ScResultsTemplateClassic", setup(e) { return (e, t) => ((0, i.wg)(), (0, i.j4)(xt, null, { default: (0, i.w5)((({ triageSettings: t, conditionsSettings: n, plansSurveySettings: a, labTestsSettings: o, showLabTests: r, summarySettings: l, consideredDiagnoses: c, noInternet: u, feedbackSettings: d, disclaimerSettings: m }) => [(0, i.WI)(e.$slots, "triage-card", (0, s.vs)((0, i.F4)({ triageSettings: t })), (() => [null !== t && void 0 !== t && t.hide ? (0, i.kq)("", !0) : ((0, i.wg)(), (0, i.j4)(fe, { key: "triage-card", class: "results__card results__card--triage", settings: t }, null, 8, ["settings"]))])), (0, i.WI)(e.$slots, "possible-conditions", (0, s.vs)((0, i.F4)({ conditionsSettings: n })), (() => [null !== n && void 0 !== n && n.hide ? (0, i.kq)("", !0) : ((0, i.wg)(), (0, i.j4)(Ee, { key: "conditions-card", class: "results__card", settings: n }, null, 8, ["settings"]))])), (0, i.WI)(e.$slots, "plans-survey", {}, (() => [null !== a && void 0 !== a && a.hide ? (0, i.kq)("", !0) : ((0, i.wg)(), (0, i.j4)(_t, { key: "plans-survey-card", class: "results__card" }))])), (0, i.WI)(e.$slots, "lab-tests", (0, s.vs)((0, i.F4)({ labTestsSettings: o, showLabTests: r })), (() => [r ? ((0, i.wg)(), (0, i.j4)(je, { key: "lab-tests-card", settings: o, class: "results__card" }, null, 8, ["settings"])) : (0, i.kq)("", !0)])), (0, i.WI)(e.$slots, "summary", (0, s.vs)((0, i.F4)({ summarySettings: l, consideredDiagnoses: c, noInternet: u })), (() => [null !== l && void 0 !== l && l.hide ? (0, i.kq)("", !0) : ((0, i.wg)(), (0, i.j4)(Ye, { key: "summary-card", "considered-diagnoses": c, settings: l, class: "results__card", "no-internet": u }, null, 8, ["considered-diagnoses", "settings", "no-internet"]))])), (0, i.WI)(e.$slots, "feedback", (0, s.vs)((0, i.F4)({ feedbackSettings: d, noInternet: u })), (() => [null !== d && void 0 !== d && d.hide ? (0, i.kq)("", !0) : ((0, i.wg)(), (0, i.j4)(ct, { key: "feedback-card", class: "results__card sc-feedback--classic" }))])), (0, i.WI)(e.$slots, "disclaimer", (0, s.vs)((0, i.F4)({ disclaimerSettings: m })), (() => [null !== m && void 0 !== m && m.hide ? (0, i.kq)("", !0) : ((0, i.wg)(), (0, i.j4)(ut.Z, { key: "disclaimer-card", class: "results__card" }))]))])), _: 3 })) } }, Ct = It, Ft = Ct, Et = { key: 0, class: "sc-triage-card-modern__section sc-triage-card-modern__section--evidence" }, Pt = { key: 0, class: "sc-triage-card-modern__recommendations sc-triage-card-modern__section" }, Tt = { key: 0, class: "sc-triage-card-modern__recommendation" }, Wt = { key: 1, class: "sc-triage-card-modern__recommendation-splitter" }, At = { key: 2, class: "sc-triage-card-modern__recommendation" }, Dt = { key: 0, class: "sc-triage-card-modern__ctas" }, Rt = { __name: "ScTriageCardModern", props: { settings: { type: Object, default: () => ({}) } }, setup(e) { const t = e, n = (0, w.z)(), c = (0, d.J)(), { translate: u, title: m, description: v, seriousSymptoms: p, hasSeriousEvidence: g, hasRecommendSpecialist: h, hasRecommendSpecialistChannel: y, recommendSpecialistName: _, recommendSpecialistChannel: b } = me(t.settings, !0), { triageCtas: S } = de(), k = (0, i.Fl)((() => ["emergency", "emergency_ambulance"].includes(n.triageLevel))), U = (0, i.Fl)((() => k.value && g.value)); async function x() { await c.openPanel({ type: "panel", id: "recommendation-explanation" }), r.c.trackEvent("Recommendation Explanation Open", { event_details: { event_type: "click", event_object: "info_button", event_data: { type: "", data: [], category: `why_${n.triageLevel}` } } }) } const I = (0, i.Fl)((() => ({ tag: "h1", level: "1", tabindex: -1, ref: (0, i.f3)(ce.X6) }))), C = (0, i.Fl)((() => ({ icon: n.triageLevel.replace(/_/g, "-") }))); return (e, t) => (0, o.SU)(n).triage ? ((0, i.wg)(), (0, i.j4)((0, o.SU)(l.RP), { key: 0, id: "triage", class: "sc-triage-card-modern ui-card--modern", type: (0, o.SU)(n).triageLevel, "icon-triage-attrs": C.value, title: (0, o.SU)(m), description: (0, o.SU)(v) }, (0, i.Nv)({ title: (0, i.w5)((() => [(0, i.WI)(e.$slots, "title", (0, s.vs)((0, i.F4)({ title: (0, o.SU)(m) })), (() => [(0, o.SU)(m) ? ((0, i.wg)(), (0, i.j4)((0, o.SU)(l.Hg), (0, i.dG)({ key: 0 }, I.value, { class: "ui-card__title", "data-test-id": (0, o.SU)(ie).SCREEN_HEADING }), { default: (0, i.w5)((() => [(0, i.Uk)((0, s.zw)((0, o.SU)(m)), 1)])), _: 1 }, 16, ["data-test-id"])) : (0, i.kq)("", !0)]))])), details: (0, i.w5)((t => [(0, i.WI)(e.$slots, "details", (0, s.vs)((0, i.F4)((0, a.Z)((0, a.Z)({}, t), {}, { translate: (0, o.SU)(u), showSeriousEvidence: U.value, seriousSymptoms: (0, o.SU)(p), hasRecommendSpecialist: (0, o.SU)(h), recommendSpecialistName: (0, o.SU)(_), recommendSpecialistChannel: (0, o.SU)(b), handleRecommendationExplanationButton: x, triageCtas: (0, o.SU)(S) }))), (() => [(0, i.WI)(e.$slots, "explanation", {}, (() => [k.value ? (0, i.kq)("", !0) : ((0, i.wg)(), (0, i.j4)((0, o.SU)(l.wg), { key: 0, class: "sc-triage-card-modern__explanation ui-button--text ui-button--small", onClick: x }, { default: (0, i.w5)((() => [(0, i.Wm)((0, o.SU)(l.ax), { icon: "info", class: "ui-button__icon" }), (0, i.Uk)(" " + (0, s.zw)((0, o.SU)(u)("results.recommendationExplanation.title")), 1)])), _: 1 }))])), (0, i.WI)(e.$slots, "serious-evidence", (0, s.vs)((0, i.F4)({ translate: (0, o.SU)(u), showSeriousEvidence: U.value, seriousSymptoms: (0, o.SU)(p) })), (() => [U.value ? ((0, i.wg)(), (0, i.iD)("div", Et, [(0, i.Wm)((0, o.SU)(l.Hg), { level: "4", tag: "h2", class: "sc-triage-card-modern__heading" }, { default: (0, i.w5)((() => [(0, i.Uk)((0, s.zw)((0, o.SU)(u)("results.triageCardModern.seriousEvidence.heading")), 1)])), _: 1 }), (0, i.Wm)((0, o.SU)(l.F0), { class: "sc-triage-card-modern__symptoms", items: (0, o.SU)(p) }, null, 8, ["items"])])) : (0, i.kq)("", !0)])), (0, i.WI)(e.$slots, "recommendation", (0, s.vs)((0, i.F4)({ translate: (0, o.SU)(u), hasRecommendSpecialist: (0, o.SU)(h), hasRecommendSpecialistChannel: (0, o.SU)(y), recommendSpecialistName: (0, o.SU)(_), recommendSpecialistChannel: (0, o.SU)(b) })), (() => [(0, o.SU)(h) || (0, o.SU)(y) ? ((0, i.wg)(), (0, i.iD)("div", Pt, [(0, o.SU)(h) ? ((0, i.wg)(), (0, i.iD)("div", Tt, [(0, i.Wm)((0, o.SU)(l.Hg), { level: "4", tag: "h2", class: "sc-triage-card-modern__heading sc-triage-card-modern__heading--recommended" }, { default: (0, i.w5)((() => [(0, i.Uk)((0, s.zw)((0, o.SU)(u)("results.triageCardModern.recommendSpecialist.title")), 1)])), _: 1 }), (0, i.Wm)((0, o.SU)(l.II), null, { default: (0, i.w5)((() => [(0, i.Uk)((0, s.zw)((0, o.SU)(_)), 1)])), _: 1 })])) : (0, i.kq)("", !0), (0, o.SU)(h) && (0, o.SU)(y) ? ((0, i.wg)(), (0, i.iD)("div", Wt)) : (0, i.kq)("", !0), (0, o.SU)(y) ? ((0, i.wg)(), (0, i.iD)("div", At, [(0, i.Wm)((0, o.SU)(l.Hg), { level: "4", tag: "h2", class: "sc-triage-card-modern__heading sc-triage-card-modern__heading--recommended" }, { default: (0, i.w5)((() => [(0, i.Uk)((0, s.zw)((0, o.SU)(u)("results.triageCardModern.recommendSpecialist.suggestedConsultationForm")), 1)])), _: 1 }), (0, i.Wm)((0, o.SU)(l.II), null, { default: (0, i.w5)((() => [(0, i.Uk)((0, s.zw)((0, o.SU)(b)), 1)])), _: 1 })])) : (0, i.kq)("", !0)])) : (0, i.kq)("", !0)])), (0, i.WI)(e.$slots, "ctas", (0, s.vs)((0, i.F4)({ triageCtas: (0, o.SU)(S) })), (() => [(0, o.SU)(S).length > 0 ? ((0, i.wg)(), (0, i.iD)("div", Dt, [(0, i.WI)(e.$slots, "cta", (0, s.vs)((0, i.F4)({ triageCtas: (0, o.SU)(S) })), (() => [(0, i.Wm)(f, { items: (0, o.SU)(S), placement: "triage", class: "sc-triage-card-modern__cta" }, null, 8, ["items"])]))])) : (0, i.kq)("", !0)]))]))])), _: 2 }, [(0, i.Ko)(e.$slots, ((t, n) => ({ name: n, fn: (0, i.w5)((t => [(0, i.WI)(e.$slots, n, (0, s.vs)((0, i.F4)(t)))])) })))]), 1032, ["type", "icon-triage-attrs", "title", "description"])) : (0, i.kq)("", !0) } }, Nt = Rt, Ot = Nt; var Lt = n(11923); const $t = { class: "sc-conditions-item-modern__probability" }, qt = { class: "sc-conditions-item-modern__headings" }, Ht = ["data-test-id"], Zt = { class: "sc-conditions-item-modern__cta" }, jt = ["data-test-id"], Mt = (0, i.aZ)({ __name: "ScConditionsItemModern", props: { condition: { type: Object, default: () => ({}) }, weak: { type: Boolean, default: !1 }, clickable: { type: Boolean, default: !1 }, cta: { type: Object, default: void 0 } }, setup(e) { const t = e, { computeConditionProgressBarValue: r } = (0, z.Z)(), { translate: c, translationExists: u } = (0, S.Z)(), { showConditionDetailsHandler: d } = we(t.condition), m = (0, i.Fl)((() => void 0 !== t.cta)), { handleCTAButtonClick: v } = K(), p = () => { var e, n, i; v("condition_description", "redirect", { type: "condition", data: [(0, a.Z)({ id: t.condition.id, probability: t.condition.probability, ranking: t.condition.ranking, url: null === (e = t.cta) || void 0 === e ? void 0 : e.href }, null !== (n = null === (i = t.cta) || void 0 === i ? void 0 : i.customAnalyticsProperties) && void 0 !== n ? n : {})] }) }, g = () => { p() }, h = e => { (0, Y.QC)("condition-item-clicked", { url: e, id: t.condition.id }), p() }, f = (0, i.Fl)((() => { const { cta: e } = t; return e ? e.enableDataExporter ? { onClick: () => h(e.href) } : { href: e.href, target: "_blank", rel: "noreferrer noopener", onClick: g } : {} })), y = () => { t.clickable && d() }, _ = (0, i.Fl)((() => t.condition.name !== t.condition.common_name)), w = (0, i.RC)((() => Promise.resolve().then(n.bind(n, 31710)))), b = (0, i.Fl)((() => !t.clickable)); return (t, n) => (0, i.wy)(((0, i.wg)(), (0, i.j4)(_e.Z, { tag: b.value ? "div" : "button", class: (0, s.C_)(["sc-conditions-item-modern", { "sc-conditions-item-modern--weak": e.weak, "sc-conditions-item-modern--unclickable": b.value }]), onClick: y }, { default: (0, i.w5)((() => [(0, i.WI)(t.$slots, "item", (0, s.vs)((0, i.F4)({ translate: (0, o.SU)(c), condition: e.condition, weak: e.weak, toShowConditionDetailsHandler: y, cta: e.cta })), (() => [(0, i.WI)(t.$slots, "name", (0, s.vs)((0, i.F4)({ condition: e.condition })), (() => [(0, i._)("div", $t, [(0, i.WI)(t.$slots, "probability", (0, s.vs)((0, i.F4)({ translate: (0, o.SU)(c), condition: e.condition })), (() => [(0, i.WI)(t.$slots, "progress-bar", (0, s.vs)((0, i.F4)({ condition: e.condition })), (() => [(0, i.Wm)((0, o.SU)(l.Qs), { class: "sc-conditions-item-modern__progress", min: 0, max: 100, value: (0, o.SU)(r)(e.condition.probabilityInt) }, null, 8, ["value"])])), (0, i.WI)(t.$slots, "probability-label", (0, s.vs)((0, i.F4)({ translate: (0, o.SU)(c), condition: e.condition })), (() => [(0, i.Wm)((0, o.SU)(l.II), { class: "ui-text--body-2-comfortable" }, { default: (0, i.w5)((() => [(0, i.Uk)((0, s.zw)((0, o.SU)(c)(`common.evidence.${e.condition.probabilityClass}`)), 1)])), _: 1 })]))]))]), (0, i._)("div", qt, [(0, i.Wm)((0, o.SU)(l.Hg), { class: "sc-conditions-item-modern__common-name", level: "3" }, { default: (0, i.w5)((() => [(0, i.Uk)((0, s.zw)(e.condition.common_name), 1)])), _: 1 }), _.value ? ((0, i.wg)(), (0, i.j4)((0, o.SU)(l.II), { key: 0, class: "sc-conditions-item-modern__name ui-text--body-2-compact" }, { default: (0, i.w5)((() => [(0, i.Uk)((0, s.zw)(e.condition.name), 1)])), _: 1 })) : (0, i.kq)("", !0)])])), (0, i.WI)(t.$slots, "show-details", (0, s.vs)((0, i.F4)({ cta: e.cta, isUnclickable: b.value, toShowConditionDetailsHandler: y })), (() => [b.value ? ((0, i.wg)(), (0, i.iD)("div", { key: 0, class: "sc-conditions-item-modern__show-details", "data-test-id": (0, o.SU)(ie).CONDITION_DETAILS_BUTTON }, [(0, i.Wm)((0, o.SU)(l.wg), { class: "ui-button--text ui-button--small", onClick: (0, o.SU)(d) }, { default: (0, i.w5)((() => [(0, i.Uk)((0, s.zw)((0, o.SU)(c)("results.conditionDetails.showDetails")), 1)])), _: 1 }, 8, ["onClick"])], 8, Ht)) : (0, i.kq)("", !0)])), (0, i.WI)(t.$slots, "cta", (0, s.vs)((0, i.F4)({ translate: (0, o.SU)(c), cta: e.cta, hasCtaEnabled: m.value, isUnclickable: b.value, toConditionRedirectHandler: g })), (() => [(0, i._)("div", Zt, [m.value && e.cta ? ((0, i.wg)(), (0, i.j4)((0, o.SU)(l.wg), (0, i.dG)({ key: 0, "data-test-id": (0, o.SU)(ie).CONDITION_CTA_BUTTON, class: [{ "ui-button--small": "button" === e.cta.type, "ui-button--text": "text" === e.cta.type }, "sc-conditions-item-modern__cta-button sc-conditions-item-modern__cta-button--link"] }, f.value), { default: (0, i.w5)((() => [(0, i.WI)(t.$slots, "cta-text", (0, s.vs)((0, i.F4)({ translate: (0, o.SU)(c), translationExists: (0, o.SU)(u) })), (() => { var t; return [(0, i.Uk)((0, s.zw)((0, o.SU)(u)(`${null !== (t = e.cta.label) && void 0 !== t ? t : ""}`) ? (0, o.SU)(c)(e.cta.label) : e.cta.label), 1)] })), (0, i.WI)(t.$slots, "cta-icon", {}, (() => ["text" === e.cta.type ? ((0, i.wg)(), (0, i.j4)((0, o.SU)(l.ax), { key: 0, icon: (0, o.SU)(w), class: "ui-button__icon ui-button__icon--right" }, null, 8, ["icon"])) : (0, i.kq)("", !0)]))])), _: 3 }, 16, ["data-test-id", "class"])) : e.clickable ? ((0, i.wg)(), (0, i.iD)("div", { key: 1, "data-test-id": (0, o.SU)(ie).CONDITION_DETAILS_BUTTON, class: "sc-conditions-item-modern__cta-button sc-conditions-item-modern__cta-button--show-details ui-button ui-button--text ui-button--small" }, [(0, i.WI)(t.$slots, "cta-text", (0, s.vs)((0, i.F4)({ translate: (0, o.SU)(c) })), (() => [(0, i.Uk)((0, s.zw)((0, o.SU)(c)("results.conditionDetails.showDetails")), 1)])), (0, i.WI)(t.$slots, "cta-icon", {}, (() => [(0, i.Wm)((0, o.SU)(l.ax), { icon: "chevron-right", class: "sc-conditions-item-modern__cta-icon ui-button__icon ui-button__icon--right" })]))], 8, jt)) : (0, i.kq)("", !0)])]))]))])), _: 3 }, 8, ["tag", "class"])), [[(0, o.SU)(Lt.Ty)]]) } }), zt = Mt, Bt = zt, Vt = (0, i.aZ)({ __name: "ScPossibleConditionsModern", props: { settings: { type: Object, default: () => ({}) } }, setup(e) { const { translate: t } = (0, S.Z)(), { openedCondition: n, likelyConditions: a, unlikelyConditions: r, showLikelyConditions: c, showLessLikelyConditions: u, hasOnlyLessLikelyConditions: d, hasNoConditions: m } = Ie(), { rankingCtas: v, conditionCtasMapping: p } = de(), g = e => p.value[e.id], h = (0, i.Fl)((() => a.value.concat(r.value).every((({ id: e }) => void 0 === p.value[e])))); return (e, p) => ((0, i.wg)(), (0, i.j4)((0, o.SU)(l.bK), { id: "possible-conditions", class: "sc-possible-conditions-modern" }, { default: (0, i.w5)((() => [(0, i.WI)(e.$slots, "heading", (0, s.vs)((0, i.F4)({ translate: (0, o.SU)(t) })), (() => [(0, i.Wm)((0, o.SU)(l.Hg), { key: "heading", class: "sc-possible-conditions-modern__heading", level: "4", tag: "h2" }, { default: (0, i.w5)((() => [(0, i.Uk)((0, s.zw)((0, o.SU)(t)("results.possibleConditions.hasConditions.heading")), 1)])), _: 1 })])), (0, o.SU)(m) ? (0, i.WI)(e.$slots, "no-conditions", (0, s.vs)((0, i.dG)({ key: 0 }, { hasNoConditions: (0, o.SU)(m), translate: (0, o.SU)(t) })), (() => [(0, i.WI)(e.$slots, "no-conditions-text", (0, s.vs)((0, i.F4)({ translate: (0, o.SU)(t) })), (() => [(0, i.Wm)((0, o.SU)(l.II), { key: "text", class: "sc-possible-conditions-modern__text" }, { default: (0, i.w5)((() => [(0, i.Uk)((0, s.zw)((0, o.SU)(t)("results.possibleConditions.noConditions.text")), 1)])), _: 1 })]))])) : ((0, i.wg)(), (0, i.iD)(i.HY, { key: 1 }, [(0, o.SU)(d) ? (0, i.WI)(e.$slots, "message", (0, s.vs)((0, i.dG)({ key: 0 }, { translate: (0, o.SU)(t) })), (() => [(0, i.Wm)((0, o.SU)(l.mE), { key: "message", class: "sc-possible-conditions-modern__message", type: "info" }, { default: (0, i.w5)((() => [(0, i.Uk)((0, s.zw)((0, o.SU)(t)("results.possibleConditions.message")), 1)])), _: 1 })])) : (0, i.kq)("", !0), (0, o.SU)(c) ? (0, i.WI)(e.$slots, "conditions-list", (0, s.vs)((0, i.dG)({ key: 1 }, { likelyConditions: (0, o.SU)(a) })), (() => [(0, i.Wm)((0, o.SU)(l.SJ), { key: "list", class: (0, s.C_)(["sc-possible-conditions-modern__list sc-possible-conditions-modern__list--likely", { "sc-possible-conditions-modern__list--only-likely": !(0, o.SU)(u) }]) }, { default: (0, i.w5)((() => [((0, i.wg)(!0), (0, i.iD)(i.HY, null, (0, i.Ko)((0, o.SU)(a), (t => (0, i.WI)(e.$slots, "conditions-item", (0, s.vs)((0, i.dG)({ key: t.id }, { condition: t })), (() => [(0, i.Wm)(Bt, { condition: t, cta: g(t), clickable: h.value }, null, 8, ["condition", "cta", "clickable"])])))), 128))])), _: 3 }, 8, ["class"])])) : (0, i.kq)("", !0), (0, o.SU)(u) ? (0, i.WI)(e.$slots, "accordion", (0, s.vs)((0, i.dG)({ key: 2 }, { showLessLikelyConditions: (0, o.SU)(u), openedCondition: (0, o.SU)(n), translate: (0, o.SU)(t), unlikelyConditions: (0, o.SU)(r) })), (() => [(0, i.Wm)((0, o.SU)(l.A9), { key: "accordion", modelValue: (0, o.SU)(n), "onUpdate:modelValue": p[0] || (p[0] = e => (0, o.dq)(n) ? n.value = e : null), class: "sc-possible-conditions-modern__accordion" }, { default: (0, i.w5)((() => [(0, i.WI)(e.$slots, "accordion-item", (0, s.vs)((0, i.F4)({ translate: (0, o.SU)(t), unlikelyConditions: (0, o.SU)(r) })), (() => [(0, i.Wm)(ye.Z, { name: "less-likely-conditions", title: (0, o.SU)(t)("results.possibleConditions.lessLikelyConditions") }, { default: (0, i.w5)((() => [(0, i.WI)(e.$slots, "less-likely-conditions-list", (0, s.vs)((0, i.F4)({ unlikelyConditions: (0, o.SU)(r) })), (() => [(0, i.Wm)((0, o.SU)(l.SJ), { class: "sc-possible-conditions-modern__list sc-possible-conditions-modern__list--unlikely" }, { default: (0, i.w5)((() => [((0, i.wg)(!0), (0, i.iD)(i.HY, null, (0, i.Ko)((0, o.SU)(r), (t => (0, i.WI)(e.$slots, "less-likely-conditions-list-item", (0, s.vs)((0, i.dG)({ key: t.id }, { condition: t })), (() => [(0, i.Wm)(Bt, { condition: t, weak: !0, cta: g(t), clickable: h.value }, null, 8, ["condition", "cta", "clickable"])])))), 128))])), _: 3 })]))])), _: 3 }, 8, ["title"])]))])), _: 3 }, 8, ["modelValue"])])) : (0, i.kq)("", !0), (0, i.WI)(e.$slots, "disclaimer", (0, s.vs)((0, i.F4)({ translate: (0, o.SU)(t) })), (() => [(0, i.Wm)((0, o.SU)(l.II), { class: "sc-possible-conditions-modern__disclaimer ui-text--body-2-compact" }, { default: (0, i.w5)((() => [(0, i.Uk)((0, s.zw)((0, o.SU)(t)("results.possibleConditions.disclaimer")), 1)])), _: 1 })]))], 64)), (0, i.WI)(e.$slots, "ctas", (0, s.vs)((0, i.F4)({ rankingCtas: (0, o.SU)(v) })), (() => [(0, i.Wm)(f, { class: "ui-button--outlined", placement: "conditions", items: (0, o.SU)(v) }, null, 8, ["items"])]))])), _: 3 })) } }), Yt = Vt, Gt = Yt, Qt = { class: "sc-summary-modern" }, Jt = { key: "notifications", class: "sc-summary-modern__notifications" }, Kt = { class: "sc-summary-modern__buttons" }, Xt = { __name: "ScSummaryModern", props: { settings: { type: Object, default: () => ({}) } }, setup(e) { const { translate: t } = (0, S.Z)(), { pdfDownloadRequestStatus: n, summaryCtas: a } = de(); return (e, r) => ((0, i.wg)(), (0, i.iD)("div", Qt, [(0, i.WI)(e.$slots, "notifications", (0, s.vs)((0, i.F4)({ translate: (0, o.SU)(t), pdfDownloadRequestStatus: (0, o.SU)(n) })), (() => [(0, o.SU)(n) ? ((0, i.wg)(), (0, i.iD)("div", Jt, [(0, i.WI)(e.$slots, "pdf-download-notification", (0, s.vs)((0, i.F4)({ translate: (0, o.SU)(t), pdfDownloadRequestStatus: (0, o.SU)(n) })), (() => [(0, o.SU)(n) ? ((0, i.wg)(), (0, i.j4)(u.Z, { key: 0, "request-status": (0, o.SU)(n), "translation-prefix": "results.summary.notifications.pdfDownload", class: "sc-summary-modern__notification" }, null, 8, ["request-status"])) : (0, i.kq)("", !0)]))])) : (0, i.kq)("", !0)])), (0, i.WI)(e.$slots, "buttons", (0, s.vs)((0, i.F4)((0, o.SU)(a))), (() => [(0, i._)("div", Kt, [(0, i.Wm)(f, { items: (0, o.SU)(a), placement: "summary", class: "sc-summary-modern__button" }, null, 8, ["items"])])]))])) } }, en = Xt, tn = en; var nn = n(54537); const an = { class: "sc-collapse-card__header" }, sn = { key: 0, class: "sc-collapse-card__content" }, on = { __name: "ScCollapseCard", emits: ["open", "hide"], setup(e, { emit: t }) { const { translate: n } = (0, S.Z)(), a = (0, o.iH)(!1), r = (0, o.iH)(), c = e => { r.value = e }, u = (0, o.iH)(), d = e => { u.value = e }, m = async () => { var e, n, s, o; a.value = !a.value, t(a.value ? "open" : "hide"), await (0, i.Y3)(), null === (e = r.value) || void 0 === e || null === (n = e.$el) || void 0 === n || n.focus(), null === (s = u.value) || void 0 === s || null === (o = s.$el) || void 0 === o || o.focus() }; return (e, t) => ((0, i.wg)(), (0, i.j4)((0, o.SU)(l.bK), { class: "sc-collapse-card" }, { default: (0, i.w5)((() => [(0, i.WI)(e.$slots, "default", (0, i.dG)({ class: "header" }, { translate: (0, o.SU)(n), opened: a.value, handleToggleButtonClick: m }), (() => [(0, i._)("div", an, [(0, i.WI)(e.$slots, "title", (0, s.vs)((0, i.F4)({ translate: (0, o.SU)(n), opened: a.value, handleToggleButtonClick: m }))), (0, i.WI)(e.$slots, "toggle", (0, s.vs)((0, i.F4)({ translate: (0, o.SU)(n), opened: a.value, handleToggleButtonClick: m })), (() => [(0, i.WI)(e.$slots, "toggle-open", (0, s.vs)((0, i.F4)({ translate: (0, o.SU)(n), opened: a.value, handleToggleButtonClick: m, setOpenButtonRef: c })), (() => [a.value ? (0, i.kq)("", !0) : ((0, i.wg)(), (0, i.j4)((0, o.SU)(l.wg), { key: 0, ref: c, class: "ui-button--text ui-button--small", onClick: m }, { default: (0, i.w5)((() => [(0, i.WI)(e.$slots, "toggle-open-text", (0, s.vs)((0, i.F4)({ translate: (0, o.SU)(n) })), (() => [(0, i.Uk)((0, s.zw)((0, o.SU)(n)("common.show")), 1)])), (0, i.WI)(e.$slots, "toggle-open-icon", {}, (() => [(0, i.Wm)((0, o.SU)(l.ax), { class: "ui-button__icon ui-button__icon--right", icon: "chevron-down" })]))])), _: 3 }))])), (0, i.WI)(e.$slots, "toggle-hide", (0, s.vs)((0, i.F4)({ translate: (0, o.SU)(n), opened: a.value, handleToggleButtonClick: m, setHideButtonRef: d })), (() => [a.value ? ((0, i.wg)(), (0, i.j4)((0, o.SU)(l.wg), { key: 0, ref: d, class: "ui-button--text ui-button--small", onClick: m }, { default: (0, i.w5)((() => [(0, i.WI)(e.$slots, "toggle-hide-text", (0, s.vs)((0, i.F4)({ translate: (0, o.SU)(n) })), (() => [(0, i.Uk)((0, s.zw)((0, o.SU)(n)("common.hide")), 1)])), (0, i.WI)(e.$slots, "toggle-hide-icon", {}, (() => [(0, i.Wm)((0, o.SU)(l.ax), { class: "ui-button__icon ui-button__icon--right", icon: "chevron-up" })]))])), _: 3 })) : (0, i.kq)("", !0)]))]))])])), a.value ? ((0, i.wg)(), (0, i.iD)("div", sn, [(0, i.WI)(e.$slots, "content")])) : (0, i.kq)("", !0)])), _: 3 })) } }, rn = on, ln = rn, cn = { __name: "ScAnswers", setup(e) { const { translate: t } = (0, S.Z)(); return (e, n) => ((0, i.wg)(), (0, i.j4)(ln, { id: "answers", class: "sc-answers" }, { title: (0, i.w5)((() => [(0, i.Wm)((0, o.SU)(l.Hg), { level: "4", tag: "h2", class: "sc-answers__title" }, { default: (0, i.w5)((() => [(0, i.Uk)((0, s.zw)((0, o.SU)(t)("results.summaryPanel.title")), 1)])), _: 1 })])), content: (0, i.w5)((() => [(0, i.Wm)(nn["default"], { class: "sc-answers__summary summary--card" })])), _: 1 })) } }, un = cn, dn = un, mn = { __name: "ScLabTestsModern", props: { settings: { type: Object, default: () => ({}) } }, emits: ["fetch"], setup(e, { emit: t }) { const { translate: n } = (0, S.Z)(), a = (0, o.qj)(qe({ onFetched: e => t("fetch", e) })), c = () => { r.c.trackEvent("Lab tests expanded", { event_details: { event_type: "expand", event_object: "lab_tests" } }) }; return (t, r) => ((0, i.wg)(), (0, i.j4)(ln, { id: "answers", class: "sc-lab-tests-modern", onOpen: c }, { title: (0, i.w5)((() => [(0, i.WI)(t.$slots, "title", (0, s.vs)((0, i.F4)({ translate: (0, o.SU)(n) })), (() => [(0, i.Wm)((0, o.SU)(l.Hg), { level: "4", class: "sc-answers__title" }, { default: (0, i.w5)((() => [(0, i.Uk)((0, s.zw)((0, o.SU)(n)("results.labTests.heading")), 1)])), _: 1 })]))])), content: (0, i.w5)((() => [(0, i.WI)(t.$slots, "content", (0, s.vs)((0, i.F4)({ labTests: a })), (() => [(0, i.Wm)(Le, (0, i.dG)(a, { settings: e.settings }), null, 16, ["settings"])]))])), _: 3 })) } }, vn = mn, pn = vn, gn = { __name: "ScResultsTemplateModern", setup(e) { return (e, t) => ((0, i.wg)(), (0, i.j4)(xt, { class: "results-modern" }, { default: (0, i.w5)((({ triageSettings: t, conditionsSettings: n, plansSurveySettings: a, labTestsSettings: o, showLabTests: r, answersSettings: l, summarySettings: c, consideredDiagnoses: u, noInternet: d, feedbackSettings: m, disclaimerSettings: v }) => [(0, i.WI)(e.$slots, "triage-card", (0, s.vs)((0, i.F4)({ triageSettings: t })), (() => [null !== t && void 0 !== t && t.hide ? (0, i.kq)("", !0) : ((0, i.wg)(), (0, i.j4)(Ot, { key: "triage-card", class: "results-modern__card results-modern__card--primary results-modern__card--triage", settings: t }, null, 8, ["settings"]))])), (0, i.WI)(e.$slots, "possible-conditions", (0, s.vs)((0, i.F4)({ conditionsSettings: n })), (() => [null !== n && void 0 !== n && n.hide ? (0, i.kq)("", !0) : ((0, i.wg)(), (0, i.j4)(Gt, { key: "conditions-card", class: "results-modern__card results-modern__card--primary results-modern__card--conditions", settings: n }, null, 8, ["settings"]))])), (0, i.WI)(e.$slots, "plans-survey", {}, (() => [null !== a && void 0 !== a && a.hide ? (0, i.kq)("", !0) : ((0, i.wg)(), (0, i.j4)(_t, { key: "plans-survey-card", class: "results-modern__card results-modern__card--primary results-modern__card--plans-survey" }))])), (0, i.WI)(e.$slots, "lab-tests", (0, s.vs)((0, i.F4)({ labTestsSettings: o, showLabTests: r })), (() => [r ? ((0, i.wg)(), (0, i.j4)(pn, { key: "lab-tests-card", settings: o, class: "results-modern__card results-modern__card--primary results-modern__card--lab-tests" }, null, 8, ["settings"])) : (0, i.kq)("", !0)])), (0, i.WI)(e.$slots, "answers", (0, s.vs)((0, i.F4)({ answersSettings: l })), (() => [null !== l && void 0 !== l && l.hide ? (0, i.kq)("", !0) : ((0, i.wg)(), (0, i.j4)(dn, { key: "answers-card", class: "results-modern__card results-modern__card--primary results-modern__card--answers" }))])), (0, i.WI)(e.$slots, "summary", (0, s.vs)((0, i.F4)({ summarySettings: c })), (() => [null !== c && void 0 !== c && c.hide ? (0, i.kq)("", !0) : ((0, i.wg)(), (0, i.j4)(tn, { key: "summary-card", settings: c, class: "results-modern__card results-modern__card--summary" }, null, 8, ["settings"]))])), (0, i.WI)(e.$slots, "feedback", (0, s.vs)((0, i.F4)({ feedbackSettings: m, noInternet: d })), (() => [null !== m && void 0 !== m && m.hide ? (0, i.kq)("", !0) : ((0, i.wg)(), (0, i.j4)(ct, { key: 0, class: "results-modern__card results-modern__card--feedback" }))])), (0, i.WI)(e.$slots, "disclaimer", (0, s.vs)((0, i.F4)({ disclaimerSettings: v })), (() => [null !== v && void 0 !== v && v.hide ? (0, i.kq)("", !0) : ((0, i.wg)(), (0, i.j4)(ut.Z, { key: "disclaimer-card", "custom-content": null === v || void 0 === v ? void 0 : v.customContent, class: "results-modern__card results-modern__card--disclaimer" }, null, 8, ["custom-content"]))]))])), _: 3 })) } }, hn = gn, fn = hn, yn = { __name: "Results", setup(e) { var t; const n = (0, d.J)(), l = (0, b.V)(), c = (0, w.z)(), { translate: u } = (0, S.Z)(), m = J(), { detailedConditions: v, computeConditionProgressBarValue: p } = (0, z.Z)(), g = (0, i.Fl)((() => l.current)), h = (0, i.Fl)((() => { var e; return null === (e = g.value) || void 0 === e ? void 0 : e.componentSettings })), f = (0, i.Fl)((() => { var e; return null === (e = g.value) || void 0 === e ? void 0 : e.show })), y = (0, i.Fl)((() => n.noInternet)), _ = (0, i.Fl)((() => l.consideredDiagnoses)), k = (0, i.Fl)((() => c.data)), U = (0, i.Fl)((() => n.isLoading)); async function x() { var e, t, n, i, s, o, d, g, f, y, w; const b = null === (e = l.settings) || void 0 === e ? void 0 : e.PDFSettings, S = await m.composeReport(l.language, u, p); r.c.trackEvent("Results Presented", { result_number: _.value }); const k = { answers: { patientSex: c.patientSex, patientAge: c.patientAge, intelligentDiagnosis: c.exporterEvidences.filter((e => e.suggest || !e.source)) }, questions: l.diagnosis, conditions: v.value.map((e => (0, Y.zy)(e))), evidence: c.exporterEvidences, interviewId: l.interviewIdWithReturns, reportRequestData: (0, a.Z)((0, a.Z)({}, S), {}, { report_data: null !== b && void 0 !== b && b.serializeReportData ? JSON.stringify(S.report_data) : S.report_data }), triageLevel: null === (t = c.triage) || void 0 === t ? void 0 : t.triage_level, interviewDuration: 60 * c.interviewDuration.minutes + c.interviewDuration.seconds, seriousSymptoms: null === (n = c.triage) || void 0 === n ? void 0 : n.serious, consideredDiagnoses: _.value, disclaimer: u("results.disclaimer"), triage: { title: u(`results.triageCard.${null === (i = c.triage) || void 0 === i ? void 0 : i.triage_level}.title`), description: u(`results.triageCard.${null === (s = c.triage) || void 0 === s ? void 0 : s.triage_level}.description`) } }, { recommendedSpecialist: U } = c, x = null === (o = h.value) || void 0 === o || null === (d = o.triage) || void 0 === d || null === (g = d.specialistRecommender) || void 0 === g ? void 0 : g.enableDataExporter, I = null === (f = h.value) || void 0 === f || null === (y = f.triage) || void 0 === y || null === (w = y.channel) || void 0 === w ? void 0 : w.enableDataExporter; if ((x || I) && U) { var C, F; if (k.specialist = {}, x && Object.keys(U.recommended_specialist || {}).length > 0) k.specialist = { id: null === (C = U.recommended_specialist) || void 0 === C ? void 0 : C.id, category: null === (F = U.recommended_specialist) || void 0 === F ? void 0 : F.name }; I && null !== U && void 0 !== U && U.recommended_channel && (k.specialist.channel = { id: U.recommended_channel, name: u(`results.recommendSpecialistChannel.${U.recommended_channel}`) }) } (0, Y.QC)("interview-finished", k) } (0, i.bv)((() => { x() })); const I = (0, o.XI)("classic" === ((null === (t = g.value) || void 0 === t ? void 0 : t.version) || "classic") ? Ft : fn); return (e, t) => ((0, i.wg)(), (0, i.j4)((0, i.LL)(I.value), { "is-loading": U.value, "no-internet": y.value, "show-results": f.value, "results-settings": h.value, interview: k.value, "considered-diagnoses": _.value }, (0, i.Nv)({ _: 2 }, [(0, i.Ko)(e.$slots, ((t, n) => ({ name: n, fn: (0, i.w5)((t => [(0, i.WI)(e.$slots, n, (0, s.vs)((0, i.F4)(t)))])) })))]), 1032, ["is-loading", "no-internet", "show-results", "results-settings", "interview", "considered-diagnoses"])) } }, _n = yn, wn = _n }, 54537: (e, t, n) => { "use strict"; n.r(t), n.d(t, { default: () => x }); var a = n(78551), i = n(42681), s = n(43007), o = n(21745), r = n(77129), l = n(22522), c = n(83950), u = n(70225); const d = { class: "summary" }, m = { class: "summary__content summary__section summary__section--patient" }, v = { class: "summary__content-item--first" }, p = { class: "summary__content-item" }, g = { key: 0, class: "summary__content-item" }, h = { key: 1, class: "summary__content-item" }, f = { key: 0, class: "summary__section summary__section--regions" }, y = { key: 0, class: "summary__section summary__section--risk-factors" }, _ = { key: 0, class: "summary__section summary__section--symptoms" }, w = { key: 0, class: "summary__section summary__section--present" }, b = { key: 0, class: "summary__section summary__section--absent" }, S = { key: 0, class: "summary__section summary__section--skipped" }, k = { __name: "Summary", setup(e) { const t = (0, l.z)(), { translate: n } = (0, c.Z)(), k = (0, a.Fl)((() => t.data)), U = (0, a.Fl)((() => t.detailedEvidences)); function x(e) { return U.value.filter((t => t.questionType === e)) } const I = (0, a.Fl)((() => n(`common.dateUnit.${k.value.age.unit}`, k.value.age.value))), C = (0, a.Fl)((() => x("initial_symptoms"))), F = (0, a.Fl)((() => x("risk_factors").filter((e => "present" === e.choice_id)))), E = (0, a.Fl)((() => x("regions"))), P = (0, a.Fl)((() => x("intelligent_interview"))), T = (0, a.Fl)((() => P.value.filter((e => "present" === e.choice_id)))), W = (0, a.Fl)((() => P.value.filter((e => "absent" === e.choice_id)))), A = (0, a.Fl)((() => P.value.filter((e => "unknown" === e.choice_id)))), D = (0, a.Fl)((() => !!(T.value.length + W.value.length + A.value.length))), R = e => e.evidenceDetails.common_name || e.evidenceDetails.name, N = (0, a.Fl)((() => E.value.map(R))), O = (0, a.Fl)((() => F.value.map(R))), L = (0, a.Fl)((() => C.value.map(R))); return (0, u.QC)("modal-open", { type: "reported-evidence", payload: { age: k.value.age, sex: k.value.sex, initialEvidence: t.exporterEvidences.filter((e => !!e.initial)), confirmedEvidence: T.value, deniedEvidence: W.value, unknownEvidence: A.value } }), (e, t) => ((0, a.wg)(), (0, a.iD)("div", d, [(0, a.WI)(e.$slots, "patient", (0, i.vs)((0, a.F4)({ translate: (0, s.SU)(n), interview: k.value, ageUnit: I.value })), (() => [(0, a._)("div", m, [(0, a._)("div", v, [(0, a.Wm)((0, s.SU)(o.Hg), { level: "4", tag: "h3", class: "summary__heading" }, { default: (0, a.w5)((() => [(0, a.Uk)((0, i.zw)((0, s.SU)(n)("results.summaryPanel.sex")), 1)])), _: 1 }), (0, a.Wm)((0, s.SU)(o.II), { class: "summary__text" }, { default: (0, a.w5)((() => [(0, a.Uk)((0, i.zw)((0, s.SU)(n)(`common.${k.value.sex}`)), 1)])), _: 1 })]), (0, a._)("div", p, [(0, a.Wm)((0, s.SU)(o.Hg), { level: "4", tag: "h3", class: "summary__heading" }, { default: (0, a.w5)((() => [(0, a.Uk)((0, i.zw)((0, s.SU)(n)("results.summaryPanel.age")), 1)])), _: 1 }), (0, a.Wm)((0, s.SU)(o.II), { class: "summary__text" }, { default: (0, a.w5)((() => [(0, a.Uk)((0, i.zw)(k.value.age.value) + " " + (0, i.zw)(I.value), 1)])), _: 1 })]), k.value.height ? ((0, a.wg)(), (0, a.iD)("div", g, [(0, a.Wm)((0, s.SU)(o.Hg), { level: "4", tag: "h3", class: "summary__text" }, { default: (0, a.w5)((() => [(0, a.Uk)((0, i.zw)((0, s.SU)(n)("results.summaryPanel.height")), 1)])), _: 1 }), (0, a.Wm)((0, s.SU)(o.II), { class: "summary__text" }, { default: (0, a.w5)((() => [(0, a.Uk)((0, i.zw)(k.value.height), 1)])), _: 1 })])) : (0, a.kq)("", !0), k.value.weight ? ((0, a.wg)(), (0, a.iD)("div", h, [(0, a.Wm)((0, s.SU)(o.Hg), { level: "4", tag: "h3", class: "summary__text" }, { default: (0, a.w5)((() => [(0, a.Uk)((0, i.zw)((0, s.SU)(n)("results.summaryPanel.weight")), 1)])), _: 1 }), (0, a.Wm)((0, s.SU)(o.II), { class: "summary__text" }, { default: (0, a.w5)((() => [(0, a.Uk)((0, i.zw)(k.value.weight), 1)])), _: 1 })])) : (0, a.kq)("", !0)])])), (0, a.WI)(e.$slots, "regions", (0, i.vs)((0, a.F4)({ selectedRegions: E.value, translate: (0, s.SU)(n) })), (() => [E.value.length ? ((0, a.wg)(), (0, a.iD)("div", f, [(0, a.Wm)((0, s.SU)(o.Hg), { level: "4", tag: "h3", class: "summary__heading" }, { default: (0, a.w5)((() => [(0, a.Uk)((0, i.zw)((0, s.SU)(n)("interviewStep.regions")), 1)])), _: 1 }), (0, a.Wm)((0, s.SU)(o.F0), { tag: "ul", items: N.value }, null, 8, ["items"])])) : (0, a.kq)("", !0)])), (0, a.WI)(e.$slots, "risk-factors", (0, i.vs)((0, a.F4)({ presentRiskFactors: F.value, translate: (0, s.SU)(n) })), (() => [F.value.length ? ((0, a.wg)(), (0, a.iD)("div", y, [(0, a.Wm)((0, s.SU)(o.Hg), { level: "4", tag: "h3", class: "summary__heading" }, { default: (0, a.w5)((() => [(0, a.Uk)((0, i.zw)((0, s.SU)(n)("results.summaryPanel.risk_factors")), 1)])), _: 1 }), (0, a.Wm)((0, s.SU)(o.F0), { tag: "ul", items: O.value }, null, 8, ["items"])])) : (0, a.kq)("", !0)])), (0, a.WI)(e.$slots, "symptoms", (0, i.vs)((0, a.F4)({ initialSymptoms: C.value, translate: (0, s.SU)(n) })), (() => [C.value.length ? ((0, a.wg)(), (0, a.iD)("div", _, [(0, a.Wm)((0, s.SU)(o.Hg), { level: "4", tag: "h3", class: "summary__heading" }, { default: (0, a.w5)((() => [(0, a.Uk)((0, i.zw)((0, s.SU)(n)("results.summaryPanel.reported_symptoms")), 1)])), _: 1 }), (0, a.Wm)((0, s.SU)(o.F0), { tag: "ul", items: L.value }, null, 8, ["items"])])) : (0, a.kq)("", !0)])), (0, a.WI)(e.$slots, "evidence", (0, i.vs)((0, a.F4)({ showInterviewEvidence: D.value, translate: (0, s.SU)(n), presentInterviewEvidence: T.value, absentInterviewEvidence: W.value, skippedInterviewEvidence: A.value })), (() => [D.value ? ((0, a.wg)(), (0, a.iD)(a.HY, { key: 0 }, [(0, a.Wm)((0, s.SU)(o.Hg), { level: "4", tag: "h3", class: "summary__heading" }, { default: (0, a.w5)((() => [(0, a.Uk)((0, i.zw)((0, s.SU)(n)("results.summaryPanel.other_symptoms")), 1)])), _: 1 }), (0, a.WI)(e.$slots, "evidence-present", (0, i.vs)((0, a.F4)({ presentInterviewEvidence: T.value, translate: (0, s.SU)(n) })), (() => [T.value.length ? ((0, a.wg)(), (0, a.iD)("div", w, [(0, a.Wm)((0, s.SU)(o.II), { class: "summary__text summary__text--evidence-heading" }, { default: (0, a.w5)((() => [(0, a.Uk)((0, i.zw)((0, s.SU)(n)("results.summaryPanel.present")), 1)])), _: 1 }), (0, a.Wm)((0, s.SU)(o.F0), { tag: "ul" }, { default: (0, a.w5)((() => [((0, a.wg)(!0), (0, a.iD)(a.HY, null, (0, a.Ko)(T.value, (e => ((0, a.wg)(), (0, a.j4)(r.Z, { key: e.id, icon: "present", class: "ui-bullet-points-item--primary" }, { default: (0, a.w5)((() => [(0, a.Wm)((0, s.SU)(o.II), { tag: "span" }, { default: (0, a.w5)((() => [(0, a.Uk)((0, i.zw)(R(e)), 1)])), _: 2 }, 1024)])), _: 2 }, 1024)))), 128))])), _: 1 })])) : (0, a.kq)("", !0)])), (0, a.WI)(e.$slots, "evidence-absent", (0, i.vs)((0, a.F4)({ absentInterviewEvidence: W.value, translate: (0, s.SU)(n) })), (() => [W.value.length ? ((0, a.wg)(), (0, a.iD)("div", b, [(0, a.Wm)((0, s.SU)(o.II), { class: "summary__text summary__text--evidence-heading" }, { default: (0, a.w5)((() => [(0, a.Uk)((0, i.zw)((0, s.SU)(n)("results.summaryPanel.absent")), 1)])), _: 1 }), (0, a.Wm)((0, s.SU)(o.F0), { tag: "ul" }, { default: (0, a.w5)((() => [((0, a.wg)(!0), (0, a.iD)(a.HY, null, (0, a.Ko)(W.value, (e => ((0, a.wg)(), (0, a.j4)(r.Z, { key: e.id, icon: "clear", class: "ui-bullet-points-item--primary" }, { default: (0, a.w5)((() => [(0, a.Wm)((0, s.SU)(o.II), { tag: "span" }, { default: (0, a.w5)((() => [(0, a.Uk)((0, i.zw)(R(e)), 1)])), _: 2 }, 1024)])), _: 2 }, 1024)))), 128))])), _: 1 })])) : (0, a.kq)("", !0)])), (0, a.WI)(e.$slots, "evidence-skipped", (0, i.vs)((0, a.F4)({ skippedInterviewEvidence: A.value, translate: (0, s.SU)(n) })), (() => [A.value.length ? ((0, a.wg)(), (0, a.iD)("div", S, [(0, a.Wm)((0, s.SU)(o.II), { class: "summary__text summary__text--evidence-heading" }, { default: (0, a.w5)((() => [(0, a.Uk)((0, i.zw)((0, s.SU)(n)("results.summaryPanel.skipped")), 1)])), _: 1 }), (0, a.Wm)((0, s.SU)(o.F0), { tag: "ul" }, { default: (0, a.w5)((() => [((0, a.wg)(!0), (0, a.iD)(a.HY, null, (0, a.Ko)(A.value, (e => ((0, a.wg)(), (0, a.j4)(r.Z, { key: e.id, icon: "arrow-right", class: "ui-bullet-points-item--primary" }, { default: (0, a.w5)((() => [(0, a.Wm)((0, s.SU)(o.II), { tag: "span" }, { default: (0, a.w5)((() => [(0, a.Uk)((0, i.zw)(R(e)), 1)])), _: 2 }, 1024)])), _: 2 }, 1024)))), 128))])), _: 1 })])) : (0, a.kq)("", !0)]))], 64)) : (0, a.kq)("", !0)]))])) } }, U = k, x = U }, 42003: (e, t, n) => { var a = { "./ar.yaml": [27047, 9644], "./cs.yaml": [24647, 543], "./de.yaml": [37257, 8398], "./en.yaml": [56866], "./es.yaml": [2033, 7897], "./fr.yaml": [57856, 8693], "./it.yaml": [88867, 1475], "./nl.yaml": [66643, 8685], "./pl.yaml": [51375, 3419], "./pt-br.yaml": [96602, 4224], "./ro.yaml": [61422, 1916], "./ru.yaml": [30867, 7692], "./sk.yaml": [61070, 455], "./tr.yaml": [30515, 8058], "./uk.yaml": [67656, 1840], "./zh-hans.yaml": [36474, 9724] }; function i(e) { if (!n.o(a, e)) return Promise.resolve().then((() => { var t = new Error("Cannot find module '" + e + "'"); throw t.code = "MODULE_NOT_FOUND", t })); var t = a[e], i = t[0]; return Promise.all(t.slice(1).map(n.e)).then((() => n.t(i, 23))) } i.keys = () => Object.keys(a), i.id = 42003, e.exports = i }, 7975: e => { "use strict"; e.exports = JSON.parse('{"INFO_BUTTON":"info-button","REPORT_AN_ISSUE_BUTTON":"report-an-issue-button","GENDER_BUTTON":"gender-button","WHY_BUTTON":"why-button","TERMS_OF_SERVICE_BUTTON":"terms-of-service-button","PRIVACY_POLICY_BUTTON":"privacy-policy-button","MESSAGE_CE_LOGO":"message-ce-logo","MESSAGE_HIPAA_LOGO":"message-hipaa-logo","MESSAGE_GDPR_LOGO":"message-gdpr-logo","SCREEN_HEADING":"screen-heading","CONDITION_DETAILS_BUTTON":"condition-details-button","CONDITION_CTA_BUTTON":"condition-cta-button","PLANS_SURVEY_SUBMIT_BUTTON":"plans-survey-submit-button","AGREEMENT_FIELD":"agreement","AGREEMENT_CHECKBOX":"agreement-checkbox","CONDITION_NAVIGATION_PREVIOUS_BUTTON":"previous-condition-button","CONDITION_NAVIGATION_NEXT_BUTTON":"next-condition-button","LANGUAGE_SELECTOR_BUTTON":"language-selector-button","CALENDAR_BUTTON":"calendar-button","HAMBURGER_MENU_BUTTON":"hamburger-button","FEEDBACK_FIELD":"feedback-field","FEEDBACK_FIELD_INPUT":"feedback-field-input","COMPLETE_INTAKE_SURVEY_BUTTON":"complete-intake-survey-button","START_NEW_CHECKUP_BUTTON":"start-new-checkup-button","DOWNLOAD_PDF_BUTTON":"download-pdf-button","INTENT_SURVEY_MEDICAL_PROFESSIONAL":"medical_professional","INTENT_SURVEY_RECOVERING_AT_HOME":"recovering_at_home","INTENT_SURVEY_NOT_SURE":"not_sure","INTENT_SURVEY_PRIMARY_CARE":"primary_care","INTENT_SURVEY_SPECIALIST_CARE":"specialist_care","INTENT_SURVEY_ALLIED_HEALTH_CARE":"allied_health_care","INTENT_SURVEY_URGENT_CARE":"urgent_care","INTENT_SURVEY_EMERGENCY_CARE":"emergency_care","INTENT_SURVEY_CLIENT_HELPLINE":"client_helpline","INTENT_SURVEY_TELECONSULTATION":"teleconsultation","INTENT_SURVEY_IN_PERSON_VISIT":"in_person_visit","INTENT_SURVEY_CLIENT_APPLICATION":"client_application","INTENT_SURVEY_EMERGENCY_WITH_AMBULANCE":"emergency_with_ambulance","INTENT_SURVEY_EMERGENCY_NO_AMBULANCE":"emergency_no_ambulance"}') } }, t = {}; function n(a) { var i = t[a]; if (void 0 !== i) return i.exports; var s = t[a] = { id: a, loaded: !1, exports: {} }; return e[a].call(s.exports, s, s.exports, n), s.loaded = !0, s.exports } n.m = e, (() => { n.amdO = {} })(), (() => { var e = []; n.O = (t, a, i, s) => { if (!a) { var o = 1 / 0; for (u = 0; u < e.length; u++) { a = e[u][0], i = e[u][1], s = e[u][2]; for (var r = !0, l = 0; l < a.length; l++)(!1 & s || o >= s) && Object.keys(n.O).every((e => n.O[e](a[l]))) ? a.splice(l--, 1) : (r = !1, s < o && (o = s)); if (r) { e.splice(u--, 1); var c = i(); void 0 !== c && (t = c) } } return t } s = s || 0; for (var u = e.length; u > 0 && e[u - 1][2] > s; u--)e[u] = e[u - 1]; e[u] = [a, i, s] } })(), (() => { n.n = e => { var t = e && e.__esModule ? () => e["default"] : () => e; return n.d(t, { a: t }), t } })(), (() => { var e, t = Object.getPrototypeOf ? e => Object.getPrototypeOf(e) : e => e.__proto__; n.t = function (a, i) { if (1 & i && (a = this(a)), 8 & i) return a; if ("object" === typeof a && a) { if (4 & i && a.__esModule) return a; if (16 & i && "function" === typeof a.then) return a } var s = Object.create(null); n.r(s); var o = {}; e = e || [null, t({}), t([]), t(t)]; for (var r = 2 & i && a; "object" == typeof r && !~e.indexOf(r); r = t(r))Object.getOwnPropertyNames(r).forEach((e => o[e] = () => a[e])); return o["default"] = () => a, n.d(s, o), s } })(), (() => { n.d = (e, t) => { for (var a in t) n.o(t, a) && !n.o(e, a) && Object.defineProperty(e, a, { enumerable: !0, get: t[a] }) } })(), (() => { n.f = {}, n.e = e => Promise.all(Object.keys(n.f).reduce(((t, a) => (n.f[a](e, t), t)), [])) })(), (() => { n.u = e => "js/[33]" + ({ 117: "IntentSurveyAmbulance", 327: "PrivacyPolicy", 455: "messages-sk-yaml", 489: "MedicalCertification", 543: "messages-cs-yaml", 937: "privacy-policy-en-md", 962: "RichContent", 1108: "privacy-policy-es-md", 1475: "messages-it-yaml", 1757: "privacy-policy-it-md", 1840: "messages-uk-yaml", 1916: "messages-ro-yaml", 2038: "RiskFactors", 2219: "privacy-policy-pl-md", 2346: "privacy-policy-cs-md", 2577: "privacy-policy-de-md", 2981: "privacy-policy-sk-md", 3357: "IntentSurveyGenericRationale", 3419: "messages-pl-yaml", 3627: "terms-of-service-uk-md", 3947: "ReportAnIssue", 3997: "Message", 4224: "messages-pt-br-yaml", 4347: "terms-of-service-pt-br-md", 4713: "terms-of-service-de-md", 5035: "ForBusiness", 5146: "Why", 5149: "privacy-policy-ar-md", 5197: "terms-of-service-ar-md", 5254: "privacy-policy-uk-md", 5436: "Regions", 5878: "IntentSurveyContactForm", 5916: "Condition", 5932: "terms-of-service-nl-md", 6053: "InitialSymptoms", 6150: "terms-of-service-en-md", 6161: "ThirdPerson", 6165: "PatientAge", 6176: "IntentSurveyConsultMedicalProfessional", 6398: "terms-of-service-cs-md", 6710: "privacy-policy-fr-md", 6868: "PatientSex", 6884: "InterviewId", 7070: "terms-of-service-ru-md", 7194: "Gender", 7216: "IntentSurveyKindOfCare", 7221: "terms-of-service-es-md", 7311: "privacy-policy-zh-hans-md", 7481: "RecommendationExplanation", 7527: "privacy-policy-tr-md", 7579: "privacy-policy-nl-md", 7692: "messages-ru-yaml", 7897: "messages-es-yaml", 8058: "messages-tr-yaml", 8268: "privacy-policy-ru-md", 8320: "IntentSurveyRationale", 8389: "terms-of-service-pl-md", 8398: "messages-de-yaml", 8457: "IntelligentInterview", 8489: "terms-of-service-fr-md", 8581: "public-icons-[request]", 8631: "Agreement", 8685: "messages-nl-yaml", 8693: "messages-fr-yaml", 8743: "privacy-policy-pt-br-md", 8786: "TermsOfService", 8812: "terms-of-service-tr-md", 8944: "terms-of-service-sk-md", 8994: "terms-of-service-it-md", 9014: "Info", 9320: "terms-of-service-zh-hans-md", 9644: "messages-ar-yaml", 9671: "Languages", 9724: "messages-zh-hans-yaml" }[e] || e) + "." + { 16: "79fce590", 22: "20ff81ef", 72: "89ddfd81", 117: "eee44d19", 327: "f3fffde6", 332: "4d54b8e2", 369: "8fa2067a", 455: "90dd4b7a", 489: "667d2f99", 543: "4b63bc63", 569: "cbb25d5b", 679: "77773c22", 737: "bad600ed", 783: "b32d2655", 829: "562ee031", 937: "be77ad14", 962: "0b13b9e6", 965: "ecc7e9d5", 1082: "1c906219", 1108: "a8919818", 1196: "1a039828", 1301: "07106545", 1345: "0876268e", 1475: "e42e3db0", 1609: "0240be0b", 1757: "74cc3331", 1840: "55116007", 1916: "8af9ea8d", 1923: "1c9c1f55", 1994: "8b2b9611", 2038: "7e96ba1f", 2175: "b88c6aa2", 2206: "abf24df6", 2219: "9e3e0e2b", 2328: "c7732d42", 2346: "37d587ee", 2508: "c80cfa75", 2562: "0017468a", 2577: "25a935f2", 2609: "1e5f131e", 2652: "3bfc2178", 2730: "5e493260", 2798: "bc4837c6", 2835: "574f91df", 2965: "6d7e4e77", 2981: "4c2cbbaa", 3083: "e58bff84", 3310: "fdf65d26", 3357: "db7aa37a", 3419: "ccdc617a", 3485: "91a62cc6", 3627: "5290e240", 3639: "59cfe21b", 3688: "fa68373f", 3746: "8e3c17de", 3945: "6401809a", 3947: "b071670c", 3949: "e6906df2", 3971: "2b5e75f7", 3997: "a59aa6fc", 4189: "d7b6293d", 4217: "83df00b6", 4224: "9c697deb", 4347: "b3687c28", 4387: "ef99dee8", 4467: "aed3cf81", 4522: "644cb602", 4543: "de373cdd", 4685: "a53d1f46", 4713: "e897b460", 4823: "d591125c", 5017: "94d9542d", 5035: "54a07a64", 5146: "2470388a", 5149: "ed3eaa5b", 5197: "bca7cddf", 5205: "095710a9", 5254: "fdd49fa1", 5298: "aa65f877", 5351: "33195b82", 5404: "2113636a", 5436: "ebb4a469", 5579: "1e686777", 5631: "e89d807e", 5659: "489d60f5", 5878: "ef0f5840", 5916: "3e47207d", 5932: "c356ff1d", 6032: "d1a51628", 6053: "a98661fe", 6143: "fa964725", 6150: "a78cdec9", 6161: "d0a53267", 6165: "a8b4fd7c", 6176: "1d4812a6", 6398: "8af33556", 6427: "05d5ac67", 6612: "b30b6e81", 6710: "0ccf749f", 6863: "262d0100", 6868: "e91bcb94", 6884: "36561ca5", 6905: "c4812d2b", 6938: "1aabb289", 7069: "99c3247d", 7070: "927e64a2", 7130: "2da64a1f", 7194: "84c3c1f8", 7216: "993fc58d", 7221: "225380ed", 7311: "061f0fd4", 7320: "ef53212b", 7436: "3ccf1385", 7481: "d8d078fe", 7512: "39579de3", 7527: "4523bd23", 7579: "dc9a04c1", 7692: "a5ef0fa0", 7897: "777cb44d", 7977: "995270e9", 8025: "d35a4cfc", 8058: "a9093dab", 8167: "66712508", 8220: "57043912", 8268: "1ec843df", 8320: "a087c040", 8338: "91a45fce", 8389: "e0e0c026", 8398: "440ca5e6", 8433: "5e36a675", 8439: "62cef24b", 8457: "83d8a72f", 8489: "fa16bdff", 8581: "6c856e23", 8591: "4d428de9", 8631: "08bc772b", 8683: "d12b5767", 8685: "c60d2207", 8693: "d8f93ed7", 8743: "df6be160", 8747: "3e2034e8", 8786: "8e6af45d", 8803: "992a3d0d", 8812: "9b5f9a21", 8838: "40f7e369", 8944: "dd065bc0", 8994: "e99d9012", 9014: "4f9403cb", 9196: "df37962b", 9320: "53badd4e", 9434: "9f7afb3f", 9461: "68ce6d3c", 9534: "da983fdd", 9625: "059ff071", 9644: "cfc518ba", 9671: "1553c4fd", 9724: "a18e2775", 9744: "f8a9fc6e", 9747: "1f9b306c", 9787: "b1f32469", 9896: "240cdc7b", 9982: "e79ec967" }[e] + ".js" })(), (() => { n.miniCssF = e => "css/[33]" + { 117: "IntentSurveyAmbulance", 327: "PrivacyPolicy", 489: "MedicalCertification", 962: "RichContent", 2038: "RiskFactors", 3357: "IntentSurveyGenericRationale", 3947: "ReportAnIssue", 3997: "Message", 5035: "ForBusiness", 5436: "Regions", 5878: "IntentSurveyContactForm", 5916: "Condition", 6053: "InitialSymptoms", 6161: "ThirdPerson", 6165: "PatientAge", 6176: "IntentSurveyConsultMedicalProfessional", 6868: "PatientSex", 6884: "InterviewId", 7216: "IntentSurveyKindOfCare", 7481: "RecommendationExplanation", 8457: "IntelligentInterview", 8631: "Agreement", 8786: "TermsOfService", 9014: "Info", 9671: "Languages" }[e] + "." + { 117: "7f5f7c6b", 327: "34229ed7", 489: "1da57a5e", 962: "08db8d98", 2038: "f43e6833", 3357: "98c9e063", 3947: "1c4dcdcc", 3997: "a1612b45", 5035: "1f0f499b", 5436: "d104607c", 5878: "3691e710", 5916: "6a9833dc", 6053: "4dd2cc91", 6161: "ca608cbc", 6165: "8d026781", 6176: "7f5f7c6b", 6868: "c632e36c", 6884: "a3c6f914", 7216: "3691e710", 7481: "de11112b", 8457: "bde26b94", 8631: "f2efe262", 8786: "5d390e20", 9014: "07c6202c", 9671: "e498e05b" }[e] + ".css" })(), (() => { n.g = function () { if ("object" === typeof globalThis) return globalThis; try { return this || new Function("return this")() } catch (e) { if ("object" === typeof window) return window } }() })(), (() => { n.hmd = e => (e = Object.create(e), e.children || (e.children = []), Object.defineProperty(e, "exports", { enumerable: !0, set: () => { throw new Error("ES Modules may not assign module.exports or exports.*, Use ESM export syntax, instead: " + e.id) } }), e) })(), (() => { n.o = (e, t) => Object.prototype.hasOwnProperty.call(e, t) })(), (() => { var e = {}, t = "@symptom-checker/app:"; n.l = (a, i, s, o) => { if (e[a]) e[a].push(i); else { var r, l; if (void 0 !== s) for (var c = document.getElementsByTagName("script"), u = 0; u < c.length; u++) { var d = c[u]; if (d.getAttribute("src") == a || d.getAttribute("data-webpack") == t + s) { r = d; break } } r || (l = !0, r = document.createElement("script"), r.charset = "utf-8", r.timeout = 120, n.nc && r.setAttribute("nonce", n.nc), r.setAttribute("data-webpack", t + s), r.src = a), e[a] = [i]; var m = (t, n) => { r.onerror = r.onload = null, clearTimeout(v); var i = e[a]; if (delete e[a], r.parentNode && r.parentNode.removeChild(r), i && i.forEach((e => e(n))), t) return t(n) }, v = setTimeout(m.bind(null, void 0, { type: "timeout", target: r }), 12e4); r.onerror = m.bind(null, r.onerror), r.onload = m.bind(null, r.onload), l && document.head.appendChild(r) } } })(), (() => { n.r = e => { "undefined" !== typeof Symbol && Symbol.toStringTag && Object.defineProperty(e, Symbol.toStringTag, { value: "Module" }), Object.defineProperty(e, "__esModule", { value: !0 }) } })(), (() => { n.p = "/" })(), (() => { if ("undefined" !== typeof document) { var e = (e, t, n, a, i) => { var s = document.createElement("link"); s.rel = "stylesheet", s.type = "text/css"; var o = n => { if (s.onerror = s.onload = null, "load" === n.type) a(); else { var o = n && ("load" === n.type ? "missing" : n.type), r = n && n.target && n.target.href || t, l = new Error("Loading CSS chunk " + e + " failed.\n(" + r + ")"); l.code = "CSS_CHUNK_LOAD_FAILED", l.type = o, l.request = r, s.parentNode && s.parentNode.removeChild(s), i(l) } }; return s.onerror = s.onload = o, s.href = t, n ? n.parentNode.insertBefore(s, n.nextSibling) : document.head.appendChild(s), s }, t = (e, t) => { for (var n = document.getElementsByTagName("link"), a = 0; a < n.length; a++) { var i = n[a], s = i.getAttribute("data-href") || i.getAttribute("href"); if ("stylesheet" === i.rel && (s === e || s === t)) return i } var o = document.getElementsByTagName("style"); for (a = 0; a < o.length; a++) { i = o[a], s = i.getAttribute("data-href"); if (s === e || s === t) return i } }, a = a => new Promise(((i, s) => { var o = n.miniCssF(a), r = n.p + o; if (t(o, r)) return i(); e(a, r, null, i, s) })), i = { 4826: 0 }; n.f.miniCss = (e, t) => { var n = { 117: 1, 327: 1, 489: 1, 962: 1, 2038: 1, 3357: 1, 3947: 1, 3997: 1, 5035: 1, 5436: 1, 5878: 1, 5916: 1, 6053: 1, 6161: 1, 6165: 1, 6176: 1, 6868: 1, 6884: 1, 7216: 1, 7481: 1, 8457: 1, 8631: 1, 8786: 1, 9014: 1, 9671: 1 }; i[e] ? t.push(i[e]) : 0 !== i[e] && n[e] && t.push(i[e] = a(e).then((() => { i[e] = 0 }), (t => { throw delete i[e], t }))) } } })(), (() => { var e = { 4826: 0 }; n.f.j = (t, a) => { var i = n.o(e, t) ? e[t] : void 0; if (0 !== i) if (i) a.push(i[2]); else { var s = new Promise(((n, a) => i = e[t] = [n, a])); a.push(i[2] = s); var o = n.p + n.u(t), r = new Error, l = a => { if (n.o(e, t) && (i = e[t], 0 !== i && (e[t] = void 0), i)) { var s = a && ("load" === a.type ? "missing" : a.type), o = a && a.target && a.target.src; r.message = "Loading chunk " + t + " failed.\n(" + s + ": " + o + ")", r.name = "ChunkLoadError", r.type = s, r.request = o, i[1](r) } }; n.l(o, l, "chunk-" + t, t) } }, n.O.j = t => 0 === e[t]; var t = (t, a) => { var i, s, o = a[0], r = a[1], l = a[2], c = 0; if (o.some((t => 0 !== e[t]))) { for (i in r) n.o(r, i) && (n.m[i] = r[i]); if (l) var u = l(n) } for (t && t(a); c < o.length; c++)s = o[c], n.o(e, s) && e[s] && e[s][0](), e[s] = 0; return n.O(u) }, a = self["webpackChunk_symptom_checker_app"] = self["webpackChunk_symptom_checker_app"] || []; a.forEach(t.bind(null, 0)), a.push = t.bind(null, a.push.bind(a)) })(); var a = n.O(void 0, [4998], (() => n(80743))); a = n.O(a) })();
//# sourceMappingURL=[33]index.0c96eea8.js.map